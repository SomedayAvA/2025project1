// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interfaces.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Interfaces_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Interfaces_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Interfaces_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Interfaces_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[101]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Interfaces_2eproto;
namespace interfaces {
class msgAIDType;
class msgAIDTypeDefaultTypeInternal;
extern msgAIDTypeDefaultTypeInternal _msgAIDType_default_instance_;
class msgAppIDAndPriority;
class msgAppIDAndPriorityDefaultTypeInternal;
extern msgAppIDAndPriorityDefaultTypeInternal _msgAppIDAndPriority_default_instance_;
class msgApplicationID;
class msgApplicationIDDefaultTypeInternal;
extern msgApplicationIDDefaultTypeInternal _msgApplicationID_default_instance_;
class msgBanTicketsAck_Police2RA;
class msgBanTicketsAck_Police2RADefaultTypeInternal;
extern msgBanTicketsAck_Police2RADefaultTypeInternal _msgBanTicketsAck_Police2RA_default_instance_;
class msgBanTicketsReq_Police2RA;
class msgBanTicketsReq_Police2RADefaultTypeInternal;
extern msgBanTicketsReq_Police2RADefaultTypeInternal _msgBanTicketsReq_Police2RA_default_instance_;
class msgBanTicketsReq_Police2RA_msgBannedTickets;
class msgBanTicketsReq_Police2RA_msgBannedTicketsDefaultTypeInternal;
extern msgBanTicketsReq_Police2RA_msgBannedTicketsDefaultTypeInternal _msgBanTicketsReq_Police2RA_msgBannedTickets_default_instance_;
class msgBanTicketsReq_RA2PCA;
class msgBanTicketsReq_RA2PCADefaultTypeInternal;
extern msgBanTicketsReq_RA2PCADefaultTypeInternal _msgBanTicketsReq_RA2PCA_default_instance_;
class msgBanTicketsReq_RA2PCA_msgBannedTickets;
class msgBanTicketsReq_RA2PCA_msgBannedTicketsDefaultTypeInternal;
extern msgBanTicketsReq_RA2PCA_msgBannedTicketsDefaultTypeInternal _msgBanTicketsReq_RA2PCA_msgBannedTickets_default_instance_;
class msgBanTicketsRes_PCA2RA;
class msgBanTicketsRes_PCA2RADefaultTypeInternal;
extern msgBanTicketsRes_PCA2RADefaultTypeInternal _msgBanTicketsRes_PCA2RA_default_instance_;
class msgBanTicketsRes_PCA2RA_msgBannedTickets;
class msgBanTicketsRes_PCA2RA_msgBannedTicketsDefaultTypeInternal;
extern msgBanTicketsRes_PCA2RA_msgBannedTicketsDefaultTypeInternal _msgBanTicketsRes_PCA2RA_msgBannedTickets_default_instance_;
class msgBanTicketsRes_RA2Police;
class msgBanTicketsRes_RA2PoliceDefaultTypeInternal;
extern msgBanTicketsRes_RA2PoliceDefaultTypeInternal _msgBanTicketsRes_RA2Police_default_instance_;
class msgBanTicketsRes_RA2Police_msgBannedTickets;
class msgBanTicketsRes_RA2Police_msgBannedTicketsDefaultTypeInternal;
extern msgBanTicketsRes_RA2Police_msgBannedTicketsDefaultTypeInternal _msgBanTicketsRes_RA2Police_msgBannedTickets_default_instance_;
class msgCAScope;
class msgCAScopeDefaultTypeInternal;
extern msgCAScopeDefaultTypeInternal _msgCAScope_default_instance_;
class msgCRLType;
class msgCRLTypeDefaultTypeInternal;
extern msgCRLTypeDefaultTypeInternal _msgCRLType_default_instance_;
class msgCertSpecificData;
class msgCertSpecificDataDefaultTypeInternal;
extern msgCertSpecificDataDefaultTypeInternal _msgCertSpecificData_default_instance_;
class msgCircularRegion;
class msgCircularRegionDefaultTypeInternal;
extern msgCircularRegionDefaultTypeInternal _msgCircularRegion_default_instance_;
class msgECPublicKey;
class msgECPublicKeyDefaultTypeInternal;
extern msgECPublicKeyDefaultTypeInternal _msgECPublicKey_default_instance_;
class msgError;
class msgErrorDefaultTypeInternal;
extern msgErrorDefaultTypeInternal _msgError_default_instance_;
class msgForeignTicketReq;
class msgForeignTicketReqDefaultTypeInternal;
extern msgForeignTicketReqDefaultTypeInternal _msgForeignTicketReq_default_instance_;
class msgGeographicRegion;
class msgGeographicRegionDefaultTypeInternal;
extern msgGeographicRegionDefaultTypeInternal _msgGeographicRegion_default_instance_;
class msgIDAndDate;
class msgIDAndDateDefaultTypeInternal;
extern msgIDAndDateDefaultTypeInternal _msgIDAndDate_default_instance_;
class msgIdentifiedScope;
class msgIdentifiedScopeDefaultTypeInternal;
extern msgIdentifiedScopeDefaultTypeInternal _msgIdentifiedScope_default_instance_;
class msgOBUIdentifiedScope;
class msgOBUIdentifiedScopeDefaultTypeInternal;
extern msgOBUIdentifiedScopeDefaultTypeInternal _msgOBUIdentifiedScope_default_instance_;
class msgPoliceConfig;
class msgPoliceConfigDefaultTypeInternal;
extern msgPoliceConfigDefaultTypeInternal _msgPoliceConfig_default_instance_;
class msgPsnymCRLFormat;
class msgPsnymCRLFormatDefaultTypeInternal;
extern msgPsnymCRLFormatDefaultTypeInternal _msgPsnymCRLFormat_default_instance_;
class msgPsnymCRLReq_V2PCA;
class msgPsnymCRLReq_V2PCADefaultTypeInternal;
extern msgPsnymCRLReq_V2PCADefaultTypeInternal _msgPsnymCRLReq_V2PCA_default_instance_;
class msgPsnymCRLRes_PCA2V;
class msgPsnymCRLRes_PCA2VDefaultTypeInternal;
extern msgPsnymCRLRes_PCA2VDefaultTypeInternal _msgPsnymCRLRes_PCA2V_default_instance_;
class msgPsnymCertAck_V2PCA;
class msgPsnymCertAck_V2PCADefaultTypeInternal;
extern msgPsnymCertAck_V2PCADefaultTypeInternal _msgPsnymCertAck_V2PCA_default_instance_;
class msgPsnymCertFormat;
class msgPsnymCertFormatDefaultTypeInternal;
extern msgPsnymCertFormatDefaultTypeInternal _msgPsnymCertFormat_default_instance_;
class msgPsnymCertReq_V2PCA;
class msgPsnymCertReq_V2PCADefaultTypeInternal;
extern msgPsnymCertReq_V2PCADefaultTypeInternal _msgPsnymCertReq_V2PCA_default_instance_;
class msgPsnymCertRes_PCA2V;
class msgPsnymCertRes_PCA2VDefaultTypeInternal;
extern msgPsnymCertRes_PCA2VDefaultTypeInternal _msgPsnymCertRes_PCA2V_default_instance_;
class msgPsnymKeysStorage;
class msgPsnymKeysStorageDefaultTypeInternal;
extern msgPsnymKeysStorageDefaultTypeInternal _msgPsnymKeysStorage_default_instance_;
class msgPsnymOCSPReq_V2PCA;
class msgPsnymOCSPReq_V2PCADefaultTypeInternal;
extern msgPsnymOCSPReq_V2PCADefaultTypeInternal _msgPsnymOCSPReq_V2PCA_default_instance_;
class msgPsnymOCSPRes_PCA2V;
class msgPsnymOCSPRes_PCA2VDefaultTypeInternal;
extern msgPsnymOCSPRes_PCA2VDefaultTypeInternal _msgPsnymOCSPRes_PCA2V_default_instance_;
class msgPsnymProvisionValidationReq_PCA2PVR;
class msgPsnymProvisionValidationReq_PCA2PVRDefaultTypeInternal;
extern msgPsnymProvisionValidationReq_PCA2PVRDefaultTypeInternal _msgPsnymProvisionValidationReq_PCA2PVR_default_instance_;
class msgPsnymProvisionValidationRes_PVR2PCA;
class msgPsnymProvisionValidationRes_PVR2PCADefaultTypeInternal;
extern msgPsnymProvisionValidationRes_PVR2PCADefaultTypeInternal _msgPsnymProvisionValidationRes_PVR2PCA_default_instance_;
class msgPsnymResolutionAck_Police2RA;
class msgPsnymResolutionAck_Police2RADefaultTypeInternal;
extern msgPsnymResolutionAck_Police2RADefaultTypeInternal _msgPsnymResolutionAck_Police2RA_default_instance_;
class msgPsnymResolutionReq_Police2RA;
class msgPsnymResolutionReq_Police2RADefaultTypeInternal;
extern msgPsnymResolutionReq_Police2RADefaultTypeInternal _msgPsnymResolutionReq_Police2RA_default_instance_;
class msgPsnymResolutionReq_RA2LTCA;
class msgPsnymResolutionReq_RA2LTCADefaultTypeInternal;
extern msgPsnymResolutionReq_RA2LTCADefaultTypeInternal _msgPsnymResolutionReq_RA2LTCA_default_instance_;
class msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution;
class msgPsnymResolutionReq_RA2LTCA_msgPsnymResolutionDefaultTypeInternal;
extern msgPsnymResolutionReq_RA2LTCA_msgPsnymResolutionDefaultTypeInternal _msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution_default_instance_;
class msgPsnymResolutionReq_RA2PCA;
class msgPsnymResolutionReq_RA2PCADefaultTypeInternal;
extern msgPsnymResolutionReq_RA2PCADefaultTypeInternal _msgPsnymResolutionReq_RA2PCA_default_instance_;
class msgPsnymResolutionRes_LTCA2RA;
class msgPsnymResolutionRes_LTCA2RADefaultTypeInternal;
extern msgPsnymResolutionRes_LTCA2RADefaultTypeInternal _msgPsnymResolutionRes_LTCA2RA_default_instance_;
class msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution;
class msgPsnymResolutionRes_LTCA2RA_msgPsnymResolutionDefaultTypeInternal;
extern msgPsnymResolutionRes_LTCA2RA_msgPsnymResolutionDefaultTypeInternal _msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution_default_instance_;
class msgPsnymResolutionRes_PCA2RA;
class msgPsnymResolutionRes_PCA2RADefaultTypeInternal;
extern msgPsnymResolutionRes_PCA2RADefaultTypeInternal _msgPsnymResolutionRes_PCA2RA_default_instance_;
class msgPsnymResolutionRes_PCA2RA_msgPsnymResolution;
class msgPsnymResolutionRes_PCA2RA_msgPsnymResolutionDefaultTypeInternal;
extern msgPsnymResolutionRes_PCA2RA_msgPsnymResolutionDefaultTypeInternal _msgPsnymResolutionRes_PCA2RA_msgPsnymResolution_default_instance_;
class msgPsnymResolutionRes_RA2Police;
class msgPsnymResolutionRes_RA2PoliceDefaultTypeInternal;
extern msgPsnymResolutionRes_RA2PoliceDefaultTypeInternal _msgPsnymResolutionRes_RA2Police_default_instance_;
class msgPsnymResolutionRes_RA2Police_msgPsnymResolution;
class msgPsnymResolutionRes_RA2Police_msgPsnymResolutionDefaultTypeInternal;
extern msgPsnymResolutionRes_RA2Police_msgPsnymResolutionDefaultTypeInternal _msgPsnymResolutionRes_RA2Police_msgPsnymResolution_default_instance_;
class msgPsnymRevocationStatus;
class msgPsnymRevocationStatusDefaultTypeInternal;
extern msgPsnymRevocationStatusDefaultTypeInternal _msgPsnymRevocationStatus_default_instance_;
class msgRectangularRegion;
class msgRectangularRegionDefaultTypeInternal;
extern msgRectangularRegionDefaultTypeInternal _msgRectangularRegion_default_instance_;
class msgRegionType;
class msgRegionTypeDefaultTypeInternal;
extern msgRegionTypeDefaultTypeInternal _msgRegionType_default_instance_;
class msgReqProfile;
class msgReqProfileDefaultTypeInternal;
extern msgReqProfileDefaultTypeInternal _msgReqProfile_default_instance_;
class msgRequestScopeType;
class msgRequestScopeTypeDefaultTypeInternal;
extern msgRequestScopeTypeDefaultTypeInternal _msgRequestScopeType_default_instance_;
class msgReversePsnymResolutionReq_Police2RA;
class msgReversePsnymResolutionReq_Police2RADefaultTypeInternal;
extern msgReversePsnymResolutionReq_Police2RADefaultTypeInternal _msgReversePsnymResolutionReq_Police2RA_default_instance_;
class msgReversePsnymResolutionReq_RA2LTCA;
class msgReversePsnymResolutionReq_RA2LTCADefaultTypeInternal;
extern msgReversePsnymResolutionReq_RA2LTCADefaultTypeInternal _msgReversePsnymResolutionReq_RA2LTCA_default_instance_;
class msgReversePsnymResolutionReq_RA2PCA;
class msgReversePsnymResolutionReq_RA2PCADefaultTypeInternal;
extern msgReversePsnymResolutionReq_RA2PCADefaultTypeInternal _msgReversePsnymResolutionReq_RA2PCA_default_instance_;
class msgReversePsnymResolutionReq_RA2PCA_msgTicket;
class msgReversePsnymResolutionReq_RA2PCA_msgTicketDefaultTypeInternal;
extern msgReversePsnymResolutionReq_RA2PCA_msgTicketDefaultTypeInternal _msgReversePsnymResolutionReq_RA2PCA_msgTicket_default_instance_;
class msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution;
class msgReversePsnymResolutionReq_RA2PCA_msgTicketResolutionDefaultTypeInternal;
extern msgReversePsnymResolutionReq_RA2PCA_msgTicketResolutionDefaultTypeInternal _msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution_default_instance_;
class msgReversePsnymResolutionRes_LTCA2RA;
class msgReversePsnymResolutionRes_LTCA2RADefaultTypeInternal;
extern msgReversePsnymResolutionRes_LTCA2RADefaultTypeInternal _msgReversePsnymResolutionRes_LTCA2RA_default_instance_;
class msgReversePsnymResolutionRes_LTCA2RA_msgTicket;
class msgReversePsnymResolutionRes_LTCA2RA_msgTicketDefaultTypeInternal;
extern msgReversePsnymResolutionRes_LTCA2RA_msgTicketDefaultTypeInternal _msgReversePsnymResolutionRes_LTCA2RA_msgTicket_default_instance_;
class msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution;
class msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolutionDefaultTypeInternal;
extern msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolutionDefaultTypeInternal _msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution_default_instance_;
class msgReversePsnymResolutionRes_PCA2RA;
class msgReversePsnymResolutionRes_PCA2RADefaultTypeInternal;
extern msgReversePsnymResolutionRes_PCA2RADefaultTypeInternal _msgReversePsnymResolutionRes_PCA2RA_default_instance_;
class msgReversePsnymResolutionRes_PCA2RA_msgPsnym;
class msgReversePsnymResolutionRes_PCA2RA_msgPsnymDefaultTypeInternal;
extern msgReversePsnymResolutionRes_PCA2RA_msgPsnymDefaultTypeInternal _msgReversePsnymResolutionRes_PCA2RA_msgPsnym_default_instance_;
class msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution;
class msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolutionDefaultTypeInternal;
extern msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolutionDefaultTypeInternal _msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution_default_instance_;
class msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution;
class msgReversePsnymResolutionRes_PCA2RA_msgTicketResolutionDefaultTypeInternal;
extern msgReversePsnymResolutionRes_PCA2RA_msgTicketResolutionDefaultTypeInternal _msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution_default_instance_;
class msgReversePsnymResolutionRes_RA2Police;
class msgReversePsnymResolutionRes_RA2PoliceDefaultTypeInternal;
extern msgReversePsnymResolutionRes_RA2PoliceDefaultTypeInternal _msgReversePsnymResolutionRes_RA2Police_default_instance_;
class msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution;
class msgReversePsnymResolutionRes_RA2Police_msgPsnymResolutionDefaultTypeInternal;
extern msgReversePsnymResolutionRes_RA2Police_msgPsnymResolutionDefaultTypeInternal _msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution_default_instance_;
class msgRevokePsnymCertReq_P2RA;
class msgRevokePsnymCertReq_P2RADefaultTypeInternal;
extern msgRevokePsnymCertReq_P2RADefaultTypeInternal _msgRevokePsnymCertReq_P2RA_default_instance_;
class msgRevokePsnymCertReq_RA2PCA;
class msgRevokePsnymCertReq_RA2PCADefaultTypeInternal;
extern msgRevokePsnymCertReq_RA2PCADefaultTypeInternal _msgRevokePsnymCertReq_RA2PCA_default_instance_;
class msgRevokePsnymCertRes_PCA2RA;
class msgRevokePsnymCertRes_PCA2RADefaultTypeInternal;
extern msgRevokePsnymCertRes_PCA2RADefaultTypeInternal _msgRevokePsnymCertRes_PCA2RA_default_instance_;
class msgRevokePsnymCertRes_RA2P;
class msgRevokePsnymCertRes_RA2PDefaultTypeInternal;
extern msgRevokePsnymCertRes_RA2PDefaultTypeInternal _msgRevokePsnymCertRes_RA2P_default_instance_;
class msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo;
class msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfoDefaultTypeInternal;
extern msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfoDefaultTypeInternal _msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo_default_instance_;
class msgRevokeX509CertReq_RA2LTCA;
class msgRevokeX509CertReq_RA2LTCADefaultTypeInternal;
extern msgRevokeX509CertReq_RA2LTCADefaultTypeInternal _msgRevokeX509CertReq_RA2LTCA_default_instance_;
class msgSignature;
class msgSignatureDefaultTypeInternal;
extern msgSignatureDefaultTypeInternal _msgSignature_default_instance_;
class msgSignerIdentifierType;
class msgSignerIdentifierTypeDefaultTypeInternal;
extern msgSignerIdentifierTypeDefaultTypeInternal _msgSignerIdentifierType_default_instance_;
class msgSignerInfo;
class msgSignerInfoDefaultTypeInternal;
extern msgSignerInfoDefaultTypeInternal _msgSignerInfo_default_instance_;
class msgSubType;
class msgSubTypeDefaultTypeInternal;
extern msgSubTypeDefaultTypeInternal _msgSubType_default_instance_;
class msgSubTypeFlags;
class msgSubTypeFlagsDefaultTypeInternal;
extern msgSubTypeFlagsDefaultTypeInternal _msgSubTypeFlags_default_instance_;
class msgTicketFormat;
class msgTicketFormatDefaultTypeInternal;
extern msgTicketFormatDefaultTypeInternal _msgTicketFormat_default_instance_;
class msgTicketProvisionValidationReq_LTCA2TVR;
class msgTicketProvisionValidationReq_LTCA2TVRDefaultTypeInternal;
extern msgTicketProvisionValidationReq_LTCA2TVRDefaultTypeInternal _msgTicketProvisionValidationReq_LTCA2TVR_default_instance_;
class msgTicketProvisionValidationRes_TVR2LTCA;
class msgTicketProvisionValidationRes_TVR2LTCADefaultTypeInternal;
extern msgTicketProvisionValidationRes_TVR2LTCADefaultTypeInternal _msgTicketProvisionValidationRes_TVR2LTCA_default_instance_;
class msgTicketReq;
class msgTicketReqDefaultTypeInternal;
extern msgTicketReqDefaultTypeInternal _msgTicketReq_default_instance_;
class msgTicketRes;
class msgTicketResDefaultTypeInternal;
extern msgTicketResDefaultTypeInternal _msgTicketRes_default_instance_;
class msgToBeSignedCRL;
class msgToBeSignedCRLDefaultTypeInternal;
extern msgToBeSignedCRLDefaultTypeInternal _msgToBeSignedCRL_default_instance_;
class msgToBeSignedCSR;
class msgToBeSignedCSRDefaultTypeInternal;
extern msgToBeSignedCSRDefaultTypeInternal _msgToBeSignedCSR_default_instance_;
class msgToBeSignedWAVECertificate;
class msgToBeSignedWAVECertificateDefaultTypeInternal;
extern msgToBeSignedWAVECertificateDefaultTypeInternal _msgToBeSignedWAVECertificate_default_instance_;
class msgTwoDLocation;
class msgTwoDLocationDefaultTypeInternal;
extern msgTwoDLocationDefaultTypeInternal _msgTwoDLocation_default_instance_;
class msgUpgradeConfigurationReq_Client2Server;
class msgUpgradeConfigurationReq_Client2ServerDefaultTypeInternal;
extern msgUpgradeConfigurationReq_Client2ServerDefaultTypeInternal _msgUpgradeConfigurationReq_Client2Server_default_instance_;
class msgUpgradeConfigurationRes_Server2Client;
class msgUpgradeConfigurationRes_Server2ClientDefaultTypeInternal;
extern msgUpgradeConfigurationRes_Server2ClientDefaultTypeInternal _msgUpgradeConfigurationRes_Server2Client_default_instance_;
class msgVPKILibConfig;
class msgVPKILibConfigDefaultTypeInternal;
extern msgVPKILibConfigDefaultTypeInternal _msgVPKILibConfig_default_instance_;
class msgVPKILibConfig_msgPsnymPolicy;
class msgVPKILibConfig_msgPsnymPolicyDefaultTypeInternal;
extern msgVPKILibConfig_msgPsnymPolicyDefaultTypeInternal _msgVPKILibConfig_msgPsnymPolicy_default_instance_;
class msgVPKILibConfig_msgTicketPolicy;
class msgVPKILibConfig_msgTicketPolicyDefaultTypeInternal;
extern msgVPKILibConfig_msgTicketPolicyDefaultTypeInternal _msgVPKILibConfig_msgTicketPolicy_default_instance_;
class msgVehicleAttributes;
class msgVehicleAttributesDefaultTypeInternal;
extern msgVehicleAttributesDefaultTypeInternal _msgVehicleAttributes_default_instance_;
class msgVehicleConfig;
class msgVehicleConfigDefaultTypeInternal;
extern msgVehicleConfigDefaultTypeInternal _msgVehicleConfig_default_instance_;
class msgVoucherReq_V2LTCA;
class msgVoucherReq_V2LTCADefaultTypeInternal;
extern msgVoucherReq_V2LTCADefaultTypeInternal _msgVoucherReq_V2LTCA_default_instance_;
class msgVoucherRes_LTCA2V;
class msgVoucherRes_LTCA2VDefaultTypeInternal;
extern msgVoucherRes_LTCA2VDefaultTypeInternal _msgVoucherRes_LTCA2V_default_instance_;
class msgWAVECRL;
class msgWAVECRLDefaultTypeInternal;
extern msgWAVECRLDefaultTypeInternal _msgWAVECRL_default_instance_;
class msgWAVECertificateRequest;
class msgWAVECertificateRequestDefaultTypeInternal;
extern msgWAVECertificateRequestDefaultTypeInternal _msgWAVECertificateRequest_default_instance_;
class msgWAVECertificateResponse;
class msgWAVECertificateResponseDefaultTypeInternal;
extern msgWAVECertificateResponseDefaultTypeInternal _msgWAVECertificateResponse_default_instance_;
class msgWSASignerScope;
class msgWSASignerScopeDefaultTypeInternal;
extern msgWSASignerScopeDefaultTypeInternal _msgWSASignerScope_default_instance_;
class msgX509CertReq_V2LTCA;
class msgX509CertReq_V2LTCADefaultTypeInternal;
extern msgX509CertReq_V2LTCADefaultTypeInternal _msgX509CertReq_V2LTCA_default_instance_;
class msgX509CertRes_LTCA2V;
class msgX509CertRes_LTCA2VDefaultTypeInternal;
extern msgX509CertRes_LTCA2VDefaultTypeInternal _msgX509CertRes_LTCA2V_default_instance_;
}  // namespace interfaces
PROTOBUF_NAMESPACE_OPEN
template<> ::interfaces::msgAIDType* Arena::CreateMaybeMessage<::interfaces::msgAIDType>(Arena*);
template<> ::interfaces::msgAppIDAndPriority* Arena::CreateMaybeMessage<::interfaces::msgAppIDAndPriority>(Arena*);
template<> ::interfaces::msgApplicationID* Arena::CreateMaybeMessage<::interfaces::msgApplicationID>(Arena*);
template<> ::interfaces::msgBanTicketsAck_Police2RA* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsAck_Police2RA>(Arena*);
template<> ::interfaces::msgBanTicketsReq_Police2RA* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsReq_Police2RA>(Arena*);
template<> ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets>(Arena*);
template<> ::interfaces::msgBanTicketsReq_RA2PCA* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsReq_RA2PCA>(Arena*);
template<> ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets>(Arena*);
template<> ::interfaces::msgBanTicketsRes_PCA2RA* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsRes_PCA2RA>(Arena*);
template<> ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets>(Arena*);
template<> ::interfaces::msgBanTicketsRes_RA2Police* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsRes_RA2Police>(Arena*);
template<> ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* Arena::CreateMaybeMessage<::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets>(Arena*);
template<> ::interfaces::msgCAScope* Arena::CreateMaybeMessage<::interfaces::msgCAScope>(Arena*);
template<> ::interfaces::msgCRLType* Arena::CreateMaybeMessage<::interfaces::msgCRLType>(Arena*);
template<> ::interfaces::msgCertSpecificData* Arena::CreateMaybeMessage<::interfaces::msgCertSpecificData>(Arena*);
template<> ::interfaces::msgCircularRegion* Arena::CreateMaybeMessage<::interfaces::msgCircularRegion>(Arena*);
template<> ::interfaces::msgECPublicKey* Arena::CreateMaybeMessage<::interfaces::msgECPublicKey>(Arena*);
template<> ::interfaces::msgError* Arena::CreateMaybeMessage<::interfaces::msgError>(Arena*);
template<> ::interfaces::msgForeignTicketReq* Arena::CreateMaybeMessage<::interfaces::msgForeignTicketReq>(Arena*);
template<> ::interfaces::msgGeographicRegion* Arena::CreateMaybeMessage<::interfaces::msgGeographicRegion>(Arena*);
template<> ::interfaces::msgIDAndDate* Arena::CreateMaybeMessage<::interfaces::msgIDAndDate>(Arena*);
template<> ::interfaces::msgIdentifiedScope* Arena::CreateMaybeMessage<::interfaces::msgIdentifiedScope>(Arena*);
template<> ::interfaces::msgOBUIdentifiedScope* Arena::CreateMaybeMessage<::interfaces::msgOBUIdentifiedScope>(Arena*);
template<> ::interfaces::msgPoliceConfig* Arena::CreateMaybeMessage<::interfaces::msgPoliceConfig>(Arena*);
template<> ::interfaces::msgPsnymCRLFormat* Arena::CreateMaybeMessage<::interfaces::msgPsnymCRLFormat>(Arena*);
template<> ::interfaces::msgPsnymCRLReq_V2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymCRLReq_V2PCA>(Arena*);
template<> ::interfaces::msgPsnymCRLRes_PCA2V* Arena::CreateMaybeMessage<::interfaces::msgPsnymCRLRes_PCA2V>(Arena*);
template<> ::interfaces::msgPsnymCertAck_V2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymCertAck_V2PCA>(Arena*);
template<> ::interfaces::msgPsnymCertFormat* Arena::CreateMaybeMessage<::interfaces::msgPsnymCertFormat>(Arena*);
template<> ::interfaces::msgPsnymCertReq_V2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymCertReq_V2PCA>(Arena*);
template<> ::interfaces::msgPsnymCertRes_PCA2V* Arena::CreateMaybeMessage<::interfaces::msgPsnymCertRes_PCA2V>(Arena*);
template<> ::interfaces::msgPsnymKeysStorage* Arena::CreateMaybeMessage<::interfaces::msgPsnymKeysStorage>(Arena*);
template<> ::interfaces::msgPsnymOCSPReq_V2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymOCSPReq_V2PCA>(Arena*);
template<> ::interfaces::msgPsnymOCSPRes_PCA2V* Arena::CreateMaybeMessage<::interfaces::msgPsnymOCSPRes_PCA2V>(Arena*);
template<> ::interfaces::msgPsnymProvisionValidationReq_PCA2PVR* Arena::CreateMaybeMessage<::interfaces::msgPsnymProvisionValidationReq_PCA2PVR>(Arena*);
template<> ::interfaces::msgPsnymProvisionValidationRes_PVR2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymProvisionValidationRes_PVR2PCA>(Arena*);
template<> ::interfaces::msgPsnymResolutionAck_Police2RA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionAck_Police2RA>(Arena*);
template<> ::interfaces::msgPsnymResolutionReq_Police2RA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionReq_Police2RA>(Arena*);
template<> ::interfaces::msgPsnymResolutionReq_RA2LTCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionReq_RA2LTCA>(Arena*);
template<> ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgPsnymResolutionReq_RA2PCA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionReq_RA2PCA>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_LTCA2RA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_LTCA2RA>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_PCA2RA* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_PCA2RA>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_RA2Police* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_RA2Police>(Arena*);
template<> ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgPsnymRevocationStatus* Arena::CreateMaybeMessage<::interfaces::msgPsnymRevocationStatus>(Arena*);
template<> ::interfaces::msgRectangularRegion* Arena::CreateMaybeMessage<::interfaces::msgRectangularRegion>(Arena*);
template<> ::interfaces::msgRegionType* Arena::CreateMaybeMessage<::interfaces::msgRegionType>(Arena*);
template<> ::interfaces::msgReqProfile* Arena::CreateMaybeMessage<::interfaces::msgReqProfile>(Arena*);
template<> ::interfaces::msgRequestScopeType* Arena::CreateMaybeMessage<::interfaces::msgRequestScopeType>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionReq_Police2RA* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionReq_Police2RA>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionReq_RA2LTCA* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionReq_RA2LTCA>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionReq_RA2PCA* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionReq_RA2PCA>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_LTCA2RA* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_LTCA2RA>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_PCA2RA* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_PCA2RA>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_RA2Police* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_RA2Police>(Arena*);
template<> ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* Arena::CreateMaybeMessage<::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution>(Arena*);
template<> ::interfaces::msgRevokePsnymCertReq_P2RA* Arena::CreateMaybeMessage<::interfaces::msgRevokePsnymCertReq_P2RA>(Arena*);
template<> ::interfaces::msgRevokePsnymCertReq_RA2PCA* Arena::CreateMaybeMessage<::interfaces::msgRevokePsnymCertReq_RA2PCA>(Arena*);
template<> ::interfaces::msgRevokePsnymCertRes_PCA2RA* Arena::CreateMaybeMessage<::interfaces::msgRevokePsnymCertRes_PCA2RA>(Arena*);
template<> ::interfaces::msgRevokePsnymCertRes_RA2P* Arena::CreateMaybeMessage<::interfaces::msgRevokePsnymCertRes_RA2P>(Arena*);
template<> ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* Arena::CreateMaybeMessage<::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo>(Arena*);
template<> ::interfaces::msgRevokeX509CertReq_RA2LTCA* Arena::CreateMaybeMessage<::interfaces::msgRevokeX509CertReq_RA2LTCA>(Arena*);
template<> ::interfaces::msgSignature* Arena::CreateMaybeMessage<::interfaces::msgSignature>(Arena*);
template<> ::interfaces::msgSignerIdentifierType* Arena::CreateMaybeMessage<::interfaces::msgSignerIdentifierType>(Arena*);
template<> ::interfaces::msgSignerInfo* Arena::CreateMaybeMessage<::interfaces::msgSignerInfo>(Arena*);
template<> ::interfaces::msgSubType* Arena::CreateMaybeMessage<::interfaces::msgSubType>(Arena*);
template<> ::interfaces::msgSubTypeFlags* Arena::CreateMaybeMessage<::interfaces::msgSubTypeFlags>(Arena*);
template<> ::interfaces::msgTicketFormat* Arena::CreateMaybeMessage<::interfaces::msgTicketFormat>(Arena*);
template<> ::interfaces::msgTicketProvisionValidationReq_LTCA2TVR* Arena::CreateMaybeMessage<::interfaces::msgTicketProvisionValidationReq_LTCA2TVR>(Arena*);
template<> ::interfaces::msgTicketProvisionValidationRes_TVR2LTCA* Arena::CreateMaybeMessage<::interfaces::msgTicketProvisionValidationRes_TVR2LTCA>(Arena*);
template<> ::interfaces::msgTicketReq* Arena::CreateMaybeMessage<::interfaces::msgTicketReq>(Arena*);
template<> ::interfaces::msgTicketRes* Arena::CreateMaybeMessage<::interfaces::msgTicketRes>(Arena*);
template<> ::interfaces::msgToBeSignedCRL* Arena::CreateMaybeMessage<::interfaces::msgToBeSignedCRL>(Arena*);
template<> ::interfaces::msgToBeSignedCSR* Arena::CreateMaybeMessage<::interfaces::msgToBeSignedCSR>(Arena*);
template<> ::interfaces::msgToBeSignedWAVECertificate* Arena::CreateMaybeMessage<::interfaces::msgToBeSignedWAVECertificate>(Arena*);
template<> ::interfaces::msgTwoDLocation* Arena::CreateMaybeMessage<::interfaces::msgTwoDLocation>(Arena*);
template<> ::interfaces::msgUpgradeConfigurationReq_Client2Server* Arena::CreateMaybeMessage<::interfaces::msgUpgradeConfigurationReq_Client2Server>(Arena*);
template<> ::interfaces::msgUpgradeConfigurationRes_Server2Client* Arena::CreateMaybeMessage<::interfaces::msgUpgradeConfigurationRes_Server2Client>(Arena*);
template<> ::interfaces::msgVPKILibConfig* Arena::CreateMaybeMessage<::interfaces::msgVPKILibConfig>(Arena*);
template<> ::interfaces::msgVPKILibConfig_msgPsnymPolicy* Arena::CreateMaybeMessage<::interfaces::msgVPKILibConfig_msgPsnymPolicy>(Arena*);
template<> ::interfaces::msgVPKILibConfig_msgTicketPolicy* Arena::CreateMaybeMessage<::interfaces::msgVPKILibConfig_msgTicketPolicy>(Arena*);
template<> ::interfaces::msgVehicleAttributes* Arena::CreateMaybeMessage<::interfaces::msgVehicleAttributes>(Arena*);
template<> ::interfaces::msgVehicleConfig* Arena::CreateMaybeMessage<::interfaces::msgVehicleConfig>(Arena*);
template<> ::interfaces::msgVoucherReq_V2LTCA* Arena::CreateMaybeMessage<::interfaces::msgVoucherReq_V2LTCA>(Arena*);
template<> ::interfaces::msgVoucherRes_LTCA2V* Arena::CreateMaybeMessage<::interfaces::msgVoucherRes_LTCA2V>(Arena*);
template<> ::interfaces::msgWAVECRL* Arena::CreateMaybeMessage<::interfaces::msgWAVECRL>(Arena*);
template<> ::interfaces::msgWAVECertificateRequest* Arena::CreateMaybeMessage<::interfaces::msgWAVECertificateRequest>(Arena*);
template<> ::interfaces::msgWAVECertificateResponse* Arena::CreateMaybeMessage<::interfaces::msgWAVECertificateResponse>(Arena*);
template<> ::interfaces::msgWSASignerScope* Arena::CreateMaybeMessage<::interfaces::msgWSASignerScope>(Arena*);
template<> ::interfaces::msgX509CertReq_V2LTCA* Arena::CreateMaybeMessage<::interfaces::msgX509CertReq_V2LTCA>(Arena*);
template<> ::interfaces::msgX509CertRes_LTCA2V* Arena::CreateMaybeMessage<::interfaces::msgX509CertRes_LTCA2V>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace interfaces {

enum msgSignerIdentifierType_SignerIdentifierType : int {
  msgSignerIdentifierType_SignerIdentifierType_certificate = 0,
  msgSignerIdentifierType_SignerIdentifierType_certificateDigest = 1,
  msgSignerIdentifierType_SignerIdentifierType_certificateChain = 2,
  msgSignerIdentifierType_SignerIdentifierType_self = 4
};
bool msgSignerIdentifierType_SignerIdentifierType_IsValid(int value);
constexpr msgSignerIdentifierType_SignerIdentifierType msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_MIN = msgSignerIdentifierType_SignerIdentifierType_certificate;
constexpr msgSignerIdentifierType_SignerIdentifierType msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_MAX = msgSignerIdentifierType_SignerIdentifierType_self;
constexpr int msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_ARRAYSIZE = msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgSignerIdentifierType_SignerIdentifierType_descriptor();
template<typename T>
inline const std::string& msgSignerIdentifierType_SignerIdentifierType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgSignerIdentifierType_SignerIdentifierType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgSignerIdentifierType_SignerIdentifierType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgSignerIdentifierType_SignerIdentifierType_descriptor(), enum_t_value);
}
inline bool msgSignerIdentifierType_SignerIdentifierType_Parse(
    const std::string& name, msgSignerIdentifierType_SignerIdentifierType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgSignerIdentifierType_SignerIdentifierType>(
    msgSignerIdentifierType_SignerIdentifierType_descriptor(), name, value);
}
enum msgSubType_SubjectType : int {
  msgSubType_SubjectType_wsa_ca1 = 0,
  msgSubType_SubjectType_ca = 1,
  msgSubType_SubjectType_wsa_signer = 2,
  msgSubType_SubjectType_rsu = 3,
  msgSubType_SubjectType_psobu = 4,
  msgSubType_SubjectType_obu_identified = 5,
  msgSubType_SubjectType_crl_signer = 6,
  msgSubType_SubjectType_csr_signer = 8,
  msgSubType_SubjectType_root_ca = 9
};
bool msgSubType_SubjectType_IsValid(int value);
constexpr msgSubType_SubjectType msgSubType_SubjectType_SubjectType_MIN = msgSubType_SubjectType_wsa_ca1;
constexpr msgSubType_SubjectType msgSubType_SubjectType_SubjectType_MAX = msgSubType_SubjectType_root_ca;
constexpr int msgSubType_SubjectType_SubjectType_ARRAYSIZE = msgSubType_SubjectType_SubjectType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgSubType_SubjectType_descriptor();
template<typename T>
inline const std::string& msgSubType_SubjectType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgSubType_SubjectType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgSubType_SubjectType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgSubType_SubjectType_descriptor(), enum_t_value);
}
inline bool msgSubType_SubjectType_Parse(
    const std::string& name, msgSubType_SubjectType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgSubType_SubjectType>(
    msgSubType_SubjectType_descriptor(), name, value);
}
enum msgSubTypeFlags_SubjectTypeFlags : int {
  msgSubTypeFlags_SubjectTypeFlags_wsa_ca = 0,
  msgSubTypeFlags_SubjectTypeFlags_ca = 1,
  msgSubTypeFlags_SubjectTypeFlags_wsaSigner = 2,
  msgSubTypeFlags_SubjectTypeFlags_rsu = 3,
  msgSubTypeFlags_SubjectTypeFlags_psobu = 4,
  msgSubTypeFlags_SubjectTypeFlags_obuIdentified = 5,
  msgSubTypeFlags_SubjectTypeFlags_crlSigner = 6,
  msgSubTypeFlags_SubjectTypeFlags_csrSigner = 8
};
bool msgSubTypeFlags_SubjectTypeFlags_IsValid(int value);
constexpr msgSubTypeFlags_SubjectTypeFlags msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_MIN = msgSubTypeFlags_SubjectTypeFlags_wsa_ca;
constexpr msgSubTypeFlags_SubjectTypeFlags msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_MAX = msgSubTypeFlags_SubjectTypeFlags_csrSigner;
constexpr int msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_ARRAYSIZE = msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgSubTypeFlags_SubjectTypeFlags_descriptor();
template<typename T>
inline const std::string& msgSubTypeFlags_SubjectTypeFlags_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgSubTypeFlags_SubjectTypeFlags>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgSubTypeFlags_SubjectTypeFlags_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgSubTypeFlags_SubjectTypeFlags_descriptor(), enum_t_value);
}
inline bool msgSubTypeFlags_SubjectTypeFlags_Parse(
    const std::string& name, msgSubTypeFlags_SubjectTypeFlags* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgSubTypeFlags_SubjectTypeFlags>(
    msgSubTypeFlags_SubjectTypeFlags_descriptor(), name, value);
}
enum msgAIDType_AIDType : int {
  msgAIDType_AIDType_fullySpecified = 0,
  msgAIDType_AIDType_matchAnyAcm = 1,
  msgAIDType_AIDType_fromIssuer = 2
};
bool msgAIDType_AIDType_IsValid(int value);
constexpr msgAIDType_AIDType msgAIDType_AIDType_AIDType_MIN = msgAIDType_AIDType_fullySpecified;
constexpr msgAIDType_AIDType msgAIDType_AIDType_AIDType_MAX = msgAIDType_AIDType_fromIssuer;
constexpr int msgAIDType_AIDType_AIDType_ARRAYSIZE = msgAIDType_AIDType_AIDType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgAIDType_AIDType_descriptor();
template<typename T>
inline const std::string& msgAIDType_AIDType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgAIDType_AIDType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgAIDType_AIDType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgAIDType_AIDType_descriptor(), enum_t_value);
}
inline bool msgAIDType_AIDType_Parse(
    const std::string& name, msgAIDType_AIDType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgAIDType_AIDType>(
    msgAIDType_AIDType_descriptor(), name, value);
}
enum msgRegionType_RegionType : int {
  msgRegionType_RegionType_fromIssuer = 0,
  msgRegionType_RegionType_circle = 1,
  msgRegionType_RegionType_rectangle = 2,
  msgRegionType_RegionType_polygon = 3,
  msgRegionType_RegionType_none = 4
};
bool msgRegionType_RegionType_IsValid(int value);
constexpr msgRegionType_RegionType msgRegionType_RegionType_RegionType_MIN = msgRegionType_RegionType_fromIssuer;
constexpr msgRegionType_RegionType msgRegionType_RegionType_RegionType_MAX = msgRegionType_RegionType_none;
constexpr int msgRegionType_RegionType_RegionType_ARRAYSIZE = msgRegionType_RegionType_RegionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgRegionType_RegionType_descriptor();
template<typename T>
inline const std::string& msgRegionType_RegionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgRegionType_RegionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgRegionType_RegionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgRegionType_RegionType_descriptor(), enum_t_value);
}
inline bool msgRegionType_RegionType_Parse(
    const std::string& name, msgRegionType_RegionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgRegionType_RegionType>(
    msgRegionType_RegionType_descriptor(), name, value);
}
enum msgWSASignerScope_WSASignerScope : int {
  msgWSASignerScope_WSASignerScope_wsaSignerAdvertisingSpecificApplications = 0,
  msgWSASignerScope_WSASignerScope_wsaSignerOperateWithinCertainArea = 1,
  msgWSASignerScope_WSASignerScope_wsaSignerUniqueIdentifyingName = 2
};
bool msgWSASignerScope_WSASignerScope_IsValid(int value);
constexpr msgWSASignerScope_WSASignerScope msgWSASignerScope_WSASignerScope_WSASignerScope_MIN = msgWSASignerScope_WSASignerScope_wsaSignerAdvertisingSpecificApplications;
constexpr msgWSASignerScope_WSASignerScope msgWSASignerScope_WSASignerScope_WSASignerScope_MAX = msgWSASignerScope_WSASignerScope_wsaSignerUniqueIdentifyingName;
constexpr int msgWSASignerScope_WSASignerScope_WSASignerScope_ARRAYSIZE = msgWSASignerScope_WSASignerScope_WSASignerScope_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgWSASignerScope_WSASignerScope_descriptor();
template<typename T>
inline const std::string& msgWSASignerScope_WSASignerScope_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgWSASignerScope_WSASignerScope>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgWSASignerScope_WSASignerScope_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgWSASignerScope_WSASignerScope_descriptor(), enum_t_value);
}
inline bool msgWSASignerScope_WSASignerScope_Parse(
    const std::string& name, msgWSASignerScope_WSASignerScope* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgWSASignerScope_WSASignerScope>(
    msgWSASignerScope_WSASignerScope_descriptor(), name, value);
}
enum msgRequestScopeType_RequestScopeType : int {
  msgRequestScopeType_RequestScopeType_specifiedInRequest = 0,
  msgRequestScopeType_RequestScopeType_specifiedByCA = 1
};
bool msgRequestScopeType_RequestScopeType_IsValid(int value);
constexpr msgRequestScopeType_RequestScopeType msgRequestScopeType_RequestScopeType_RequestScopeType_MIN = msgRequestScopeType_RequestScopeType_specifiedInRequest;
constexpr msgRequestScopeType_RequestScopeType msgRequestScopeType_RequestScopeType_RequestScopeType_MAX = msgRequestScopeType_RequestScopeType_specifiedByCA;
constexpr int msgRequestScopeType_RequestScopeType_RequestScopeType_ARRAYSIZE = msgRequestScopeType_RequestScopeType_RequestScopeType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgRequestScopeType_RequestScopeType_descriptor();
template<typename T>
inline const std::string& msgRequestScopeType_RequestScopeType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgRequestScopeType_RequestScopeType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgRequestScopeType_RequestScopeType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgRequestScopeType_RequestScopeType_descriptor(), enum_t_value);
}
inline bool msgRequestScopeType_RequestScopeType_Parse(
    const std::string& name, msgRequestScopeType_RequestScopeType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgRequestScopeType_RequestScopeType>(
    msgRequestScopeType_RequestScopeType_descriptor(), name, value);
}
enum msgCRLType_CRLType : int {
  msgCRLType_CRLType_idOnly = 0,
  msgCRLType_CRLType_idAndExpiry = 1
};
bool msgCRLType_CRLType_IsValid(int value);
constexpr msgCRLType_CRLType msgCRLType_CRLType_CRLType_MIN = msgCRLType_CRLType_idOnly;
constexpr msgCRLType_CRLType msgCRLType_CRLType_CRLType_MAX = msgCRLType_CRLType_idAndExpiry;
constexpr int msgCRLType_CRLType_CRLType_ARRAYSIZE = msgCRLType_CRLType_CRLType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* msgCRLType_CRLType_descriptor();
template<typename T>
inline const std::string& msgCRLType_CRLType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, msgCRLType_CRLType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function msgCRLType_CRLType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    msgCRLType_CRLType_descriptor(), enum_t_value);
}
inline bool msgCRLType_CRLType_Parse(
    const std::string& name, msgCRLType_CRLType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<msgCRLType_CRLType>(
    msgCRLType_CRLType_descriptor(), name, value);
}
// ===================================================================

class msgReqProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReqProfile) */ {
 public:
  inline msgReqProfile() : msgReqProfile(nullptr) {};
  virtual ~msgReqProfile();

  msgReqProfile(const msgReqProfile& from);
  msgReqProfile(msgReqProfile&& from) noexcept
    : msgReqProfile() {
    *this = ::std::move(from);
  }

  inline msgReqProfile& operator=(const msgReqProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReqProfile& operator=(msgReqProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReqProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReqProfile* internal_default_instance() {
    return reinterpret_cast<const msgReqProfile*>(
               &_msgReqProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(msgReqProfile& a, msgReqProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReqProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReqProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReqProfile* New() const final {
    return CreateMaybeMessage<msgReqProfile>(nullptr);
  }

  msgReqProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReqProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReqProfile& from);
  void MergeFrom(const msgReqProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReqProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReqProfile";
  }
  protected:
  explicit msgReqProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrReqIdentificationFieldNumber = 1,
    kINonceFieldNumber = 2,
  };
  // required string strReqIdentification = 1 [default = ""];
  bool has_strreqidentification() const;
  private:
  bool _internal_has_strreqidentification() const;
  public:
  void clear_strreqidentification();
  const std::string& strreqidentification() const;
  void set_strreqidentification(const std::string& value);
  void set_strreqidentification(std::string&& value);
  void set_strreqidentification(const char* value);
  void set_strreqidentification(const char* value, size_t size);
  std::string* mutable_strreqidentification();
  std::string* release_strreqidentification();
  void set_allocated_strreqidentification(std::string* strreqidentification);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strreqidentification();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strreqidentification(
      std::string* strreqidentification);
  private:
  const std::string& _internal_strreqidentification() const;
  void _internal_set_strreqidentification(const std::string& value);
  std::string* _internal_mutable_strreqidentification();
  public:

  // required int32 iNonce = 2 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReqProfile)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strreqidentification_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgSignature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgSignature) */ {
 public:
  inline msgSignature() : msgSignature(nullptr) {};
  virtual ~msgSignature();

  msgSignature(const msgSignature& from);
  msgSignature(msgSignature&& from) noexcept
    : msgSignature() {
    *this = ::std::move(from);
  }

  inline msgSignature& operator=(const msgSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgSignature& operator=(msgSignature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgSignature* internal_default_instance() {
    return reinterpret_cast<const msgSignature*>(
               &_msgSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(msgSignature& a, msgSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(msgSignature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgSignature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgSignature* New() const final {
    return CreateMaybeMessage<msgSignature>(nullptr);
  }

  msgSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgSignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgSignature& from);
  void MergeFrom(const msgSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgSignature";
  }
  protected:
  explicit msgSignature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrSignatureFieldNumber = 3,
    kUiCurveOrderOctetsFieldNumber = 1,
    kUiSignLenFieldNumber = 2,
  };
  // optional string strSignature = 3 [default = ""];
  bool has_strsignature() const;
  private:
  bool _internal_has_strsignature() const;
  public:
  void clear_strsignature();
  const std::string& strsignature() const;
  void set_strsignature(const std::string& value);
  void set_strsignature(std::string&& value);
  void set_strsignature(const char* value);
  void set_strsignature(const char* value, size_t size);
  std::string* mutable_strsignature();
  std::string* release_strsignature();
  void set_allocated_strsignature(std::string* strsignature);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strsignature();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strsignature(
      std::string* strsignature);
  private:
  const std::string& _internal_strsignature() const;
  void _internal_set_strsignature(const std::string& value);
  std::string* _internal_mutable_strsignature();
  public:

  // optional uint32 uiCurveOrderOctets = 1 [default = 0];
  bool has_uicurveorderoctets() const;
  private:
  bool _internal_has_uicurveorderoctets() const;
  public:
  void clear_uicurveorderoctets();
  ::PROTOBUF_NAMESPACE_ID::uint32 uicurveorderoctets() const;
  void set_uicurveorderoctets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uicurveorderoctets() const;
  void _internal_set_uicurveorderoctets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 uiSignLen = 2 [default = 0];
  bool has_uisignlen() const;
  private:
  bool _internal_has_uisignlen() const;
  public:
  void clear_uisignlen();
  ::PROTOBUF_NAMESPACE_ID::uint32 uisignlen() const;
  void set_uisignlen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uisignlen() const;
  void _internal_set_uisignlen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgSignature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strsignature_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uicurveorderoctets_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uisignlen_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgError PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgError) */ {
 public:
  inline msgError() : msgError(nullptr) {};
  virtual ~msgError();

  msgError(const msgError& from);
  msgError(msgError&& from) noexcept
    : msgError() {
    *this = ::std::move(from);
  }

  inline msgError& operator=(const msgError& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgError& operator=(msgError&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgError* internal_default_instance() {
    return reinterpret_cast<const msgError*>(
               &_msgError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(msgError& a, msgError& b) {
    a.Swap(&b);
  }
  inline void Swap(msgError* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgError* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgError* New() const final {
    return CreateMaybeMessage<msgError>(nullptr);
  }

  msgError* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgError>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgError& from);
  void MergeFrom(const msgError& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgError* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgError";
  }
  protected:
  explicit msgError(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrErrMsgDesFieldNumber = 2,
    kIErrCodeFieldNumber = 1,
  };
  // required string strErrMsgDes = 2 [default = ""];
  bool has_strerrmsgdes() const;
  private:
  bool _internal_has_strerrmsgdes() const;
  public:
  void clear_strerrmsgdes();
  const std::string& strerrmsgdes() const;
  void set_strerrmsgdes(const std::string& value);
  void set_strerrmsgdes(std::string&& value);
  void set_strerrmsgdes(const char* value);
  void set_strerrmsgdes(const char* value, size_t size);
  std::string* mutable_strerrmsgdes();
  std::string* release_strerrmsgdes();
  void set_allocated_strerrmsgdes(std::string* strerrmsgdes);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strerrmsgdes();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strerrmsgdes(
      std::string* strerrmsgdes);
  private:
  const std::string& _internal_strerrmsgdes() const;
  void _internal_set_strerrmsgdes(const std::string& value);
  std::string* _internal_mutable_strerrmsgdes();
  public:

  // required int32 iErrCode = 1 [default = 100];
  bool has_ierrcode() const;
  private:
  bool _internal_has_ierrcode() const;
  public:
  void clear_ierrcode();
  ::PROTOBUF_NAMESPACE_ID::int32 ierrcode() const;
  void set_ierrcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ierrcode() const;
  void _internal_set_ierrcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgError)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strerrmsgdes_;
  ::PROTOBUF_NAMESPACE_ID::int32 ierrcode_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgECPublicKey PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgECPublicKey) */ {
 public:
  inline msgECPublicKey() : msgECPublicKey(nullptr) {};
  virtual ~msgECPublicKey();

  msgECPublicKey(const msgECPublicKey& from);
  msgECPublicKey(msgECPublicKey&& from) noexcept
    : msgECPublicKey() {
    *this = ::std::move(from);
  }

  inline msgECPublicKey& operator=(const msgECPublicKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgECPublicKey& operator=(msgECPublicKey&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgECPublicKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgECPublicKey* internal_default_instance() {
    return reinterpret_cast<const msgECPublicKey*>(
               &_msgECPublicKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(msgECPublicKey& a, msgECPublicKey& b) {
    a.Swap(&b);
  }
  inline void Swap(msgECPublicKey* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgECPublicKey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgECPublicKey* New() const final {
    return CreateMaybeMessage<msgECPublicKey>(nullptr);
  }

  msgECPublicKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgECPublicKey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgECPublicKey& from);
  void MergeFrom(const msgECPublicKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgECPublicKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgECPublicKey";
  }
  protected:
  explicit msgECPublicKey(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymPublicKeyFieldNumber = 2,
    kUiPsnymPublicKeyLenFieldNumber = 1,
  };
  // required string strPsnymPublicKey = 2 [default = ""];
  bool has_strpsnympublickey() const;
  private:
  bool _internal_has_strpsnympublickey() const;
  public:
  void clear_strpsnympublickey();
  const std::string& strpsnympublickey() const;
  void set_strpsnympublickey(const std::string& value);
  void set_strpsnympublickey(std::string&& value);
  void set_strpsnympublickey(const char* value);
  void set_strpsnympublickey(const char* value, size_t size);
  std::string* mutable_strpsnympublickey();
  std::string* release_strpsnympublickey();
  void set_allocated_strpsnympublickey(std::string* strpsnympublickey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnympublickey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnympublickey(
      std::string* strpsnympublickey);
  private:
  const std::string& _internal_strpsnympublickey() const;
  void _internal_set_strpsnympublickey(const std::string& value);
  std::string* _internal_mutable_strpsnympublickey();
  public:

  // required uint32 uiPsnymPublicKeyLen = 1 [default = 0];
  bool has_uipsnympublickeylen() const;
  private:
  bool _internal_has_uipsnympublickeylen() const;
  public:
  void clear_uipsnympublickeylen();
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnympublickeylen() const;
  void set_uipsnympublickeylen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uipsnympublickeylen() const;
  void _internal_set_uipsnympublickeylen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgECPublicKey)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnympublickey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnympublickeylen_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgSignerIdentifierType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgSignerIdentifierType) */ {
 public:
  inline msgSignerIdentifierType() : msgSignerIdentifierType(nullptr) {};
  virtual ~msgSignerIdentifierType();

  msgSignerIdentifierType(const msgSignerIdentifierType& from);
  msgSignerIdentifierType(msgSignerIdentifierType&& from) noexcept
    : msgSignerIdentifierType() {
    *this = ::std::move(from);
  }

  inline msgSignerIdentifierType& operator=(const msgSignerIdentifierType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgSignerIdentifierType& operator=(msgSignerIdentifierType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgSignerIdentifierType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgSignerIdentifierType* internal_default_instance() {
    return reinterpret_cast<const msgSignerIdentifierType*>(
               &_msgSignerIdentifierType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(msgSignerIdentifierType& a, msgSignerIdentifierType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgSignerIdentifierType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgSignerIdentifierType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgSignerIdentifierType* New() const final {
    return CreateMaybeMessage<msgSignerIdentifierType>(nullptr);
  }

  msgSignerIdentifierType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgSignerIdentifierType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgSignerIdentifierType& from);
  void MergeFrom(const msgSignerIdentifierType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgSignerIdentifierType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgSignerIdentifierType";
  }
  protected:
  explicit msgSignerIdentifierType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgSignerIdentifierType_SignerIdentifierType SignerIdentifierType;
  static constexpr SignerIdentifierType certificate =
    msgSignerIdentifierType_SignerIdentifierType_certificate;
  static constexpr SignerIdentifierType certificateDigest =
    msgSignerIdentifierType_SignerIdentifierType_certificateDigest;
  static constexpr SignerIdentifierType certificateChain =
    msgSignerIdentifierType_SignerIdentifierType_certificateChain;
  static constexpr SignerIdentifierType self =
    msgSignerIdentifierType_SignerIdentifierType_self;
  static inline bool SignerIdentifierType_IsValid(int value) {
    return msgSignerIdentifierType_SignerIdentifierType_IsValid(value);
  }
  static constexpr SignerIdentifierType SignerIdentifierType_MIN =
    msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_MIN;
  static constexpr SignerIdentifierType SignerIdentifierType_MAX =
    msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_MAX;
  static constexpr int SignerIdentifierType_ARRAYSIZE =
    msgSignerIdentifierType_SignerIdentifierType_SignerIdentifierType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SignerIdentifierType_descriptor() {
    return msgSignerIdentifierType_SignerIdentifierType_descriptor();
  }
  template<typename T>
  static inline const std::string& SignerIdentifierType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SignerIdentifierType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SignerIdentifierType_Name.");
    return msgSignerIdentifierType_SignerIdentifierType_Name(enum_t_value);
  }
  static inline bool SignerIdentifierType_Parse(const std::string& name,
      SignerIdentifierType* value) {
    return msgSignerIdentifierType_SignerIdentifierType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgSignerIdentifierType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgSubType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgSubType) */ {
 public:
  inline msgSubType() : msgSubType(nullptr) {};
  virtual ~msgSubType();

  msgSubType(const msgSubType& from);
  msgSubType(msgSubType&& from) noexcept
    : msgSubType() {
    *this = ::std::move(from);
  }

  inline msgSubType& operator=(const msgSubType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgSubType& operator=(msgSubType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgSubType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgSubType* internal_default_instance() {
    return reinterpret_cast<const msgSubType*>(
               &_msgSubType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(msgSubType& a, msgSubType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgSubType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgSubType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgSubType* New() const final {
    return CreateMaybeMessage<msgSubType>(nullptr);
  }

  msgSubType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgSubType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgSubType& from);
  void MergeFrom(const msgSubType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgSubType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgSubType";
  }
  protected:
  explicit msgSubType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgSubType_SubjectType SubjectType;
  static constexpr SubjectType wsa_ca1 =
    msgSubType_SubjectType_wsa_ca1;
  static constexpr SubjectType ca =
    msgSubType_SubjectType_ca;
  static constexpr SubjectType wsa_signer =
    msgSubType_SubjectType_wsa_signer;
  static constexpr SubjectType rsu =
    msgSubType_SubjectType_rsu;
  static constexpr SubjectType psobu =
    msgSubType_SubjectType_psobu;
  static constexpr SubjectType obu_identified =
    msgSubType_SubjectType_obu_identified;
  static constexpr SubjectType crl_signer =
    msgSubType_SubjectType_crl_signer;
  static constexpr SubjectType csr_signer =
    msgSubType_SubjectType_csr_signer;
  static constexpr SubjectType root_ca =
    msgSubType_SubjectType_root_ca;
  static inline bool SubjectType_IsValid(int value) {
    return msgSubType_SubjectType_IsValid(value);
  }
  static constexpr SubjectType SubjectType_MIN =
    msgSubType_SubjectType_SubjectType_MIN;
  static constexpr SubjectType SubjectType_MAX =
    msgSubType_SubjectType_SubjectType_MAX;
  static constexpr int SubjectType_ARRAYSIZE =
    msgSubType_SubjectType_SubjectType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SubjectType_descriptor() {
    return msgSubType_SubjectType_descriptor();
  }
  template<typename T>
  static inline const std::string& SubjectType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SubjectType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SubjectType_Name.");
    return msgSubType_SubjectType_Name(enum_t_value);
  }
  static inline bool SubjectType_Parse(const std::string& name,
      SubjectType* value) {
    return msgSubType_SubjectType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgSubType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgSubTypeFlags PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgSubTypeFlags) */ {
 public:
  inline msgSubTypeFlags() : msgSubTypeFlags(nullptr) {};
  virtual ~msgSubTypeFlags();

  msgSubTypeFlags(const msgSubTypeFlags& from);
  msgSubTypeFlags(msgSubTypeFlags&& from) noexcept
    : msgSubTypeFlags() {
    *this = ::std::move(from);
  }

  inline msgSubTypeFlags& operator=(const msgSubTypeFlags& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgSubTypeFlags& operator=(msgSubTypeFlags&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgSubTypeFlags& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgSubTypeFlags* internal_default_instance() {
    return reinterpret_cast<const msgSubTypeFlags*>(
               &_msgSubTypeFlags_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(msgSubTypeFlags& a, msgSubTypeFlags& b) {
    a.Swap(&b);
  }
  inline void Swap(msgSubTypeFlags* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgSubTypeFlags* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgSubTypeFlags* New() const final {
    return CreateMaybeMessage<msgSubTypeFlags>(nullptr);
  }

  msgSubTypeFlags* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgSubTypeFlags>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgSubTypeFlags& from);
  void MergeFrom(const msgSubTypeFlags& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgSubTypeFlags* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgSubTypeFlags";
  }
  protected:
  explicit msgSubTypeFlags(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgSubTypeFlags_SubjectTypeFlags SubjectTypeFlags;
  static constexpr SubjectTypeFlags wsa_ca =
    msgSubTypeFlags_SubjectTypeFlags_wsa_ca;
  static constexpr SubjectTypeFlags ca =
    msgSubTypeFlags_SubjectTypeFlags_ca;
  static constexpr SubjectTypeFlags wsaSigner =
    msgSubTypeFlags_SubjectTypeFlags_wsaSigner;
  static constexpr SubjectTypeFlags rsu =
    msgSubTypeFlags_SubjectTypeFlags_rsu;
  static constexpr SubjectTypeFlags psobu =
    msgSubTypeFlags_SubjectTypeFlags_psobu;
  static constexpr SubjectTypeFlags obuIdentified =
    msgSubTypeFlags_SubjectTypeFlags_obuIdentified;
  static constexpr SubjectTypeFlags crlSigner =
    msgSubTypeFlags_SubjectTypeFlags_crlSigner;
  static constexpr SubjectTypeFlags csrSigner =
    msgSubTypeFlags_SubjectTypeFlags_csrSigner;
  static inline bool SubjectTypeFlags_IsValid(int value) {
    return msgSubTypeFlags_SubjectTypeFlags_IsValid(value);
  }
  static constexpr SubjectTypeFlags SubjectTypeFlags_MIN =
    msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_MIN;
  static constexpr SubjectTypeFlags SubjectTypeFlags_MAX =
    msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_MAX;
  static constexpr int SubjectTypeFlags_ARRAYSIZE =
    msgSubTypeFlags_SubjectTypeFlags_SubjectTypeFlags_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SubjectTypeFlags_descriptor() {
    return msgSubTypeFlags_SubjectTypeFlags_descriptor();
  }
  template<typename T>
  static inline const std::string& SubjectTypeFlags_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SubjectTypeFlags>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SubjectTypeFlags_Name.");
    return msgSubTypeFlags_SubjectTypeFlags_Name(enum_t_value);
  }
  static inline bool SubjectTypeFlags_Parse(const std::string& name,
      SubjectTypeFlags* value) {
    return msgSubTypeFlags_SubjectTypeFlags_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgSubTypeFlags)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgAIDType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgAIDType) */ {
 public:
  inline msgAIDType() : msgAIDType(nullptr) {};
  virtual ~msgAIDType();

  msgAIDType(const msgAIDType& from);
  msgAIDType(msgAIDType&& from) noexcept
    : msgAIDType() {
    *this = ::std::move(from);
  }

  inline msgAIDType& operator=(const msgAIDType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgAIDType& operator=(msgAIDType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgAIDType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgAIDType* internal_default_instance() {
    return reinterpret_cast<const msgAIDType*>(
               &_msgAIDType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(msgAIDType& a, msgAIDType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgAIDType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgAIDType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgAIDType* New() const final {
    return CreateMaybeMessage<msgAIDType>(nullptr);
  }

  msgAIDType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgAIDType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgAIDType& from);
  void MergeFrom(const msgAIDType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgAIDType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgAIDType";
  }
  protected:
  explicit msgAIDType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgAIDType_AIDType AIDType;
  static constexpr AIDType fullySpecified =
    msgAIDType_AIDType_fullySpecified;
  static constexpr AIDType matchAnyAcm =
    msgAIDType_AIDType_matchAnyAcm;
  static constexpr AIDType fromIssuer =
    msgAIDType_AIDType_fromIssuer;
  static inline bool AIDType_IsValid(int value) {
    return msgAIDType_AIDType_IsValid(value);
  }
  static constexpr AIDType AIDType_MIN =
    msgAIDType_AIDType_AIDType_MIN;
  static constexpr AIDType AIDType_MAX =
    msgAIDType_AIDType_AIDType_MAX;
  static constexpr int AIDType_ARRAYSIZE =
    msgAIDType_AIDType_AIDType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  AIDType_descriptor() {
    return msgAIDType_AIDType_descriptor();
  }
  template<typename T>
  static inline const std::string& AIDType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, AIDType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function AIDType_Name.");
    return msgAIDType_AIDType_Name(enum_t_value);
  }
  static inline bool AIDType_Parse(const std::string& name,
      AIDType* value) {
    return msgAIDType_AIDType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgAIDType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRegionType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRegionType) */ {
 public:
  inline msgRegionType() : msgRegionType(nullptr) {};
  virtual ~msgRegionType();

  msgRegionType(const msgRegionType& from);
  msgRegionType(msgRegionType&& from) noexcept
    : msgRegionType() {
    *this = ::std::move(from);
  }

  inline msgRegionType& operator=(const msgRegionType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRegionType& operator=(msgRegionType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRegionType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRegionType* internal_default_instance() {
    return reinterpret_cast<const msgRegionType*>(
               &_msgRegionType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(msgRegionType& a, msgRegionType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRegionType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRegionType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRegionType* New() const final {
    return CreateMaybeMessage<msgRegionType>(nullptr);
  }

  msgRegionType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRegionType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRegionType& from);
  void MergeFrom(const msgRegionType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRegionType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRegionType";
  }
  protected:
  explicit msgRegionType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgRegionType_RegionType RegionType;
  static constexpr RegionType fromIssuer =
    msgRegionType_RegionType_fromIssuer;
  static constexpr RegionType circle =
    msgRegionType_RegionType_circle;
  static constexpr RegionType rectangle =
    msgRegionType_RegionType_rectangle;
  static constexpr RegionType polygon =
    msgRegionType_RegionType_polygon;
  static constexpr RegionType none =
    msgRegionType_RegionType_none;
  static inline bool RegionType_IsValid(int value) {
    return msgRegionType_RegionType_IsValid(value);
  }
  static constexpr RegionType RegionType_MIN =
    msgRegionType_RegionType_RegionType_MIN;
  static constexpr RegionType RegionType_MAX =
    msgRegionType_RegionType_RegionType_MAX;
  static constexpr int RegionType_ARRAYSIZE =
    msgRegionType_RegionType_RegionType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RegionType_descriptor() {
    return msgRegionType_RegionType_descriptor();
  }
  template<typename T>
  static inline const std::string& RegionType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RegionType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RegionType_Name.");
    return msgRegionType_RegionType_Name(enum_t_value);
  }
  static inline bool RegionType_Parse(const std::string& name,
      RegionType* value) {
    return msgRegionType_RegionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgRegionType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgWSASignerScope PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgWSASignerScope) */ {
 public:
  inline msgWSASignerScope() : msgWSASignerScope(nullptr) {};
  virtual ~msgWSASignerScope();

  msgWSASignerScope(const msgWSASignerScope& from);
  msgWSASignerScope(msgWSASignerScope&& from) noexcept
    : msgWSASignerScope() {
    *this = ::std::move(from);
  }

  inline msgWSASignerScope& operator=(const msgWSASignerScope& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgWSASignerScope& operator=(msgWSASignerScope&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgWSASignerScope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgWSASignerScope* internal_default_instance() {
    return reinterpret_cast<const msgWSASignerScope*>(
               &_msgWSASignerScope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(msgWSASignerScope& a, msgWSASignerScope& b) {
    a.Swap(&b);
  }
  inline void Swap(msgWSASignerScope* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgWSASignerScope* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgWSASignerScope* New() const final {
    return CreateMaybeMessage<msgWSASignerScope>(nullptr);
  }

  msgWSASignerScope* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgWSASignerScope>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgWSASignerScope& from);
  void MergeFrom(const msgWSASignerScope& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgWSASignerScope* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgWSASignerScope";
  }
  protected:
  explicit msgWSASignerScope(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgWSASignerScope_WSASignerScope WSASignerScope;
  static constexpr WSASignerScope wsaSignerAdvertisingSpecificApplications =
    msgWSASignerScope_WSASignerScope_wsaSignerAdvertisingSpecificApplications;
  static constexpr WSASignerScope wsaSignerOperateWithinCertainArea =
    msgWSASignerScope_WSASignerScope_wsaSignerOperateWithinCertainArea;
  static constexpr WSASignerScope wsaSignerUniqueIdentifyingName =
    msgWSASignerScope_WSASignerScope_wsaSignerUniqueIdentifyingName;
  static inline bool WSASignerScope_IsValid(int value) {
    return msgWSASignerScope_WSASignerScope_IsValid(value);
  }
  static constexpr WSASignerScope WSASignerScope_MIN =
    msgWSASignerScope_WSASignerScope_WSASignerScope_MIN;
  static constexpr WSASignerScope WSASignerScope_MAX =
    msgWSASignerScope_WSASignerScope_WSASignerScope_MAX;
  static constexpr int WSASignerScope_ARRAYSIZE =
    msgWSASignerScope_WSASignerScope_WSASignerScope_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  WSASignerScope_descriptor() {
    return msgWSASignerScope_WSASignerScope_descriptor();
  }
  template<typename T>
  static inline const std::string& WSASignerScope_Name(T enum_t_value) {
    static_assert(::std::is_same<T, WSASignerScope>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function WSASignerScope_Name.");
    return msgWSASignerScope_WSASignerScope_Name(enum_t_value);
  }
  static inline bool WSASignerScope_Parse(const std::string& name,
      WSASignerScope* value) {
    return msgWSASignerScope_WSASignerScope_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgWSASignerScope)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRequestScopeType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRequestScopeType) */ {
 public:
  inline msgRequestScopeType() : msgRequestScopeType(nullptr) {};
  virtual ~msgRequestScopeType();

  msgRequestScopeType(const msgRequestScopeType& from);
  msgRequestScopeType(msgRequestScopeType&& from) noexcept
    : msgRequestScopeType() {
    *this = ::std::move(from);
  }

  inline msgRequestScopeType& operator=(const msgRequestScopeType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRequestScopeType& operator=(msgRequestScopeType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRequestScopeType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRequestScopeType* internal_default_instance() {
    return reinterpret_cast<const msgRequestScopeType*>(
               &_msgRequestScopeType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(msgRequestScopeType& a, msgRequestScopeType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRequestScopeType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRequestScopeType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRequestScopeType* New() const final {
    return CreateMaybeMessage<msgRequestScopeType>(nullptr);
  }

  msgRequestScopeType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRequestScopeType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRequestScopeType& from);
  void MergeFrom(const msgRequestScopeType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRequestScopeType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRequestScopeType";
  }
  protected:
  explicit msgRequestScopeType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgRequestScopeType_RequestScopeType RequestScopeType;
  static constexpr RequestScopeType specifiedInRequest =
    msgRequestScopeType_RequestScopeType_specifiedInRequest;
  static constexpr RequestScopeType specifiedByCA =
    msgRequestScopeType_RequestScopeType_specifiedByCA;
  static inline bool RequestScopeType_IsValid(int value) {
    return msgRequestScopeType_RequestScopeType_IsValid(value);
  }
  static constexpr RequestScopeType RequestScopeType_MIN =
    msgRequestScopeType_RequestScopeType_RequestScopeType_MIN;
  static constexpr RequestScopeType RequestScopeType_MAX =
    msgRequestScopeType_RequestScopeType_RequestScopeType_MAX;
  static constexpr int RequestScopeType_ARRAYSIZE =
    msgRequestScopeType_RequestScopeType_RequestScopeType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RequestScopeType_descriptor() {
    return msgRequestScopeType_RequestScopeType_descriptor();
  }
  template<typename T>
  static inline const std::string& RequestScopeType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RequestScopeType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RequestScopeType_Name.");
    return msgRequestScopeType_RequestScopeType_Name(enum_t_value);
  }
  static inline bool RequestScopeType_Parse(const std::string& name,
      RequestScopeType* value) {
    return msgRequestScopeType_RequestScopeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgRequestScopeType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVoucherReq_V2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVoucherReq_V2LTCA) */ {
 public:
  inline msgVoucherReq_V2LTCA() : msgVoucherReq_V2LTCA(nullptr) {};
  virtual ~msgVoucherReq_V2LTCA();

  msgVoucherReq_V2LTCA(const msgVoucherReq_V2LTCA& from);
  msgVoucherReq_V2LTCA(msgVoucherReq_V2LTCA&& from) noexcept
    : msgVoucherReq_V2LTCA() {
    *this = ::std::move(from);
  }

  inline msgVoucherReq_V2LTCA& operator=(const msgVoucherReq_V2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVoucherReq_V2LTCA& operator=(msgVoucherReq_V2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVoucherReq_V2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVoucherReq_V2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgVoucherReq_V2LTCA*>(
               &_msgVoucherReq_V2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(msgVoucherReq_V2LTCA& a, msgVoucherReq_V2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVoucherReq_V2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVoucherReq_V2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVoucherReq_V2LTCA* New() const final {
    return CreateMaybeMessage<msgVoucherReq_V2LTCA>(nullptr);
  }

  msgVoucherReq_V2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVoucherReq_V2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVoucherReq_V2LTCA& from);
  void MergeFrom(const msgVoucherReq_V2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVoucherReq_V2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVoucherReq_V2LTCA";
  }
  protected:
  explicit msgVoucherReq_V2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrUserNameFieldNumber = 2,
    kStrPwdFieldNumber = 3,
    kStrEmailAddressFieldNumber = 4,
    kStrCaptchaFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 6,
    kTTimeStampFieldNumber = 7,
  };
  // required string strUserName = 2 [default = ""];
  bool has_strusername() const;
  private:
  bool _internal_has_strusername() const;
  public:
  void clear_strusername();
  const std::string& strusername() const;
  void set_strusername(const std::string& value);
  void set_strusername(std::string&& value);
  void set_strusername(const char* value);
  void set_strusername(const char* value, size_t size);
  std::string* mutable_strusername();
  std::string* release_strusername();
  void set_allocated_strusername(std::string* strusername);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strusername();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strusername(
      std::string* strusername);
  private:
  const std::string& _internal_strusername() const;
  void _internal_set_strusername(const std::string& value);
  std::string* _internal_mutable_strusername();
  public:

  // required string strPwd = 3 [default = ""];
  bool has_strpwd() const;
  private:
  bool _internal_has_strpwd() const;
  public:
  void clear_strpwd();
  const std::string& strpwd() const;
  void set_strpwd(const std::string& value);
  void set_strpwd(std::string&& value);
  void set_strpwd(const char* value);
  void set_strpwd(const char* value, size_t size);
  std::string* mutable_strpwd();
  std::string* release_strpwd();
  void set_allocated_strpwd(std::string* strpwd);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpwd();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpwd(
      std::string* strpwd);
  private:
  const std::string& _internal_strpwd() const;
  void _internal_set_strpwd(const std::string& value);
  std::string* _internal_mutable_strpwd();
  public:

  // required string strEmailAddress = 4 [default = ""];
  bool has_stremailaddress() const;
  private:
  bool _internal_has_stremailaddress() const;
  public:
  void clear_stremailaddress();
  const std::string& stremailaddress() const;
  void set_stremailaddress(const std::string& value);
  void set_stremailaddress(std::string&& value);
  void set_stremailaddress(const char* value);
  void set_stremailaddress(const char* value, size_t size);
  std::string* mutable_stremailaddress();
  std::string* release_stremailaddress();
  void set_allocated_stremailaddress(std::string* stremailaddress);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stremailaddress();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stremailaddress(
      std::string* stremailaddress);
  private:
  const std::string& _internal_stremailaddress() const;
  void _internal_set_stremailaddress(const std::string& value);
  std::string* _internal_mutable_stremailaddress();
  public:

  // required string strCaptcha = 5 [default = ""];
  bool has_strcaptcha() const;
  private:
  bool _internal_has_strcaptcha() const;
  public:
  void clear_strcaptcha();
  const std::string& strcaptcha() const;
  void set_strcaptcha(const std::string& value);
  void set_strcaptcha(std::string&& value);
  void set_strcaptcha(const char* value);
  void set_strcaptcha(const char* value, size_t size);
  std::string* mutable_strcaptcha();
  std::string* release_strcaptcha();
  void set_allocated_strcaptcha(std::string* strcaptcha);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strcaptcha();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strcaptcha(
      std::string* strcaptcha);
  private:
  const std::string& _internal_strcaptcha() const;
  void _internal_set_strcaptcha(const std::string& value);
  std::string* _internal_mutable_strcaptcha();
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 6 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 7 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVoucherReq_V2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strusername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpwd_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stremailaddress_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcaptcha_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVoucherRes_LTCA2V PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVoucherRes_LTCA2V) */ {
 public:
  inline msgVoucherRes_LTCA2V() : msgVoucherRes_LTCA2V(nullptr) {};
  virtual ~msgVoucherRes_LTCA2V();

  msgVoucherRes_LTCA2V(const msgVoucherRes_LTCA2V& from);
  msgVoucherRes_LTCA2V(msgVoucherRes_LTCA2V&& from) noexcept
    : msgVoucherRes_LTCA2V() {
    *this = ::std::move(from);
  }

  inline msgVoucherRes_LTCA2V& operator=(const msgVoucherRes_LTCA2V& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVoucherRes_LTCA2V& operator=(msgVoucherRes_LTCA2V&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVoucherRes_LTCA2V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVoucherRes_LTCA2V* internal_default_instance() {
    return reinterpret_cast<const msgVoucherRes_LTCA2V*>(
               &_msgVoucherRes_LTCA2V_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(msgVoucherRes_LTCA2V& a, msgVoucherRes_LTCA2V& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVoucherRes_LTCA2V* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVoucherRes_LTCA2V* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVoucherRes_LTCA2V* New() const final {
    return CreateMaybeMessage<msgVoucherRes_LTCA2V>(nullptr);
  }

  msgVoucherRes_LTCA2V* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVoucherRes_LTCA2V>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVoucherRes_LTCA2V& from);
  void MergeFrom(const msgVoucherRes_LTCA2V& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVoucherRes_LTCA2V* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVoucherRes_LTCA2V";
  }
  protected:
  explicit msgVoucherRes_LTCA2V(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrVoucherFieldNumber = 3,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 6,
    kStSignFieldNumber = 7,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 4,
    kTTimeStampFieldNumber = 5,
  };
  // required string strVoucher = 3 [default = ""];
  bool has_strvoucher() const;
  private:
  bool _internal_has_strvoucher() const;
  public:
  void clear_strvoucher();
  const std::string& strvoucher() const;
  void set_strvoucher(const std::string& value);
  void set_strvoucher(std::string&& value);
  void set_strvoucher(const char* value);
  void set_strvoucher(const char* value, size_t size);
  std::string* mutable_strvoucher();
  std::string* release_strvoucher();
  void set_allocated_strvoucher(std::string* strvoucher);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strvoucher();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strvoucher(
      std::string* strvoucher);
  private:
  const std::string& _internal_strvoucher() const;
  void _internal_set_strvoucher(const std::string& value);
  std::string* _internal_mutable_strvoucher();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 6;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 4 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 5 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVoucherRes_LTCA2V)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strvoucher_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgX509CertReq_V2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgX509CertReq_V2LTCA) */ {
 public:
  inline msgX509CertReq_V2LTCA() : msgX509CertReq_V2LTCA(nullptr) {};
  virtual ~msgX509CertReq_V2LTCA();

  msgX509CertReq_V2LTCA(const msgX509CertReq_V2LTCA& from);
  msgX509CertReq_V2LTCA(msgX509CertReq_V2LTCA&& from) noexcept
    : msgX509CertReq_V2LTCA() {
    *this = ::std::move(from);
  }

  inline msgX509CertReq_V2LTCA& operator=(const msgX509CertReq_V2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgX509CertReq_V2LTCA& operator=(msgX509CertReq_V2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgX509CertReq_V2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgX509CertReq_V2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgX509CertReq_V2LTCA*>(
               &_msgX509CertReq_V2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(msgX509CertReq_V2LTCA& a, msgX509CertReq_V2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgX509CertReq_V2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgX509CertReq_V2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgX509CertReq_V2LTCA* New() const final {
    return CreateMaybeMessage<msgX509CertReq_V2LTCA>(nullptr);
  }

  msgX509CertReq_V2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgX509CertReq_V2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgX509CertReq_V2LTCA& from);
  void MergeFrom(const msgX509CertReq_V2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgX509CertReq_V2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgX509CertReq_V2LTCA";
  }
  protected:
  explicit msgX509CertReq_V2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrProofOfPossessionVoucherFieldNumber = 3,
    kStrDNSExtensionFieldNumber = 4,
    kStrKeyUsageFieldNumber = 5,
    kStrExtendedKeyUsageFieldNumber = 6,
    kStrX509CertReqFieldNumber = 7,
    kINonceFieldNumber = 8,
    kIReqTypeFieldNumber = 1,
    kILTCAIdRangeFieldNumber = 2,
    kTTimeStampFieldNumber = 9,
  };
  // required string strProofOfPossessionVoucher = 3 [default = ""];
  bool has_strproofofpossessionvoucher() const;
  private:
  bool _internal_has_strproofofpossessionvoucher() const;
  public:
  void clear_strproofofpossessionvoucher();
  const std::string& strproofofpossessionvoucher() const;
  void set_strproofofpossessionvoucher(const std::string& value);
  void set_strproofofpossessionvoucher(std::string&& value);
  void set_strproofofpossessionvoucher(const char* value);
  void set_strproofofpossessionvoucher(const char* value, size_t size);
  std::string* mutable_strproofofpossessionvoucher();
  std::string* release_strproofofpossessionvoucher();
  void set_allocated_strproofofpossessionvoucher(std::string* strproofofpossessionvoucher);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strproofofpossessionvoucher();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strproofofpossessionvoucher(
      std::string* strproofofpossessionvoucher);
  private:
  const std::string& _internal_strproofofpossessionvoucher() const;
  void _internal_set_strproofofpossessionvoucher(const std::string& value);
  std::string* _internal_mutable_strproofofpossessionvoucher();
  public:

  // required string strDNSExtension = 4 [default = ""];
  bool has_strdnsextension() const;
  private:
  bool _internal_has_strdnsextension() const;
  public:
  void clear_strdnsextension();
  const std::string& strdnsextension() const;
  void set_strdnsextension(const std::string& value);
  void set_strdnsextension(std::string&& value);
  void set_strdnsextension(const char* value);
  void set_strdnsextension(const char* value, size_t size);
  std::string* mutable_strdnsextension();
  std::string* release_strdnsextension();
  void set_allocated_strdnsextension(std::string* strdnsextension);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strdnsextension();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strdnsextension(
      std::string* strdnsextension);
  private:
  const std::string& _internal_strdnsextension() const;
  void _internal_set_strdnsextension(const std::string& value);
  std::string* _internal_mutable_strdnsextension();
  public:

  // optional string strKeyUsage = 5 [default = ""];
  bool has_strkeyusage() const;
  private:
  bool _internal_has_strkeyusage() const;
  public:
  void clear_strkeyusage();
  const std::string& strkeyusage() const;
  void set_strkeyusage(const std::string& value);
  void set_strkeyusage(std::string&& value);
  void set_strkeyusage(const char* value);
  void set_strkeyusage(const char* value, size_t size);
  std::string* mutable_strkeyusage();
  std::string* release_strkeyusage();
  void set_allocated_strkeyusage(std::string* strkeyusage);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strkeyusage();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strkeyusage(
      std::string* strkeyusage);
  private:
  const std::string& _internal_strkeyusage() const;
  void _internal_set_strkeyusage(const std::string& value);
  std::string* _internal_mutable_strkeyusage();
  public:

  // optional string strExtendedKeyUsage = 6 [default = ""];
  bool has_strextendedkeyusage() const;
  private:
  bool _internal_has_strextendedkeyusage() const;
  public:
  void clear_strextendedkeyusage();
  const std::string& strextendedkeyusage() const;
  void set_strextendedkeyusage(const std::string& value);
  void set_strextendedkeyusage(std::string&& value);
  void set_strextendedkeyusage(const char* value);
  void set_strextendedkeyusage(const char* value, size_t size);
  std::string* mutable_strextendedkeyusage();
  std::string* release_strextendedkeyusage();
  void set_allocated_strextendedkeyusage(std::string* strextendedkeyusage);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strextendedkeyusage();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strextendedkeyusage(
      std::string* strextendedkeyusage);
  private:
  const std::string& _internal_strextendedkeyusage() const;
  void _internal_set_strextendedkeyusage(const std::string& value);
  std::string* _internal_mutable_strextendedkeyusage();
  public:

  // required string strX509CertReq = 7 [default = ""];
  bool has_strx509certreq() const;
  private:
  bool _internal_has_strx509certreq() const;
  public:
  void clear_strx509certreq();
  const std::string& strx509certreq() const;
  void set_strx509certreq(const std::string& value);
  void set_strx509certreq(std::string&& value);
  void set_strx509certreq(const char* value);
  void set_strx509certreq(const char* value, size_t size);
  std::string* mutable_strx509certreq();
  std::string* release_strx509certreq();
  void set_allocated_strx509certreq(std::string* strx509certreq);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strx509certreq();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strx509certreq(
      std::string* strx509certreq);
  private:
  const std::string& _internal_strx509certreq() const;
  void _internal_set_strx509certreq(const std::string& value);
  std::string* _internal_mutable_strx509certreq();
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 2 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgX509CertReq_V2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strproofofpossessionvoucher_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strdnsextension_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strkeyusage_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strextendedkeyusage_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strx509certreq_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgX509CertRes_LTCA2V PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgX509CertRes_LTCA2V) */ {
 public:
  inline msgX509CertRes_LTCA2V() : msgX509CertRes_LTCA2V(nullptr) {};
  virtual ~msgX509CertRes_LTCA2V();

  msgX509CertRes_LTCA2V(const msgX509CertRes_LTCA2V& from);
  msgX509CertRes_LTCA2V(msgX509CertRes_LTCA2V&& from) noexcept
    : msgX509CertRes_LTCA2V() {
    *this = ::std::move(from);
  }

  inline msgX509CertRes_LTCA2V& operator=(const msgX509CertRes_LTCA2V& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgX509CertRes_LTCA2V& operator=(msgX509CertRes_LTCA2V&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgX509CertRes_LTCA2V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgX509CertRes_LTCA2V* internal_default_instance() {
    return reinterpret_cast<const msgX509CertRes_LTCA2V*>(
               &_msgX509CertRes_LTCA2V_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(msgX509CertRes_LTCA2V& a, msgX509CertRes_LTCA2V& b) {
    a.Swap(&b);
  }
  inline void Swap(msgX509CertRes_LTCA2V* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgX509CertRes_LTCA2V* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgX509CertRes_LTCA2V* New() const final {
    return CreateMaybeMessage<msgX509CertRes_LTCA2V>(nullptr);
  }

  msgX509CertRes_LTCA2V* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgX509CertRes_LTCA2V>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgX509CertRes_LTCA2V& from);
  void MergeFrom(const msgX509CertRes_LTCA2V& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgX509CertRes_LTCA2V* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgX509CertRes_LTCA2V";
  }
  protected:
  explicit msgX509CertRes_LTCA2V(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrReqIdentificationFieldNumber = 3,
    kStrX509CertFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 7,
    kStSignFieldNumber = 8,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 5,
    kTTimeStampFieldNumber = 6,
  };
  // required string strReqIdentification = 3 [default = ""];
  bool has_strreqidentification() const;
  private:
  bool _internal_has_strreqidentification() const;
  public:
  void clear_strreqidentification();
  const std::string& strreqidentification() const;
  void set_strreqidentification(const std::string& value);
  void set_strreqidentification(std::string&& value);
  void set_strreqidentification(const char* value);
  void set_strreqidentification(const char* value, size_t size);
  std::string* mutable_strreqidentification();
  std::string* release_strreqidentification();
  void set_allocated_strreqidentification(std::string* strreqidentification);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strreqidentification();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strreqidentification(
      std::string* strreqidentification);
  private:
  const std::string& _internal_strreqidentification() const;
  void _internal_set_strreqidentification(const std::string& value);
  std::string* _internal_mutable_strreqidentification();
  public:

  // required string strX509Cert = 4 [default = ""];
  bool has_strx509cert() const;
  private:
  bool _internal_has_strx509cert() const;
  public:
  void clear_strx509cert();
  const std::string& strx509cert() const;
  void set_strx509cert(const std::string& value);
  void set_strx509cert(std::string&& value);
  void set_strx509cert(const char* value);
  void set_strx509cert(const char* value, size_t size);
  std::string* mutable_strx509cert();
  std::string* release_strx509cert();
  void set_allocated_strx509cert(std::string* strx509cert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strx509cert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strx509cert(
      std::string* strx509cert);
  private:
  const std::string& _internal_strx509cert() const;
  void _internal_set_strx509cert(const std::string& value);
  std::string* _internal_mutable_strx509cert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 7;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 8;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgX509CertRes_LTCA2V)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strreqidentification_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strx509cert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgCRLType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgCRLType) */ {
 public:
  inline msgCRLType() : msgCRLType(nullptr) {};
  virtual ~msgCRLType();

  msgCRLType(const msgCRLType& from);
  msgCRLType(msgCRLType&& from) noexcept
    : msgCRLType() {
    *this = ::std::move(from);
  }

  inline msgCRLType& operator=(const msgCRLType& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgCRLType& operator=(msgCRLType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgCRLType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgCRLType* internal_default_instance() {
    return reinterpret_cast<const msgCRLType*>(
               &_msgCRLType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(msgCRLType& a, msgCRLType& b) {
    a.Swap(&b);
  }
  inline void Swap(msgCRLType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgCRLType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgCRLType* New() const final {
    return CreateMaybeMessage<msgCRLType>(nullptr);
  }

  msgCRLType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgCRLType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgCRLType& from);
  void MergeFrom(const msgCRLType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgCRLType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgCRLType";
  }
  protected:
  explicit msgCRLType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgCRLType_CRLType CRLType;
  static constexpr CRLType idOnly =
    msgCRLType_CRLType_idOnly;
  static constexpr CRLType idAndExpiry =
    msgCRLType_CRLType_idAndExpiry;
  static inline bool CRLType_IsValid(int value) {
    return msgCRLType_CRLType_IsValid(value);
  }
  static constexpr CRLType CRLType_MIN =
    msgCRLType_CRLType_CRLType_MIN;
  static constexpr CRLType CRLType_MAX =
    msgCRLType_CRLType_CRLType_MAX;
  static constexpr int CRLType_ARRAYSIZE =
    msgCRLType_CRLType_CRLType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  CRLType_descriptor() {
    return msgCRLType_CRLType_descriptor();
  }
  template<typename T>
  static inline const std::string& CRLType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, CRLType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function CRLType_Name.");
    return msgCRLType_CRLType_Name(enum_t_value);
  }
  static inline bool CRLType_Parse(const std::string& name,
      CRLType* value) {
    return msgCRLType_CRLType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:interfaces.msgCRLType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTwoDLocation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTwoDLocation) */ {
 public:
  inline msgTwoDLocation() : msgTwoDLocation(nullptr) {};
  virtual ~msgTwoDLocation();

  msgTwoDLocation(const msgTwoDLocation& from);
  msgTwoDLocation(msgTwoDLocation&& from) noexcept
    : msgTwoDLocation() {
    *this = ::std::move(from);
  }

  inline msgTwoDLocation& operator=(const msgTwoDLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTwoDLocation& operator=(msgTwoDLocation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTwoDLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTwoDLocation* internal_default_instance() {
    return reinterpret_cast<const msgTwoDLocation*>(
               &_msgTwoDLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(msgTwoDLocation& a, msgTwoDLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTwoDLocation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTwoDLocation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTwoDLocation* New() const final {
    return CreateMaybeMessage<msgTwoDLocation>(nullptr);
  }

  msgTwoDLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTwoDLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTwoDLocation& from);
  void MergeFrom(const msgTwoDLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTwoDLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTwoDLocation";
  }
  protected:
  explicit msgTwoDLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // required int32 latitude = 1 [default = -1];
  bool has_latitude() const;
  private:
  bool _internal_has_latitude() const;
  public:
  void clear_latitude();
  ::PROTOBUF_NAMESPACE_ID::int32 latitude() const;
  void set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_latitude() const;
  void _internal_set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 longitude = 2 [default = -1];
  bool has_longitude() const;
  private:
  bool _internal_has_longitude() const;
  public:
  void clear_longitude();
  ::PROTOBUF_NAMESPACE_ID::int32 longitude() const;
  void set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_longitude() const;
  void _internal_set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTwoDLocation)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 latitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 longitude_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgCircularRegion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgCircularRegion) */ {
 public:
  inline msgCircularRegion() : msgCircularRegion(nullptr) {};
  virtual ~msgCircularRegion();

  msgCircularRegion(const msgCircularRegion& from);
  msgCircularRegion(msgCircularRegion&& from) noexcept
    : msgCircularRegion() {
    *this = ::std::move(from);
  }

  inline msgCircularRegion& operator=(const msgCircularRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgCircularRegion& operator=(msgCircularRegion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgCircularRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgCircularRegion* internal_default_instance() {
    return reinterpret_cast<const msgCircularRegion*>(
               &_msgCircularRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(msgCircularRegion& a, msgCircularRegion& b) {
    a.Swap(&b);
  }
  inline void Swap(msgCircularRegion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgCircularRegion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgCircularRegion* New() const final {
    return CreateMaybeMessage<msgCircularRegion>(nullptr);
  }

  msgCircularRegion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgCircularRegion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgCircularRegion& from);
  void MergeFrom(const msgCircularRegion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgCircularRegion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgCircularRegion";
  }
  protected:
  explicit msgCircularRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStCenterFieldNumber = 1,
    kRadiusFieldNumber = 2,
  };
  // required .interfaces.msgTwoDLocation stCenter = 1;
  bool has_stcenter() const;
  private:
  bool _internal_has_stcenter() const;
  public:
  void clear_stcenter();
  const ::interfaces::msgTwoDLocation& stcenter() const;
  ::interfaces::msgTwoDLocation* release_stcenter();
  ::interfaces::msgTwoDLocation* mutable_stcenter();
  void set_allocated_stcenter(::interfaces::msgTwoDLocation* stcenter);
  private:
  const ::interfaces::msgTwoDLocation& _internal_stcenter() const;
  ::interfaces::msgTwoDLocation* _internal_mutable_stcenter();
  public:
  void unsafe_arena_set_allocated_stcenter(
      ::interfaces::msgTwoDLocation* stcenter);
  ::interfaces::msgTwoDLocation* unsafe_arena_release_stcenter();

  // required uint32 radius = 2 [default = 0];
  bool has_radius() const;
  private:
  bool _internal_has_radius() const;
  public:
  void clear_radius();
  ::PROTOBUF_NAMESPACE_ID::uint32 radius() const;
  void set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_radius() const;
  void _internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgCircularRegion)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgTwoDLocation* stcenter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 radius_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRectangularRegion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRectangularRegion) */ {
 public:
  inline msgRectangularRegion() : msgRectangularRegion(nullptr) {};
  virtual ~msgRectangularRegion();

  msgRectangularRegion(const msgRectangularRegion& from);
  msgRectangularRegion(msgRectangularRegion&& from) noexcept
    : msgRectangularRegion() {
    *this = ::std::move(from);
  }

  inline msgRectangularRegion& operator=(const msgRectangularRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRectangularRegion& operator=(msgRectangularRegion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRectangularRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRectangularRegion* internal_default_instance() {
    return reinterpret_cast<const msgRectangularRegion*>(
               &_msgRectangularRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(msgRectangularRegion& a, msgRectangularRegion& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRectangularRegion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRectangularRegion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRectangularRegion* New() const final {
    return CreateMaybeMessage<msgRectangularRegion>(nullptr);
  }

  msgRectangularRegion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRectangularRegion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRectangularRegion& from);
  void MergeFrom(const msgRectangularRegion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRectangularRegion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRectangularRegion";
  }
  protected:
  explicit msgRectangularRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStUpperLeftFieldNumber = 1,
    kStLowerRightFieldNumber = 2,
  };
  // required .interfaces.msgTwoDLocation stUpperLeft = 1;
  bool has_stupperleft() const;
  private:
  bool _internal_has_stupperleft() const;
  public:
  void clear_stupperleft();
  const ::interfaces::msgTwoDLocation& stupperleft() const;
  ::interfaces::msgTwoDLocation* release_stupperleft();
  ::interfaces::msgTwoDLocation* mutable_stupperleft();
  void set_allocated_stupperleft(::interfaces::msgTwoDLocation* stupperleft);
  private:
  const ::interfaces::msgTwoDLocation& _internal_stupperleft() const;
  ::interfaces::msgTwoDLocation* _internal_mutable_stupperleft();
  public:
  void unsafe_arena_set_allocated_stupperleft(
      ::interfaces::msgTwoDLocation* stupperleft);
  ::interfaces::msgTwoDLocation* unsafe_arena_release_stupperleft();

  // required .interfaces.msgTwoDLocation stLowerRight = 2;
  bool has_stlowerright() const;
  private:
  bool _internal_has_stlowerright() const;
  public:
  void clear_stlowerright();
  const ::interfaces::msgTwoDLocation& stlowerright() const;
  ::interfaces::msgTwoDLocation* release_stlowerright();
  ::interfaces::msgTwoDLocation* mutable_stlowerright();
  void set_allocated_stlowerright(::interfaces::msgTwoDLocation* stlowerright);
  private:
  const ::interfaces::msgTwoDLocation& _internal_stlowerright() const;
  ::interfaces::msgTwoDLocation* _internal_mutable_stlowerright();
  public:
  void unsafe_arena_set_allocated_stlowerright(
      ::interfaces::msgTwoDLocation* stlowerright);
  ::interfaces::msgTwoDLocation* unsafe_arena_release_stlowerright();

  // @@protoc_insertion_point(class_scope:interfaces.msgRectangularRegion)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgTwoDLocation* stupperleft_;
  ::interfaces::msgTwoDLocation* stlowerright_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgApplicationID PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgApplicationID) */ {
 public:
  inline msgApplicationID() : msgApplicationID(nullptr) {};
  virtual ~msgApplicationID();

  msgApplicationID(const msgApplicationID& from);
  msgApplicationID(msgApplicationID&& from) noexcept
    : msgApplicationID() {
    *this = ::std::move(from);
  }

  inline msgApplicationID& operator=(const msgApplicationID& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgApplicationID& operator=(msgApplicationID&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgApplicationID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgApplicationID* internal_default_instance() {
    return reinterpret_cast<const msgApplicationID*>(
               &_msgApplicationID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(msgApplicationID& a, msgApplicationID& b) {
    a.Swap(&b);
  }
  inline void Swap(msgApplicationID* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgApplicationID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgApplicationID* New() const final {
    return CreateMaybeMessage<msgApplicationID>(nullptr);
  }

  msgApplicationID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgApplicationID>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgApplicationID& from);
  void MergeFrom(const msgApplicationID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgApplicationID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgApplicationID";
  }
  protected:
  explicit msgApplicationID(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kAcidFieldNumber = 2,
    kAcmFieldNumber = 3,
  };
  // required .interfaces.msgAIDType.AIDType type = 1 [default = fullySpecified];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::interfaces::msgAIDType_AIDType type() const;
  void set_type(::interfaces::msgAIDType_AIDType value);
  private:
  ::interfaces::msgAIDType_AIDType _internal_type() const;
  void _internal_set_type(::interfaces::msgAIDType_AIDType value);
  public:

  // required uint32 acid = 2 [default = 0];
  bool has_acid() const;
  private:
  bool _internal_has_acid() const;
  public:
  void clear_acid();
  ::PROTOBUF_NAMESPACE_ID::uint32 acid() const;
  void set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_acid() const;
  void _internal_set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 acm = 3 [default = 0];
  bool has_acm() const;
  private:
  bool _internal_has_acm() const;
  public:
  void clear_acm();
  ::PROTOBUF_NAMESPACE_ID::uint32 acm() const;
  void set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_acm() const;
  void _internal_set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgApplicationID)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 acid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 acm_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgOBUIdentifiedScope PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgOBUIdentifiedScope) */ {
 public:
  inline msgOBUIdentifiedScope() : msgOBUIdentifiedScope(nullptr) {};
  virtual ~msgOBUIdentifiedScope();

  msgOBUIdentifiedScope(const msgOBUIdentifiedScope& from);
  msgOBUIdentifiedScope(msgOBUIdentifiedScope&& from) noexcept
    : msgOBUIdentifiedScope() {
    *this = ::std::move(from);
  }

  inline msgOBUIdentifiedScope& operator=(const msgOBUIdentifiedScope& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgOBUIdentifiedScope& operator=(msgOBUIdentifiedScope&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgOBUIdentifiedScope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgOBUIdentifiedScope* internal_default_instance() {
    return reinterpret_cast<const msgOBUIdentifiedScope*>(
               &_msgOBUIdentifiedScope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(msgOBUIdentifiedScope& a, msgOBUIdentifiedScope& b) {
    a.Swap(&b);
  }
  inline void Swap(msgOBUIdentifiedScope* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgOBUIdentifiedScope* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgOBUIdentifiedScope* New() const final {
    return CreateMaybeMessage<msgOBUIdentifiedScope>(nullptr);
  }

  msgOBUIdentifiedScope* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgOBUIdentifiedScope>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgOBUIdentifiedScope& from);
  void MergeFrom(const msgOBUIdentifiedScope& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgOBUIdentifiedScope* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgOBUIdentifiedScope";
  }
  protected:
  explicit msgOBUIdentifiedScope(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStAppIDFieldNumber = 2,
    kCertSpecificDataFieldNumber = 1,
  };
  // required .interfaces.msgApplicationID stAppID = 2;
  bool has_stappid() const;
  private:
  bool _internal_has_stappid() const;
  public:
  void clear_stappid();
  const ::interfaces::msgApplicationID& stappid() const;
  ::interfaces::msgApplicationID* release_stappid();
  ::interfaces::msgApplicationID* mutable_stappid();
  void set_allocated_stappid(::interfaces::msgApplicationID* stappid);
  private:
  const ::interfaces::msgApplicationID& _internal_stappid() const;
  ::interfaces::msgApplicationID* _internal_mutable_stappid();
  public:
  void unsafe_arena_set_allocated_stappid(
      ::interfaces::msgApplicationID* stappid);
  ::interfaces::msgApplicationID* unsafe_arena_release_stappid();

  // required uint32 certSpecificData = 1 [default = 0];
  bool has_certspecificdata() const;
  private:
  bool _internal_has_certspecificdata() const;
  public:
  void clear_certspecificdata();
  ::PROTOBUF_NAMESPACE_ID::uint32 certspecificdata() const;
  void set_certspecificdata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_certspecificdata() const;
  void _internal_set_certspecificdata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgOBUIdentifiedScope)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgApplicationID* stappid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 certspecificdata_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgGeographicRegion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgGeographicRegion) */ {
 public:
  inline msgGeographicRegion() : msgGeographicRegion(nullptr) {};
  virtual ~msgGeographicRegion();

  msgGeographicRegion(const msgGeographicRegion& from);
  msgGeographicRegion(msgGeographicRegion&& from) noexcept
    : msgGeographicRegion() {
    *this = ::std::move(from);
  }

  inline msgGeographicRegion& operator=(const msgGeographicRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgGeographicRegion& operator=(msgGeographicRegion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgGeographicRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgGeographicRegion* internal_default_instance() {
    return reinterpret_cast<const msgGeographicRegion*>(
               &_msgGeographicRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(msgGeographicRegion& a, msgGeographicRegion& b) {
    a.Swap(&b);
  }
  inline void Swap(msgGeographicRegion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgGeographicRegion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgGeographicRegion* New() const final {
    return CreateMaybeMessage<msgGeographicRegion>(nullptr);
  }

  msgGeographicRegion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgGeographicRegion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgGeographicRegion& from);
  void MergeFrom(const msgGeographicRegion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgGeographicRegion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgGeographicRegion";
  }
  protected:
  explicit msgGeographicRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegionTypeFieldNumber = 1,
  };
  // required .interfaces.msgRegionType.RegionType regionType = 1 [default = none];
  bool has_regiontype() const;
  private:
  bool _internal_has_regiontype() const;
  public:
  void clear_regiontype();
  ::interfaces::msgRegionType_RegionType regiontype() const;
  void set_regiontype(::interfaces::msgRegionType_RegionType value);
  private:
  ::interfaces::msgRegionType_RegionType _internal_regiontype() const;
  void _internal_set_regiontype(::interfaces::msgRegionType_RegionType value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgGeographicRegion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int regiontype_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgIdentifiedScope PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgIdentifiedScope) */ {
 public:
  inline msgIdentifiedScope() : msgIdentifiedScope(nullptr) {};
  virtual ~msgIdentifiedScope();

  msgIdentifiedScope(const msgIdentifiedScope& from);
  msgIdentifiedScope(msgIdentifiedScope&& from) noexcept
    : msgIdentifiedScope() {
    *this = ::std::move(from);
  }

  inline msgIdentifiedScope& operator=(const msgIdentifiedScope& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgIdentifiedScope& operator=(msgIdentifiedScope&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgIdentifiedScope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgIdentifiedScope* internal_default_instance() {
    return reinterpret_cast<const msgIdentifiedScope*>(
               &_msgIdentifiedScope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(msgIdentifiedScope& a, msgIdentifiedScope& b) {
    a.Swap(&b);
  }
  inline void Swap(msgIdentifiedScope* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgIdentifiedScope* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgIdentifiedScope* New() const final {
    return CreateMaybeMessage<msgIdentifiedScope>(nullptr);
  }

  msgIdentifiedScope* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgIdentifiedScope>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgIdentifiedScope& from);
  void MergeFrom(const msgIdentifiedScope& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgIdentifiedScope* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgIdentifiedScope";
  }
  protected:
  explicit msgIdentifiedScope(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStAppIDFieldNumber = 2,
    kStGeoRegionFieldNumber = 3,
    kSubjectNameFieldNumber = 1,
  };
  // required .interfaces.msgApplicationID stAppID = 2;
  bool has_stappid() const;
  private:
  bool _internal_has_stappid() const;
  public:
  void clear_stappid();
  const ::interfaces::msgApplicationID& stappid() const;
  ::interfaces::msgApplicationID* release_stappid();
  ::interfaces::msgApplicationID* mutable_stappid();
  void set_allocated_stappid(::interfaces::msgApplicationID* stappid);
  private:
  const ::interfaces::msgApplicationID& _internal_stappid() const;
  ::interfaces::msgApplicationID* _internal_mutable_stappid();
  public:
  void unsafe_arena_set_allocated_stappid(
      ::interfaces::msgApplicationID* stappid);
  ::interfaces::msgApplicationID* unsafe_arena_release_stappid();

  // required .interfaces.msgGeographicRegion stGeoRegion = 3;
  bool has_stgeoregion() const;
  private:
  bool _internal_has_stgeoregion() const;
  public:
  void clear_stgeoregion();
  const ::interfaces::msgGeographicRegion& stgeoregion() const;
  ::interfaces::msgGeographicRegion* release_stgeoregion();
  ::interfaces::msgGeographicRegion* mutable_stgeoregion();
  void set_allocated_stgeoregion(::interfaces::msgGeographicRegion* stgeoregion);
  private:
  const ::interfaces::msgGeographicRegion& _internal_stgeoregion() const;
  ::interfaces::msgGeographicRegion* _internal_mutable_stgeoregion();
  public:
  void unsafe_arena_set_allocated_stgeoregion(
      ::interfaces::msgGeographicRegion* stgeoregion);
  ::interfaces::msgGeographicRegion* unsafe_arena_release_stgeoregion();

  // required uint32 subjectName = 1 [default = 0];
  bool has_subjectname() const;
  private:
  bool _internal_has_subjectname() const;
  public:
  void clear_subjectname();
  ::PROTOBUF_NAMESPACE_ID::uint32 subjectname() const;
  void set_subjectname(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subjectname() const;
  void _internal_set_subjectname(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgIdentifiedScope)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgApplicationID* stappid_;
  ::interfaces::msgGeographicRegion* stgeoregion_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subjectname_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgAppIDAndPriority PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgAppIDAndPriority) */ {
 public:
  inline msgAppIDAndPriority() : msgAppIDAndPriority(nullptr) {};
  virtual ~msgAppIDAndPriority();

  msgAppIDAndPriority(const msgAppIDAndPriority& from);
  msgAppIDAndPriority(msgAppIDAndPriority&& from) noexcept
    : msgAppIDAndPriority() {
    *this = ::std::move(from);
  }

  inline msgAppIDAndPriority& operator=(const msgAppIDAndPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgAppIDAndPriority& operator=(msgAppIDAndPriority&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgAppIDAndPriority& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgAppIDAndPriority* internal_default_instance() {
    return reinterpret_cast<const msgAppIDAndPriority*>(
               &_msgAppIDAndPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(msgAppIDAndPriority& a, msgAppIDAndPriority& b) {
    a.Swap(&b);
  }
  inline void Swap(msgAppIDAndPriority* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgAppIDAndPriority* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgAppIDAndPriority* New() const final {
    return CreateMaybeMessage<msgAppIDAndPriority>(nullptr);
  }

  msgAppIDAndPriority* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgAppIDAndPriority>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgAppIDAndPriority& from);
  void MergeFrom(const msgAppIDAndPriority& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgAppIDAndPriority* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgAppIDAndPriority";
  }
  protected:
  explicit msgAppIDAndPriority(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kAcidFieldNumber = 2,
    kAcmFieldNumber = 3,
    kMaxPriorityFieldNumber = 4,
  };
  // required .interfaces.msgAIDType.AIDType type = 1 [default = fullySpecified];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::interfaces::msgAIDType_AIDType type() const;
  void set_type(::interfaces::msgAIDType_AIDType value);
  private:
  ::interfaces::msgAIDType_AIDType _internal_type() const;
  void _internal_set_type(::interfaces::msgAIDType_AIDType value);
  public:

  // required uint32 acid = 2 [default = 0];
  bool has_acid() const;
  private:
  bool _internal_has_acid() const;
  public:
  void clear_acid();
  ::PROTOBUF_NAMESPACE_ID::uint32 acid() const;
  void set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_acid() const;
  void _internal_set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 acm = 3 [default = 0];
  bool has_acm() const;
  private:
  bool _internal_has_acm() const;
  public:
  void clear_acm();
  ::PROTOBUF_NAMESPACE_ID::uint32 acm() const;
  void set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_acm() const;
  void _internal_set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxPriority = 4 [default = 0];
  bool has_maxpriority() const;
  private:
  bool _internal_has_maxpriority() const;
  public:
  void clear_maxpriority();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxpriority() const;
  void set_maxpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxpriority() const;
  void _internal_set_maxpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgAppIDAndPriority)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 acid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 acm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxpriority_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgCAScope PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgCAScope) */ {
 public:
  inline msgCAScope() : msgCAScope(nullptr) {};
  virtual ~msgCAScope();

  msgCAScope(const msgCAScope& from);
  msgCAScope(msgCAScope&& from) noexcept
    : msgCAScope() {
    *this = ::std::move(from);
  }

  inline msgCAScope& operator=(const msgCAScope& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgCAScope& operator=(msgCAScope&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgCAScope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgCAScope* internal_default_instance() {
    return reinterpret_cast<const msgCAScope*>(
               &_msgCAScope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(msgCAScope& a, msgCAScope& b) {
    a.Swap(&b);
  }
  inline void Swap(msgCAScope* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgCAScope* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgCAScope* New() const final {
    return CreateMaybeMessage<msgCAScope>(nullptr);
  }

  msgCAScope* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgCAScope>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgCAScope& from);
  void MergeFrom(const msgCAScope& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgCAScope* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgCAScope";
  }
  protected:
  explicit msgCAScope(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStAppIDFieldNumber = 2,
    kStAppsAndPrioritiesFieldNumber = 3,
    kStGeoRegionFieldNumber = 4,
    kTFFieldNumber = 1,
  };
  // required .interfaces.msgApplicationID stAppID = 2;
  bool has_stappid() const;
  private:
  bool _internal_has_stappid() const;
  public:
  void clear_stappid();
  const ::interfaces::msgApplicationID& stappid() const;
  ::interfaces::msgApplicationID* release_stappid();
  ::interfaces::msgApplicationID* mutable_stappid();
  void set_allocated_stappid(::interfaces::msgApplicationID* stappid);
  private:
  const ::interfaces::msgApplicationID& _internal_stappid() const;
  ::interfaces::msgApplicationID* _internal_mutable_stappid();
  public:
  void unsafe_arena_set_allocated_stappid(
      ::interfaces::msgApplicationID* stappid);
  ::interfaces::msgApplicationID* unsafe_arena_release_stappid();

  // required .interfaces.msgAppIDAndPriority stAppsAndPriorities = 3;
  bool has_stappsandpriorities() const;
  private:
  bool _internal_has_stappsandpriorities() const;
  public:
  void clear_stappsandpriorities();
  const ::interfaces::msgAppIDAndPriority& stappsandpriorities() const;
  ::interfaces::msgAppIDAndPriority* release_stappsandpriorities();
  ::interfaces::msgAppIDAndPriority* mutable_stappsandpriorities();
  void set_allocated_stappsandpriorities(::interfaces::msgAppIDAndPriority* stappsandpriorities);
  private:
  const ::interfaces::msgAppIDAndPriority& _internal_stappsandpriorities() const;
  ::interfaces::msgAppIDAndPriority* _internal_mutable_stappsandpriorities();
  public:
  void unsafe_arena_set_allocated_stappsandpriorities(
      ::interfaces::msgAppIDAndPriority* stappsandpriorities);
  ::interfaces::msgAppIDAndPriority* unsafe_arena_release_stappsandpriorities();

  // required .interfaces.msgGeographicRegion stGeoRegion = 4;
  bool has_stgeoregion() const;
  private:
  bool _internal_has_stgeoregion() const;
  public:
  void clear_stgeoregion();
  const ::interfaces::msgGeographicRegion& stgeoregion() const;
  ::interfaces::msgGeographicRegion* release_stgeoregion();
  ::interfaces::msgGeographicRegion* mutable_stgeoregion();
  void set_allocated_stgeoregion(::interfaces::msgGeographicRegion* stgeoregion);
  private:
  const ::interfaces::msgGeographicRegion& _internal_stgeoregion() const;
  ::interfaces::msgGeographicRegion* _internal_mutable_stgeoregion();
  public:
  void unsafe_arena_set_allocated_stgeoregion(
      ::interfaces::msgGeographicRegion* stgeoregion);
  ::interfaces::msgGeographicRegion* unsafe_arena_release_stgeoregion();

  // required .interfaces.msgSubTypeFlags.SubjectTypeFlags TF = 1 [default = wsa_ca];
  bool has_tf() const;
  private:
  bool _internal_has_tf() const;
  public:
  void clear_tf();
  ::interfaces::msgSubTypeFlags_SubjectTypeFlags tf() const;
  void set_tf(::interfaces::msgSubTypeFlags_SubjectTypeFlags value);
  private:
  ::interfaces::msgSubTypeFlags_SubjectTypeFlags _internal_tf() const;
  void _internal_set_tf(::interfaces::msgSubTypeFlags_SubjectTypeFlags value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgCAScope)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgApplicationID* stappid_;
  ::interfaces::msgAppIDAndPriority* stappsandpriorities_;
  ::interfaces::msgGeographicRegion* stgeoregion_;
  int tf_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgCertSpecificData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgCertSpecificData) */ {
 public:
  inline msgCertSpecificData() : msgCertSpecificData(nullptr) {};
  virtual ~msgCertSpecificData();

  msgCertSpecificData(const msgCertSpecificData& from);
  msgCertSpecificData(msgCertSpecificData&& from) noexcept
    : msgCertSpecificData() {
    *this = ::std::move(from);
  }

  inline msgCertSpecificData& operator=(const msgCertSpecificData& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgCertSpecificData& operator=(msgCertSpecificData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgCertSpecificData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgCertSpecificData* internal_default_instance() {
    return reinterpret_cast<const msgCertSpecificData*>(
               &_msgCertSpecificData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(msgCertSpecificData& a, msgCertSpecificData& b) {
    a.Swap(&b);
  }
  inline void Swap(msgCertSpecificData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgCertSpecificData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgCertSpecificData* New() const final {
    return CreateMaybeMessage<msgCertSpecificData>(nullptr);
  }

  msgCertSpecificData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgCertSpecificData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgCertSpecificData& from);
  void MergeFrom(const msgCertSpecificData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgCertSpecificData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgCertSpecificData";
  }
  protected:
  explicit msgCertSpecificData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScopeCAFieldNumber = 2,
    kScopeIdFieldNumber = 5,
    kScopeOBUFieldNumber = 6,
    kSubjectTypeFieldNumber = 1,
    kResponsibleCrlSeriesFieldNumber = 3,
    kWsaScopeFieldNumber = 4,
  };
  // required .interfaces.msgCAScope scopeCA = 2;
  bool has_scopeca() const;
  private:
  bool _internal_has_scopeca() const;
  public:
  void clear_scopeca();
  const ::interfaces::msgCAScope& scopeca() const;
  ::interfaces::msgCAScope* release_scopeca();
  ::interfaces::msgCAScope* mutable_scopeca();
  void set_allocated_scopeca(::interfaces::msgCAScope* scopeca);
  private:
  const ::interfaces::msgCAScope& _internal_scopeca() const;
  ::interfaces::msgCAScope* _internal_mutable_scopeca();
  public:
  void unsafe_arena_set_allocated_scopeca(
      ::interfaces::msgCAScope* scopeca);
  ::interfaces::msgCAScope* unsafe_arena_release_scopeca();

  // required .interfaces.msgIdentifiedScope scopeId = 5;
  bool has_scopeid() const;
  private:
  bool _internal_has_scopeid() const;
  public:
  void clear_scopeid();
  const ::interfaces::msgIdentifiedScope& scopeid() const;
  ::interfaces::msgIdentifiedScope* release_scopeid();
  ::interfaces::msgIdentifiedScope* mutable_scopeid();
  void set_allocated_scopeid(::interfaces::msgIdentifiedScope* scopeid);
  private:
  const ::interfaces::msgIdentifiedScope& _internal_scopeid() const;
  ::interfaces::msgIdentifiedScope* _internal_mutable_scopeid();
  public:
  void unsafe_arena_set_allocated_scopeid(
      ::interfaces::msgIdentifiedScope* scopeid);
  ::interfaces::msgIdentifiedScope* unsafe_arena_release_scopeid();

  // required .interfaces.msgOBUIdentifiedScope scopeOBU = 6;
  bool has_scopeobu() const;
  private:
  bool _internal_has_scopeobu() const;
  public:
  void clear_scopeobu();
  const ::interfaces::msgOBUIdentifiedScope& scopeobu() const;
  ::interfaces::msgOBUIdentifiedScope* release_scopeobu();
  ::interfaces::msgOBUIdentifiedScope* mutable_scopeobu();
  void set_allocated_scopeobu(::interfaces::msgOBUIdentifiedScope* scopeobu);
  private:
  const ::interfaces::msgOBUIdentifiedScope& _internal_scopeobu() const;
  ::interfaces::msgOBUIdentifiedScope* _internal_mutable_scopeobu();
  public:
  void unsafe_arena_set_allocated_scopeobu(
      ::interfaces::msgOBUIdentifiedScope* scopeobu);
  ::interfaces::msgOBUIdentifiedScope* unsafe_arena_release_scopeobu();

  // required .interfaces.msgSubType.SubjectType subjectType = 1 [default = wsa_ca1];
  bool has_subjecttype() const;
  private:
  bool _internal_has_subjecttype() const;
  public:
  void clear_subjecttype();
  ::interfaces::msgSubType_SubjectType subjecttype() const;
  void set_subjecttype(::interfaces::msgSubType_SubjectType value);
  private:
  ::interfaces::msgSubType_SubjectType _internal_subjecttype() const;
  void _internal_set_subjecttype(::interfaces::msgSubType_SubjectType value);
  public:

  // required uint32 responsibleCrlSeries = 3 [default = 0];
  bool has_responsiblecrlseries() const;
  private:
  bool _internal_has_responsiblecrlseries() const;
  public:
  void clear_responsiblecrlseries();
  ::PROTOBUF_NAMESPACE_ID::uint32 responsiblecrlseries() const;
  void set_responsiblecrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_responsiblecrlseries() const;
  void _internal_set_responsiblecrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .interfaces.msgWSASignerScope.WSASignerScope wsaScope = 4 [default = wsaSignerAdvertisingSpecificApplications];
  bool has_wsascope() const;
  private:
  bool _internal_has_wsascope() const;
  public:
  void clear_wsascope();
  ::interfaces::msgWSASignerScope_WSASignerScope wsascope() const;
  void set_wsascope(::interfaces::msgWSASignerScope_WSASignerScope value);
  private:
  ::interfaces::msgWSASignerScope_WSASignerScope _internal_wsascope() const;
  void _internal_set_wsascope(::interfaces::msgWSASignerScope_WSASignerScope value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgCertSpecificData)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgCAScope* scopeca_;
  ::interfaces::msgIdentifiedScope* scopeid_;
  ::interfaces::msgOBUIdentifiedScope* scopeobu_;
  int subjecttype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 responsiblecrlseries_;
  int wsascope_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgToBeSignedWAVECertificate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgToBeSignedWAVECertificate) */ {
 public:
  inline msgToBeSignedWAVECertificate() : msgToBeSignedWAVECertificate(nullptr) {};
  virtual ~msgToBeSignedWAVECertificate();

  msgToBeSignedWAVECertificate(const msgToBeSignedWAVECertificate& from);
  msgToBeSignedWAVECertificate(msgToBeSignedWAVECertificate&& from) noexcept
    : msgToBeSignedWAVECertificate() {
    *this = ::std::move(from);
  }

  inline msgToBeSignedWAVECertificate& operator=(const msgToBeSignedWAVECertificate& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgToBeSignedWAVECertificate& operator=(msgToBeSignedWAVECertificate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgToBeSignedWAVECertificate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgToBeSignedWAVECertificate* internal_default_instance() {
    return reinterpret_cast<const msgToBeSignedWAVECertificate*>(
               &_msgToBeSignedWAVECertificate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(msgToBeSignedWAVECertificate& a, msgToBeSignedWAVECertificate& b) {
    a.Swap(&b);
  }
  inline void Swap(msgToBeSignedWAVECertificate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgToBeSignedWAVECertificate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgToBeSignedWAVECertificate* New() const final {
    return CreateMaybeMessage<msgToBeSignedWAVECertificate>(nullptr);
  }

  msgToBeSignedWAVECertificate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgToBeSignedWAVECertificate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgToBeSignedWAVECertificate& from);
  void MergeFrom(const msgToBeSignedWAVECertificate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgToBeSignedWAVECertificate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgToBeSignedWAVECertificate";
  }
  protected:
  explicit msgToBeSignedWAVECertificate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertSerialNoFieldNumber = 6,
    kStrPsnymCertIdentifiableKeyFieldNumber = 7,
    kStCertScopeFieldNumber = 4,
    kStPsnymPublicKeyFieldNumber = 10,
    kUiCertificateVersionFieldNumber = 1,
    kSubjectTypeFieldNumber = 2,
    kUiCrlSeriesFieldNumber = 5,
    kISignerIdFieldNumber = 3,
    kTIsValidFromFieldNumber = 8,
    kTIsValidToFieldNumber = 9,
  };
  // required string strPsnymCertSerialNo = 6 [default = ""];
  bool has_strpsnymcertserialno() const;
  private:
  bool _internal_has_strpsnymcertserialno() const;
  public:
  void clear_strpsnymcertserialno();
  const std::string& strpsnymcertserialno() const;
  void set_strpsnymcertserialno(const std::string& value);
  void set_strpsnymcertserialno(std::string&& value);
  void set_strpsnymcertserialno(const char* value);
  void set_strpsnymcertserialno(const char* value, size_t size);
  std::string* mutable_strpsnymcertserialno();
  std::string* release_strpsnymcertserialno();
  void set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcertserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcertserialno(
      std::string* strpsnymcertserialno);
  private:
  const std::string& _internal_strpsnymcertserialno() const;
  void _internal_set_strpsnymcertserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymcertserialno();
  public:

  // required string strPsnymCertIdentifiableKey = 7 [default = ""];
  bool has_strpsnymcertidentifiablekey() const;
  private:
  bool _internal_has_strpsnymcertidentifiablekey() const;
  public:
  void clear_strpsnymcertidentifiablekey();
  const std::string& strpsnymcertidentifiablekey() const;
  void set_strpsnymcertidentifiablekey(const std::string& value);
  void set_strpsnymcertidentifiablekey(std::string&& value);
  void set_strpsnymcertidentifiablekey(const char* value);
  void set_strpsnymcertidentifiablekey(const char* value, size_t size);
  std::string* mutable_strpsnymcertidentifiablekey();
  std::string* release_strpsnymcertidentifiablekey();
  void set_allocated_strpsnymcertidentifiablekey(std::string* strpsnymcertidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcertidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcertidentifiablekey(
      std::string* strpsnymcertidentifiablekey);
  private:
  const std::string& _internal_strpsnymcertidentifiablekey() const;
  void _internal_set_strpsnymcertidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strpsnymcertidentifiablekey();
  public:

  // required .interfaces.msgCertSpecificData stCertScope = 4;
  bool has_stcertscope() const;
  private:
  bool _internal_has_stcertscope() const;
  public:
  void clear_stcertscope();
  const ::interfaces::msgCertSpecificData& stcertscope() const;
  ::interfaces::msgCertSpecificData* release_stcertscope();
  ::interfaces::msgCertSpecificData* mutable_stcertscope();
  void set_allocated_stcertscope(::interfaces::msgCertSpecificData* stcertscope);
  private:
  const ::interfaces::msgCertSpecificData& _internal_stcertscope() const;
  ::interfaces::msgCertSpecificData* _internal_mutable_stcertscope();
  public:
  void unsafe_arena_set_allocated_stcertscope(
      ::interfaces::msgCertSpecificData* stcertscope);
  ::interfaces::msgCertSpecificData* unsafe_arena_release_stcertscope();

  // required .interfaces.msgECPublicKey stPsnymPublicKey = 10;
  bool has_stpsnympublickey() const;
  private:
  bool _internal_has_stpsnympublickey() const;
  public:
  void clear_stpsnympublickey();
  const ::interfaces::msgECPublicKey& stpsnympublickey() const;
  ::interfaces::msgECPublicKey* release_stpsnympublickey();
  ::interfaces::msgECPublicKey* mutable_stpsnympublickey();
  void set_allocated_stpsnympublickey(::interfaces::msgECPublicKey* stpsnympublickey);
  private:
  const ::interfaces::msgECPublicKey& _internal_stpsnympublickey() const;
  ::interfaces::msgECPublicKey* _internal_mutable_stpsnympublickey();
  public:
  void unsafe_arena_set_allocated_stpsnympublickey(
      ::interfaces::msgECPublicKey* stpsnympublickey);
  ::interfaces::msgECPublicKey* unsafe_arena_release_stpsnympublickey();

  // required uint32 uiCertificateVersion = 1 [default = 0];
  bool has_uicertificateversion() const;
  private:
  bool _internal_has_uicertificateversion() const;
  public:
  void clear_uicertificateversion();
  ::PROTOBUF_NAMESPACE_ID::uint32 uicertificateversion() const;
  void set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uicertificateversion() const;
  void _internal_set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .interfaces.msgSubType.SubjectType subjectType = 2 [default = wsa_ca1];
  bool has_subjecttype() const;
  private:
  bool _internal_has_subjecttype() const;
  public:
  void clear_subjecttype();
  ::interfaces::msgSubType_SubjectType subjecttype() const;
  void set_subjecttype(::interfaces::msgSubType_SubjectType value);
  private:
  ::interfaces::msgSubType_SubjectType _internal_subjecttype() const;
  void _internal_set_subjecttype(::interfaces::msgSubType_SubjectType value);
  public:

  // required uint32 uiCrlSeries = 5 [default = 0];
  bool has_uicrlseries() const;
  private:
  bool _internal_has_uicrlseries() const;
  public:
  void clear_uicrlseries();
  ::PROTOBUF_NAMESPACE_ID::uint32 uicrlseries() const;
  void set_uicrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uicrlseries() const;
  void _internal_set_uicrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iSignerId = 3 [default = -1];
  bool has_isignerid() const;
  private:
  bool _internal_has_isignerid() const;
  public:
  void clear_isignerid();
  ::PROTOBUF_NAMESPACE_ID::int32 isignerid() const;
  void set_isignerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_isignerid() const;
  void _internal_set_isignerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tIsValidFrom = 8 [default = -1];
  bool has_tisvalidfrom() const;
  private:
  bool _internal_has_tisvalidfrom() const;
  public:
  void clear_tisvalidfrom();
  ::PROTOBUF_NAMESPACE_ID::int64 tisvalidfrom() const;
  void set_tisvalidfrom(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tisvalidfrom() const;
  void _internal_set_tisvalidfrom(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tIsValidTo = 9 [default = -1];
  bool has_tisvalidto() const;
  private:
  bool _internal_has_tisvalidto() const;
  public:
  void clear_tisvalidto();
  ::PROTOBUF_NAMESPACE_ID::int64 tisvalidto() const;
  void set_tisvalidto(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tisvalidto() const;
  void _internal_set_tisvalidto(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgToBeSignedWAVECertificate)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcertserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcertidentifiablekey_;
  ::interfaces::msgCertSpecificData* stcertscope_;
  ::interfaces::msgECPublicKey* stpsnympublickey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uicertificateversion_;
  int subjecttype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uicrlseries_;
  ::PROTOBUF_NAMESPACE_ID::int32 isignerid_;
  ::PROTOBUF_NAMESPACE_ID::int64 tisvalidfrom_;
  ::PROTOBUF_NAMESPACE_ID::int64 tisvalidto_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCertFormat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCertFormat) */ {
 public:
  inline msgPsnymCertFormat() : msgPsnymCertFormat(nullptr) {};
  virtual ~msgPsnymCertFormat();

  msgPsnymCertFormat(const msgPsnymCertFormat& from);
  msgPsnymCertFormat(msgPsnymCertFormat&& from) noexcept
    : msgPsnymCertFormat() {
    *this = ::std::move(from);
  }

  inline msgPsnymCertFormat& operator=(const msgPsnymCertFormat& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCertFormat& operator=(msgPsnymCertFormat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCertFormat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCertFormat* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCertFormat*>(
               &_msgPsnymCertFormat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(msgPsnymCertFormat& a, msgPsnymCertFormat& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCertFormat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCertFormat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCertFormat* New() const final {
    return CreateMaybeMessage<msgPsnymCertFormat>(nullptr);
  }

  msgPsnymCertFormat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCertFormat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCertFormat& from);
  void MergeFrom(const msgPsnymCertFormat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCertFormat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCertFormat";
  }
  protected:
  explicit msgPsnymCertFormat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStCertificateFieldNumber = 2,
    kStSignFieldNumber = 3,
    kUiCertificateVersionFieldNumber = 1,
  };
  // required .interfaces.msgToBeSignedWAVECertificate stCertificate = 2;
  bool has_stcertificate() const;
  private:
  bool _internal_has_stcertificate() const;
  public:
  void clear_stcertificate();
  const ::interfaces::msgToBeSignedWAVECertificate& stcertificate() const;
  ::interfaces::msgToBeSignedWAVECertificate* release_stcertificate();
  ::interfaces::msgToBeSignedWAVECertificate* mutable_stcertificate();
  void set_allocated_stcertificate(::interfaces::msgToBeSignedWAVECertificate* stcertificate);
  private:
  const ::interfaces::msgToBeSignedWAVECertificate& _internal_stcertificate() const;
  ::interfaces::msgToBeSignedWAVECertificate* _internal_mutable_stcertificate();
  public:
  void unsafe_arena_set_allocated_stcertificate(
      ::interfaces::msgToBeSignedWAVECertificate* stcertificate);
  ::interfaces::msgToBeSignedWAVECertificate* unsafe_arena_release_stcertificate();

  // optional .interfaces.msgSignature stSign = 3;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiCertificateVersion = 1 [default = 0];
  bool has_uicertificateversion() const;
  private:
  bool _internal_has_uicertificateversion() const;
  public:
  void clear_uicertificateversion();
  ::PROTOBUF_NAMESPACE_ID::uint32 uicertificateversion() const;
  void set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uicertificateversion() const;
  void _internal_set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCertFormat)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgToBeSignedWAVECertificate* stcertificate_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uicertificateversion_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgSignerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgSignerInfo) */ {
 public:
  inline msgSignerInfo() : msgSignerInfo(nullptr) {};
  virtual ~msgSignerInfo();

  msgSignerInfo(const msgSignerInfo& from);
  msgSignerInfo(msgSignerInfo&& from) noexcept
    : msgSignerInfo() {
    *this = ::std::move(from);
  }

  inline msgSignerInfo& operator=(const msgSignerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgSignerInfo& operator=(msgSignerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgSignerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgSignerInfo* internal_default_instance() {
    return reinterpret_cast<const msgSignerInfo*>(
               &_msgSignerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(msgSignerInfo& a, msgSignerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(msgSignerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgSignerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgSignerInfo* New() const final {
    return CreateMaybeMessage<msgSignerInfo>(nullptr);
  }

  msgSignerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgSignerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgSignerInfo& from);
  void MergeFrom(const msgSignerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgSignerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgSignerInfo";
  }
  protected:
  explicit msgSignerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrCertificateFieldNumber = 2,
    kStrDigestFieldNumber = 3,
    kStrCertificatesChainFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // required string strCertificate = 2 [default = ""];
  bool has_strcertificate() const;
  private:
  bool _internal_has_strcertificate() const;
  public:
  void clear_strcertificate();
  const std::string& strcertificate() const;
  void set_strcertificate(const std::string& value);
  void set_strcertificate(std::string&& value);
  void set_strcertificate(const char* value);
  void set_strcertificate(const char* value, size_t size);
  std::string* mutable_strcertificate();
  std::string* release_strcertificate();
  void set_allocated_strcertificate(std::string* strcertificate);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strcertificate();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strcertificate(
      std::string* strcertificate);
  private:
  const std::string& _internal_strcertificate() const;
  void _internal_set_strcertificate(const std::string& value);
  std::string* _internal_mutable_strcertificate();
  public:

  // optional string strDigest = 3 [default = ""];
  bool has_strdigest() const;
  private:
  bool _internal_has_strdigest() const;
  public:
  void clear_strdigest();
  const std::string& strdigest() const;
  void set_strdigest(const std::string& value);
  void set_strdigest(std::string&& value);
  void set_strdigest(const char* value);
  void set_strdigest(const char* value, size_t size);
  std::string* mutable_strdigest();
  std::string* release_strdigest();
  void set_allocated_strdigest(std::string* strdigest);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strdigest();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strdigest(
      std::string* strdigest);
  private:
  const std::string& _internal_strdigest() const;
  void _internal_set_strdigest(const std::string& value);
  std::string* _internal_mutable_strdigest();
  public:

  // optional string strCertificatesChain = 4 [default = ""];
  bool has_strcertificateschain() const;
  private:
  bool _internal_has_strcertificateschain() const;
  public:
  void clear_strcertificateschain();
  const std::string& strcertificateschain() const;
  void set_strcertificateschain(const std::string& value);
  void set_strcertificateschain(std::string&& value);
  void set_strcertificateschain(const char* value);
  void set_strcertificateschain(const char* value, size_t size);
  std::string* mutable_strcertificateschain();
  std::string* release_strcertificateschain();
  void set_allocated_strcertificateschain(std::string* strcertificateschain);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strcertificateschain();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strcertificateschain(
      std::string* strcertificateschain);
  private:
  const std::string& _internal_strcertificateschain() const;
  void _internal_set_strcertificateschain(const std::string& value);
  std::string* _internal_mutable_strcertificateschain();
  public:

  // required .interfaces.msgSignerIdentifierType.SignerIdentifierType type = 1 [default = self];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::interfaces::msgSignerIdentifierType_SignerIdentifierType type() const;
  void set_type(::interfaces::msgSignerIdentifierType_SignerIdentifierType value);
  private:
  ::interfaces::msgSignerIdentifierType_SignerIdentifierType _internal_type() const;
  void _internal_set_type(::interfaces::msgSignerIdentifierType_SignerIdentifierType value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgSignerInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcertificate_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strdigest_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcertificateschain_;
  int type_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymKeysStorage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymKeysStorage) */ {
 public:
  inline msgPsnymKeysStorage() : msgPsnymKeysStorage(nullptr) {};
  virtual ~msgPsnymKeysStorage();

  msgPsnymKeysStorage(const msgPsnymKeysStorage& from);
  msgPsnymKeysStorage(msgPsnymKeysStorage&& from) noexcept
    : msgPsnymKeysStorage() {
    *this = ::std::move(from);
  }

  inline msgPsnymKeysStorage& operator=(const msgPsnymKeysStorage& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymKeysStorage& operator=(msgPsnymKeysStorage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymKeysStorage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymKeysStorage* internal_default_instance() {
    return reinterpret_cast<const msgPsnymKeysStorage*>(
               &_msgPsnymKeysStorage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(msgPsnymKeysStorage& a, msgPsnymKeysStorage& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymKeysStorage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymKeysStorage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymKeysStorage* New() const final {
    return CreateMaybeMessage<msgPsnymKeysStorage>(nullptr);
  }

  msgPsnymKeysStorage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymKeysStorage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymKeysStorage& from);
  void MergeFrom(const msgPsnymKeysStorage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymKeysStorage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymKeysStorage";
  }
  protected:
  explicit msgPsnymKeysStorage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymPrivateKeyFieldNumber = 2,
    kStPsnymCertFieldNumber = 3,
    kIPsnymPrivateKeyLenFieldNumber = 1,
  };
  // required string strPsnymPrivateKey = 2 [default = ""];
  bool has_strpsnymprivatekey() const;
  private:
  bool _internal_has_strpsnymprivatekey() const;
  public:
  void clear_strpsnymprivatekey();
  const std::string& strpsnymprivatekey() const;
  void set_strpsnymprivatekey(const std::string& value);
  void set_strpsnymprivatekey(std::string&& value);
  void set_strpsnymprivatekey(const char* value);
  void set_strpsnymprivatekey(const char* value, size_t size);
  std::string* mutable_strpsnymprivatekey();
  std::string* release_strpsnymprivatekey();
  void set_allocated_strpsnymprivatekey(std::string* strpsnymprivatekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymprivatekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymprivatekey(
      std::string* strpsnymprivatekey);
  private:
  const std::string& _internal_strpsnymprivatekey() const;
  void _internal_set_strpsnymprivatekey(const std::string& value);
  std::string* _internal_mutable_strpsnymprivatekey();
  public:

  // required .interfaces.msgPsnymCertFormat stPsnymCert = 3;
  bool has_stpsnymcert() const;
  private:
  bool _internal_has_stpsnymcert() const;
  public:
  void clear_stpsnymcert();
  const ::interfaces::msgPsnymCertFormat& stpsnymcert() const;
  ::interfaces::msgPsnymCertFormat* release_stpsnymcert();
  ::interfaces::msgPsnymCertFormat* mutable_stpsnymcert();
  void set_allocated_stpsnymcert(::interfaces::msgPsnymCertFormat* stpsnymcert);
  private:
  const ::interfaces::msgPsnymCertFormat& _internal_stpsnymcert() const;
  ::interfaces::msgPsnymCertFormat* _internal_mutable_stpsnymcert();
  public:
  void unsafe_arena_set_allocated_stpsnymcert(
      ::interfaces::msgPsnymCertFormat* stpsnymcert);
  ::interfaces::msgPsnymCertFormat* unsafe_arena_release_stpsnymcert();

  // required int32 iPsnymPrivateKeyLen = 1 [default = -1];
  bool has_ipsnymprivatekeylen() const;
  private:
  bool _internal_has_ipsnymprivatekeylen() const;
  public:
  void clear_ipsnymprivatekeylen();
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymprivatekeylen() const;
  void set_ipsnymprivatekeylen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipsnymprivatekeylen() const;
  void _internal_set_ipsnymprivatekeylen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymKeysStorage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymprivatekey_;
  ::interfaces::msgPsnymCertFormat* stpsnymcert_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymprivatekeylen_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTicketReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTicketReq) */ {
 public:
  inline msgTicketReq() : msgTicketReq(nullptr) {};
  virtual ~msgTicketReq();

  msgTicketReq(const msgTicketReq& from);
  msgTicketReq(msgTicketReq&& from) noexcept
    : msgTicketReq() {
    *this = ::std::move(from);
  }

  inline msgTicketReq& operator=(const msgTicketReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTicketReq& operator=(msgTicketReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTicketReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTicketReq* internal_default_instance() {
    return reinterpret_cast<const msgTicketReq*>(
               &_msgTicketReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(msgTicketReq& a, msgTicketReq& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTicketReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTicketReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTicketReq* New() const final {
    return CreateMaybeMessage<msgTicketReq>(nullptr);
  }

  msgTicketReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTicketReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTicketReq& from);
  void MergeFrom(const msgTicketReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTicketReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTicketReq";
  }
  protected:
  explicit msgTicketReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrX509CertFieldNumber = 11,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 12,
    kUiServicesFieldNumber = 3,
    kUiPsnymCertNoRequestFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kILTCAIdRangeFieldNumber = 5,
    kIPCAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
    kTPsnymStartTimeFieldNumber = 9,
    kTPsnymEndTimeFieldNumber = 10,
  };
  // required string strX509Cert = 11 [default = ""];
  bool has_strx509cert() const;
  private:
  bool _internal_has_strx509cert() const;
  public:
  void clear_strx509cert();
  const std::string& strx509cert() const;
  void set_strx509cert(const std::string& value);
  void set_strx509cert(std::string&& value);
  void set_strx509cert(const char* value);
  void set_strx509cert(const char* value, size_t size);
  std::string* mutable_strx509cert();
  std::string* release_strx509cert();
  void set_allocated_strx509cert(std::string* strx509cert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strx509cert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strx509cert(
      std::string* strx509cert);
  private:
  const std::string& _internal_strx509cert() const;
  void _internal_set_strx509cert(const std::string& value);
  std::string* _internal_mutable_strx509cert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 12;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiServices = 3 [default = 0];
  bool has_uiservices() const;
  private:
  bool _internal_has_uiservices() const;
  public:
  void clear_uiservices();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices() const;
  void set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiservices() const;
  void _internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiPsnymCertNoRequest = 4 [default = 0];
  bool has_uipsnymcertnorequest() const;
  private:
  bool _internal_has_uipsnymcertnorequest() const;
  public:
  void clear_uipsnymcertnorequest();
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertnorequest() const;
  void set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uipsnymcertnorequest() const;
  void _internal_set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 5 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 6 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tPsnymStartTime = 9 [default = -1];
  bool has_tpsnymstarttime() const;
  private:
  bool _internal_has_tpsnymstarttime() const;
  public:
  void clear_tpsnymstarttime();
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymstarttime() const;
  void set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tpsnymstarttime() const;
  void _internal_set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tPsnymEndTime = 10 [default = -1];
  bool has_tpsnymendtime() const;
  private:
  bool _internal_has_tpsnymendtime() const;
  public:
  void clear_tpsnymendtime();
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymendtime() const;
  void set_tpsnymendtime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tpsnymendtime() const;
  void _internal_set_tpsnymendtime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTicketReq)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strx509cert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertnorequest_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymstarttime_;
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymendtime_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgForeignTicketReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgForeignTicketReq) */ {
 public:
  inline msgForeignTicketReq() : msgForeignTicketReq(nullptr) {};
  virtual ~msgForeignTicketReq();

  msgForeignTicketReq(const msgForeignTicketReq& from);
  msgForeignTicketReq(msgForeignTicketReq&& from) noexcept
    : msgForeignTicketReq() {
    *this = ::std::move(from);
  }

  inline msgForeignTicketReq& operator=(const msgForeignTicketReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgForeignTicketReq& operator=(msgForeignTicketReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgForeignTicketReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgForeignTicketReq* internal_default_instance() {
    return reinterpret_cast<const msgForeignTicketReq*>(
               &_msgForeignTicketReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(msgForeignTicketReq& a, msgForeignTicketReq& b) {
    a.Swap(&b);
  }
  inline void Swap(msgForeignTicketReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgForeignTicketReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgForeignTicketReq* New() const final {
    return CreateMaybeMessage<msgForeignTicketReq>(nullptr);
  }

  msgForeignTicketReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgForeignTicketReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgForeignTicketReq& from);
  void MergeFrom(const msgForeignTicketReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgForeignTicketReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgForeignTicketReq";
  }
  protected:
  explicit msgForeignTicketReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrNativeLTCACertFieldNumber = 7,
    kStrNativeTicketFieldNumber = 9,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 13,
    kUiServicesFieldNumber = 3,
    kUiPsnymCertNoRequestFieldNumber = 10,
    kIReqTypeFieldNumber = 1,
    kINativeLTCACertLengthFieldNumber = 6,
    kINativeTicketLengthFieldNumber = 8,
    kINonceFieldNumber = 11,
    kTTimeStampFieldNumber = 12,
  };
  // required string strNativeLTCACert = 7 [default = ""];
  bool has_strnativeltcacert() const;
  private:
  bool _internal_has_strnativeltcacert() const;
  public:
  void clear_strnativeltcacert();
  const std::string& strnativeltcacert() const;
  void set_strnativeltcacert(const std::string& value);
  void set_strnativeltcacert(std::string&& value);
  void set_strnativeltcacert(const char* value);
  void set_strnativeltcacert(const char* value, size_t size);
  std::string* mutable_strnativeltcacert();
  std::string* release_strnativeltcacert();
  void set_allocated_strnativeltcacert(std::string* strnativeltcacert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strnativeltcacert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strnativeltcacert(
      std::string* strnativeltcacert);
  private:
  const std::string& _internal_strnativeltcacert() const;
  void _internal_set_strnativeltcacert(const std::string& value);
  std::string* _internal_mutable_strnativeltcacert();
  public:

  // required string strNativeTicket = 9 [default = ""];
  bool has_strnativeticket() const;
  private:
  bool _internal_has_strnativeticket() const;
  public:
  void clear_strnativeticket();
  const std::string& strnativeticket() const;
  void set_strnativeticket(const std::string& value);
  void set_strnativeticket(std::string&& value);
  void set_strnativeticket(const char* value);
  void set_strnativeticket(const char* value, size_t size);
  std::string* mutable_strnativeticket();
  std::string* release_strnativeticket();
  void set_allocated_strnativeticket(std::string* strnativeticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strnativeticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strnativeticket(
      std::string* strnativeticket);
  private:
  const std::string& _internal_strnativeticket() const;
  void _internal_set_strnativeticket(const std::string& value);
  std::string* _internal_mutable_strnativeticket();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 13;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiServices = 3 [default = 0];
  bool has_uiservices() const;
  private:
  bool _internal_has_uiservices() const;
  public:
  void clear_uiservices();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices() const;
  void set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiservices() const;
  void _internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiPsnymCertNoRequest = 10 [default = 0];
  bool has_uipsnymcertnorequest() const;
  private:
  bool _internal_has_uipsnymcertnorequest() const;
  public:
  void clear_uipsnymcertnorequest();
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertnorequest() const;
  void set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uipsnymcertnorequest() const;
  void _internal_set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNativeLTCACertLength = 6 [default = -1];
  bool has_inativeltcacertlength() const;
  private:
  bool _internal_has_inativeltcacertlength() const;
  public:
  void clear_inativeltcacertlength();
  ::PROTOBUF_NAMESPACE_ID::int32 inativeltcacertlength() const;
  void set_inativeltcacertlength(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inativeltcacertlength() const;
  void _internal_set_inativeltcacertlength(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNativeTicketLength = 8 [default = -1];
  bool has_inativeticketlength() const;
  private:
  bool _internal_has_inativeticketlength() const;
  public:
  void clear_inativeticketlength();
  ::PROTOBUF_NAMESPACE_ID::int32 inativeticketlength() const;
  void set_inativeticketlength(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inativeticketlength() const;
  void _internal_set_inativeticketlength(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 11 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 12 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgForeignTicketReq)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strnativeltcacert_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strnativeticket_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertnorequest_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inativeltcacertlength_;
  ::PROTOBUF_NAMESPACE_ID::int32 inativeticketlength_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVehicleAttributes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVehicleAttributes) */ {
 public:
  inline msgVehicleAttributes() : msgVehicleAttributes(nullptr) {};
  virtual ~msgVehicleAttributes();

  msgVehicleAttributes(const msgVehicleAttributes& from);
  msgVehicleAttributes(msgVehicleAttributes&& from) noexcept
    : msgVehicleAttributes() {
    *this = ::std::move(from);
  }

  inline msgVehicleAttributes& operator=(const msgVehicleAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVehicleAttributes& operator=(msgVehicleAttributes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVehicleAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVehicleAttributes* internal_default_instance() {
    return reinterpret_cast<const msgVehicleAttributes*>(
               &_msgVehicleAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(msgVehicleAttributes& a, msgVehicleAttributes& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVehicleAttributes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVehicleAttributes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVehicleAttributes* New() const final {
    return CreateMaybeMessage<msgVehicleAttributes>(nullptr);
  }

  msgVehicleAttributes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVehicleAttributes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVehicleAttributes& from);
  void MergeFrom(const msgVehicleAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVehicleAttributes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVehicleAttributes";
  }
  protected:
  explicit msgVehicleAttributes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChRoleFieldNumber = 1,
    kUiServicesFieldNumber = 2,
    kChTypeOfVehicleFieldNumber = 3,
    kChPolicyIdFieldNumber = 4,
  };
  // required uint32 chRole = 1 [default = 0];
  bool has_chrole() const;
  private:
  bool _internal_has_chrole() const;
  public:
  void clear_chrole();
  ::PROTOBUF_NAMESPACE_ID::uint32 chrole() const;
  void set_chrole(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chrole() const;
  void _internal_set_chrole(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiServices = 2 [default = 0];
  bool has_uiservices() const;
  private:
  bool _internal_has_uiservices() const;
  public:
  void clear_uiservices();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices() const;
  void set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiservices() const;
  void _internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 chTypeOfVehicle = 3 [default = 0];
  bool has_chtypeofvehicle() const;
  private:
  bool _internal_has_chtypeofvehicle() const;
  public:
  void clear_chtypeofvehicle();
  ::PROTOBUF_NAMESPACE_ID::uint32 chtypeofvehicle() const;
  void set_chtypeofvehicle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chtypeofvehicle() const;
  void _internal_set_chtypeofvehicle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 chPolicyId = 4 [default = 0];
  bool has_chpolicyid() const;
  private:
  bool _internal_has_chpolicyid() const;
  public:
  void clear_chpolicyid();
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid() const;
  void set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chpolicyid() const;
  void _internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVehicleAttributes)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chrole_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiservices_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chtypeofvehicle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTicketFormat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTicketFormat) */ {
 public:
  inline msgTicketFormat() : msgTicketFormat(nullptr) {};
  virtual ~msgTicketFormat();

  msgTicketFormat(const msgTicketFormat& from);
  msgTicketFormat(msgTicketFormat&& from) noexcept
    : msgTicketFormat() {
    *this = ::std::move(from);
  }

  inline msgTicketFormat& operator=(const msgTicketFormat& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTicketFormat& operator=(msgTicketFormat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTicketFormat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTicketFormat* internal_default_instance() {
    return reinterpret_cast<const msgTicketFormat*>(
               &_msgTicketFormat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(msgTicketFormat& a, msgTicketFormat& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTicketFormat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTicketFormat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTicketFormat* New() const final {
    return CreateMaybeMessage<msgTicketFormat>(nullptr);
  }

  msgTicketFormat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTicketFormat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTicketFormat& from);
  void MergeFrom(const msgTicketFormat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTicketFormat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTicketFormat";
  }
  protected:
  explicit msgTicketFormat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 3,
    kStrTicketIdentifiableKeyFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStVehicleRoleFieldNumber = 8,
    kStSignFieldNumber = 14,
    kUiMaxNoPsnymCertFieldNumber = 7,
    kBIsForeignTicketFieldNumber = 9,
    kIPCAIdRangeFieldNumber = 6,
    kITicketTypeFieldNumber = 1,
    kILTCAIdRangeFieldNumber = 5,
    kTTicketStartTimeFieldNumber = 10,
    kTTicketLifeTimeFieldNumber = 11,
    kTPsnymStartTimeFieldNumber = 12,
    kTPsnymExpiryTimeFieldNumber = 13,
  };
  // required string strTicketSerialNo = 3 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicketIdentifiableKey = 4 [default = ""];
  bool has_strticketidentifiablekey() const;
  private:
  bool _internal_has_strticketidentifiablekey() const;
  public:
  void clear_strticketidentifiablekey();
  const std::string& strticketidentifiablekey() const;
  void set_strticketidentifiablekey(const std::string& value);
  void set_strticketidentifiablekey(std::string&& value);
  void set_strticketidentifiablekey(const char* value);
  void set_strticketidentifiablekey(const char* value, size_t size);
  std::string* mutable_strticketidentifiablekey();
  std::string* release_strticketidentifiablekey();
  void set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketidentifiablekey(
      std::string* strticketidentifiablekey);
  private:
  const std::string& _internal_strticketidentifiablekey() const;
  void _internal_set_strticketidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strticketidentifiablekey();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgVehicleAttributes stVehicleRole = 8;
  bool has_stvehiclerole() const;
  private:
  bool _internal_has_stvehiclerole() const;
  public:
  void clear_stvehiclerole();
  const ::interfaces::msgVehicleAttributes& stvehiclerole() const;
  ::interfaces::msgVehicleAttributes* release_stvehiclerole();
  ::interfaces::msgVehicleAttributes* mutable_stvehiclerole();
  void set_allocated_stvehiclerole(::interfaces::msgVehicleAttributes* stvehiclerole);
  private:
  const ::interfaces::msgVehicleAttributes& _internal_stvehiclerole() const;
  ::interfaces::msgVehicleAttributes* _internal_mutable_stvehiclerole();
  public:
  void unsafe_arena_set_allocated_stvehiclerole(
      ::interfaces::msgVehicleAttributes* stvehiclerole);
  ::interfaces::msgVehicleAttributes* unsafe_arena_release_stvehiclerole();

  // optional .interfaces.msgSignature stSign = 14;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiMaxNoPsnymCert = 7 [default = 0];
  bool has_uimaxnopsnymcert() const;
  private:
  bool _internal_has_uimaxnopsnymcert() const;
  public:
  void clear_uimaxnopsnymcert();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnopsnymcert() const;
  void set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnopsnymcert() const;
  void _internal_set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required bool bIsForeignTicket = 9 [default = false];
  bool has_bisforeignticket() const;
  private:
  bool _internal_has_bisforeignticket() const;
  public:
  void clear_bisforeignticket();
  bool bisforeignticket() const;
  void set_bisforeignticket(bool value);
  private:
  bool _internal_bisforeignticket() const;
  void _internal_set_bisforeignticket(bool value);
  public:

  // required int32 iPCAIdRange = 6 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTicketType = 1 [default = -1];
  bool has_itickettype() const;
  private:
  bool _internal_has_itickettype() const;
  public:
  void clear_itickettype();
  ::PROTOBUF_NAMESPACE_ID::int32 itickettype() const;
  void set_itickettype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_itickettype() const;
  void _internal_set_itickettype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 5 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTicketStartTime = 10 [default = -1];
  bool has_tticketstarttime() const;
  private:
  bool _internal_has_tticketstarttime() const;
  public:
  void clear_tticketstarttime();
  ::PROTOBUF_NAMESPACE_ID::int64 tticketstarttime() const;
  void set_tticketstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tticketstarttime() const;
  void _internal_set_tticketstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tTicketLifeTime = 11 [default = -1];
  bool has_tticketlifetime() const;
  private:
  bool _internal_has_tticketlifetime() const;
  public:
  void clear_tticketlifetime();
  ::PROTOBUF_NAMESPACE_ID::int64 tticketlifetime() const;
  void set_tticketlifetime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tticketlifetime() const;
  void _internal_set_tticketlifetime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tPsnymStartTime = 12 [default = -1];
  bool has_tpsnymstarttime() const;
  private:
  bool _internal_has_tpsnymstarttime() const;
  public:
  void clear_tpsnymstarttime();
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymstarttime() const;
  void set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tpsnymstarttime() const;
  void _internal_set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tPsnymExpiryTime = 13 [default = -1];
  bool has_tpsnymexpirytime() const;
  private:
  bool _internal_has_tpsnymexpirytime() const;
  public:
  void clear_tpsnymexpirytime();
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymexpirytime() const;
  void set_tpsnymexpirytime(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tpsnymexpirytime() const;
  void _internal_set_tpsnymexpirytime(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTicketFormat)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketidentifiablekey_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgVehicleAttributes* stvehiclerole_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnopsnymcert_;
  bool bisforeignticket_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 itickettype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 tticketstarttime_;
  ::PROTOBUF_NAMESPACE_ID::int64 tticketlifetime_;
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymstarttime_;
  ::PROTOBUF_NAMESPACE_ID::int64 tpsnymexpirytime_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTicketRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTicketRes) */ {
 public:
  inline msgTicketRes() : msgTicketRes(nullptr) {};
  virtual ~msgTicketRes();

  msgTicketRes(const msgTicketRes& from);
  msgTicketRes(msgTicketRes&& from) noexcept
    : msgTicketRes() {
    *this = ::std::move(from);
  }

  inline msgTicketRes& operator=(const msgTicketRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTicketRes& operator=(msgTicketRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTicketRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTicketRes* internal_default_instance() {
    return reinterpret_cast<const msgTicketRes*>(
               &_msgTicketRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(msgTicketRes& a, msgTicketRes& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTicketRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTicketRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTicketRes* New() const final {
    return CreateMaybeMessage<msgTicketRes>(nullptr);
  }

  msgTicketRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTicketRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTicketRes& from);
  void MergeFrom(const msgTicketRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTicketRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTicketRes";
  }
  protected:
  explicit msgTicketRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 10,
    kStSignFieldNumber = 11,
    kUiMaxNoPsnymCertFieldNumber = 5,
    kINonceFieldNumber = 8,
    kIReqTypeFieldNumber = 1,
    kITicketSizeFieldNumber = 3,
    kILTCAIdRangeFieldNumber = 6,
    kIPCAIdRangeFieldNumber = 7,
    kTTimeStampFieldNumber = 9,
  };
  // required string strTicket = 4 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 10;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 11;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiMaxNoPsnymCert = 5 [default = 0];
  bool has_uimaxnopsnymcert() const;
  private:
  bool _internal_has_uimaxnopsnymcert() const;
  public:
  void clear_uimaxnopsnymcert();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnopsnymcert() const;
  void set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnopsnymcert() const;
  void _internal_set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTicketSize = 3 [default = -1];
  bool has_iticketsize() const;
  private:
  bool _internal_has_iticketsize() const;
  public:
  void clear_iticketsize();
  ::PROTOBUF_NAMESPACE_ID::int32 iticketsize() const;
  void set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iticketsize() const;
  void _internal_set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 6 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 7 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTicketRes)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnopsnymcert_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iticketsize_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgToBeSignedCSR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgToBeSignedCSR) */ {
 public:
  inline msgToBeSignedCSR() : msgToBeSignedCSR(nullptr) {};
  virtual ~msgToBeSignedCSR();

  msgToBeSignedCSR(const msgToBeSignedCSR& from);
  msgToBeSignedCSR(msgToBeSignedCSR&& from) noexcept
    : msgToBeSignedCSR() {
    *this = ::std::move(from);
  }

  inline msgToBeSignedCSR& operator=(const msgToBeSignedCSR& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgToBeSignedCSR& operator=(msgToBeSignedCSR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgToBeSignedCSR& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgToBeSignedCSR* internal_default_instance() {
    return reinterpret_cast<const msgToBeSignedCSR*>(
               &_msgToBeSignedCSR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(msgToBeSignedCSR& a, msgToBeSignedCSR& b) {
    a.Swap(&b);
  }
  inline void Swap(msgToBeSignedCSR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgToBeSignedCSR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgToBeSignedCSR* New() const final {
    return CreateMaybeMessage<msgToBeSignedCSR>(nullptr);
  }

  msgToBeSignedCSR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgToBeSignedCSR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgToBeSignedCSR& from);
  void MergeFrom(const msgToBeSignedCSR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgToBeSignedCSR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgToBeSignedCSR";
  }
  protected:
  explicit msgToBeSignedCSR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeSpecificDataFieldNumber = 4,
    kStECPsnymPublicKeyFieldNumber = 5,
    kCsrVersionFieldNumber = 1,
    kSubjectTypeFieldNumber = 2,
    kRequestTypeFieldNumber = 3,
  };
  // optional .interfaces.msgCertSpecificData typeSpecificData = 4;
  bool has_typespecificdata() const;
  private:
  bool _internal_has_typespecificdata() const;
  public:
  void clear_typespecificdata();
  const ::interfaces::msgCertSpecificData& typespecificdata() const;
  ::interfaces::msgCertSpecificData* release_typespecificdata();
  ::interfaces::msgCertSpecificData* mutable_typespecificdata();
  void set_allocated_typespecificdata(::interfaces::msgCertSpecificData* typespecificdata);
  private:
  const ::interfaces::msgCertSpecificData& _internal_typespecificdata() const;
  ::interfaces::msgCertSpecificData* _internal_mutable_typespecificdata();
  public:
  void unsafe_arena_set_allocated_typespecificdata(
      ::interfaces::msgCertSpecificData* typespecificdata);
  ::interfaces::msgCertSpecificData* unsafe_arena_release_typespecificdata();

  // required .interfaces.msgECPublicKey stECPsnymPublicKey = 5;
  bool has_stecpsnympublickey() const;
  private:
  bool _internal_has_stecpsnympublickey() const;
  public:
  void clear_stecpsnympublickey();
  const ::interfaces::msgECPublicKey& stecpsnympublickey() const;
  ::interfaces::msgECPublicKey* release_stecpsnympublickey();
  ::interfaces::msgECPublicKey* mutable_stecpsnympublickey();
  void set_allocated_stecpsnympublickey(::interfaces::msgECPublicKey* stecpsnympublickey);
  private:
  const ::interfaces::msgECPublicKey& _internal_stecpsnympublickey() const;
  ::interfaces::msgECPublicKey* _internal_mutable_stecpsnympublickey();
  public:
  void unsafe_arena_set_allocated_stecpsnympublickey(
      ::interfaces::msgECPublicKey* stecpsnympublickey);
  ::interfaces::msgECPublicKey* unsafe_arena_release_stecpsnympublickey();

  // required uint32 csrVersion = 1 [default = 0];
  bool has_csrversion() const;
  private:
  bool _internal_has_csrversion() const;
  public:
  void clear_csrversion();
  ::PROTOBUF_NAMESPACE_ID::uint32 csrversion() const;
  void set_csrversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_csrversion() const;
  void _internal_set_csrversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .interfaces.msgSubType.SubjectType subjectType = 2 [default = wsa_ca1];
  bool has_subjecttype() const;
  private:
  bool _internal_has_subjecttype() const;
  public:
  void clear_subjecttype();
  ::interfaces::msgSubType_SubjectType subjecttype() const;
  void set_subjecttype(::interfaces::msgSubType_SubjectType value);
  private:
  ::interfaces::msgSubType_SubjectType _internal_subjecttype() const;
  void _internal_set_subjecttype(::interfaces::msgSubType_SubjectType value);
  public:

  // required .interfaces.msgRequestScopeType.RequestScopeType requestType = 3 [default = specifiedInRequest];
  bool has_requesttype() const;
  private:
  bool _internal_has_requesttype() const;
  public:
  void clear_requesttype();
  ::interfaces::msgRequestScopeType_RequestScopeType requesttype() const;
  void set_requesttype(::interfaces::msgRequestScopeType_RequestScopeType value);
  private:
  ::interfaces::msgRequestScopeType_RequestScopeType _internal_requesttype() const;
  void _internal_set_requesttype(::interfaces::msgRequestScopeType_RequestScopeType value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgToBeSignedCSR)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgCertSpecificData* typespecificdata_;
  ::interfaces::msgECPublicKey* stecpsnympublickey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 csrversion_;
  int subjecttype_;
  int requesttype_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgWAVECertificateRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgWAVECertificateRequest) */ {
 public:
  inline msgWAVECertificateRequest() : msgWAVECertificateRequest(nullptr) {};
  virtual ~msgWAVECertificateRequest();

  msgWAVECertificateRequest(const msgWAVECertificateRequest& from);
  msgWAVECertificateRequest(msgWAVECertificateRequest&& from) noexcept
    : msgWAVECertificateRequest() {
    *this = ::std::move(from);
  }

  inline msgWAVECertificateRequest& operator=(const msgWAVECertificateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgWAVECertificateRequest& operator=(msgWAVECertificateRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgWAVECertificateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgWAVECertificateRequest* internal_default_instance() {
    return reinterpret_cast<const msgWAVECertificateRequest*>(
               &_msgWAVECertificateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(msgWAVECertificateRequest& a, msgWAVECertificateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(msgWAVECertificateRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgWAVECertificateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgWAVECertificateRequest* New() const final {
    return CreateMaybeMessage<msgWAVECertificateRequest>(nullptr);
  }

  msgWAVECertificateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgWAVECertificateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgWAVECertificateRequest& from);
  void MergeFrom(const msgWAVECertificateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgWAVECertificateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgWAVECertificateRequest";
  }
  protected:
  explicit msgWAVECertificateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 1,
    kUnsignedCsrFieldNumber = 2,
    kStSignFieldNumber = 3,
  };
  // optional .interfaces.msgSignerInfo stSigner = 1;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgToBeSignedCSR unsignedCsr = 2;
  bool has_unsignedcsr() const;
  private:
  bool _internal_has_unsignedcsr() const;
  public:
  void clear_unsignedcsr();
  const ::interfaces::msgToBeSignedCSR& unsignedcsr() const;
  ::interfaces::msgToBeSignedCSR* release_unsignedcsr();
  ::interfaces::msgToBeSignedCSR* mutable_unsignedcsr();
  void set_allocated_unsignedcsr(::interfaces::msgToBeSignedCSR* unsignedcsr);
  private:
  const ::interfaces::msgToBeSignedCSR& _internal_unsignedcsr() const;
  ::interfaces::msgToBeSignedCSR* _internal_mutable_unsignedcsr();
  public:
  void unsafe_arena_set_allocated_unsignedcsr(
      ::interfaces::msgToBeSignedCSR* unsignedcsr);
  ::interfaces::msgToBeSignedCSR* unsafe_arena_release_unsignedcsr();

  // optional .interfaces.msgSignature stSign = 3;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // @@protoc_insertion_point(class_scope:interfaces.msgWAVECertificateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgToBeSignedCSR* unsignedcsr_;
  ::interfaces::msgSignature* stsign_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCertReq_V2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCertReq_V2PCA) */ {
 public:
  inline msgPsnymCertReq_V2PCA() : msgPsnymCertReq_V2PCA(nullptr) {};
  virtual ~msgPsnymCertReq_V2PCA();

  msgPsnymCertReq_V2PCA(const msgPsnymCertReq_V2PCA& from);
  msgPsnymCertReq_V2PCA(msgPsnymCertReq_V2PCA&& from) noexcept
    : msgPsnymCertReq_V2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymCertReq_V2PCA& operator=(const msgPsnymCertReq_V2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCertReq_V2PCA& operator=(msgPsnymCertReq_V2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCertReq_V2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCertReq_V2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCertReq_V2PCA*>(
               &_msgPsnymCertReq_V2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(msgPsnymCertReq_V2PCA& a, msgPsnymCertReq_V2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCertReq_V2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCertReq_V2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCertReq_V2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymCertReq_V2PCA>(nullptr);
  }

  msgPsnymCertReq_V2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCertReq_V2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCertReq_V2PCA& from);
  void MergeFrom(const msgPsnymCertReq_V2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCertReq_V2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCertReq_V2PCA";
  }
  protected:
  explicit msgPsnymCertReq_V2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymCertReqFieldNumber = 8,
    kStrTicketFieldNumber = 3,
    kUiPsnymCertNoFieldNumber = 7,
    kIReqTypeFieldNumber = 1,
    kITicketSizeFieldNumber = 2,
    kILTCAIdRangeFieldNumber = 4,
    kIPCAIdRangeFieldNumber = 5,
    kILocationFieldNumber = 6,
    kINonceFieldNumber = 9,
    kTTimeStampFieldNumber = 10,
  };
  // repeated .interfaces.msgWAVECertificateRequest pstPsnymCertReq = 8;
  int pstpsnymcertreq_size() const;
  private:
  int _internal_pstpsnymcertreq_size() const;
  public:
  void clear_pstpsnymcertreq();
  ::interfaces::msgWAVECertificateRequest* mutable_pstpsnymcertreq(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgWAVECertificateRequest >*
      mutable_pstpsnymcertreq();
  private:
  const ::interfaces::msgWAVECertificateRequest& _internal_pstpsnymcertreq(int index) const;
  ::interfaces::msgWAVECertificateRequest* _internal_add_pstpsnymcertreq();
  public:
  const ::interfaces::msgWAVECertificateRequest& pstpsnymcertreq(int index) const;
  ::interfaces::msgWAVECertificateRequest* add_pstpsnymcertreq();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgWAVECertificateRequest >&
      pstpsnymcertreq() const;

  // required string strTicket = 3 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // required uint32 uiPsnymCertNo = 7 [default = 0];
  bool has_uipsnymcertno() const;
  private:
  bool _internal_has_uipsnymcertno() const;
  public:
  void clear_uipsnymcertno();
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertno() const;
  void set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uipsnymcertno() const;
  void _internal_set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTicketSize = 2 [default = -1];
  bool has_iticketsize() const;
  private:
  bool _internal_has_iticketsize() const;
  public:
  void clear_iticketsize();
  ::PROTOBUF_NAMESPACE_ID::int32 iticketsize() const;
  void set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iticketsize() const;
  void _internal_set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 4 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 5 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLocation = 6 [default = -1];
  bool has_ilocation() const;
  private:
  bool _internal_has_ilocation() const;
  public:
  void clear_ilocation();
  ::PROTOBUF_NAMESPACE_ID::int32 ilocation() const;
  void set_ilocation(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ilocation() const;
  void _internal_set_ilocation(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 9 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 10 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCertReq_V2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgWAVECertificateRequest > pstpsnymcertreq_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertno_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iticketsize_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ilocation_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCertRes_PCA2V PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCertRes_PCA2V) */ {
 public:
  inline msgPsnymCertRes_PCA2V() : msgPsnymCertRes_PCA2V(nullptr) {};
  virtual ~msgPsnymCertRes_PCA2V();

  msgPsnymCertRes_PCA2V(const msgPsnymCertRes_PCA2V& from);
  msgPsnymCertRes_PCA2V(msgPsnymCertRes_PCA2V&& from) noexcept
    : msgPsnymCertRes_PCA2V() {
    *this = ::std::move(from);
  }

  inline msgPsnymCertRes_PCA2V& operator=(const msgPsnymCertRes_PCA2V& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCertRes_PCA2V& operator=(msgPsnymCertRes_PCA2V&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCertRes_PCA2V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCertRes_PCA2V* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCertRes_PCA2V*>(
               &_msgPsnymCertRes_PCA2V_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(msgPsnymCertRes_PCA2V& a, msgPsnymCertRes_PCA2V& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCertRes_PCA2V* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCertRes_PCA2V* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCertRes_PCA2V* New() const final {
    return CreateMaybeMessage<msgPsnymCertRes_PCA2V>(nullptr);
  }

  msgPsnymCertRes_PCA2V* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCertRes_PCA2V>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCertRes_PCA2V& from);
  void MergeFrom(const msgPsnymCertRes_PCA2V& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCertRes_PCA2V* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCertRes_PCA2V";
  }
  protected:
  explicit msgPsnymCertRes_PCA2V(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStPsnymCertFieldNumber = 7,
    kStrReqIdentificationFieldNumber = 3,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 10,
    kStSignFieldNumber = 11,
    kUiPsnymCertNoFieldNumber = 6,
    kIReqTypeFieldNumber = 1,
    kILTCAIdRangeFieldNumber = 4,
    kIPCAIdRangeFieldNumber = 5,
    kINonceFieldNumber = 8,
    kTTimeStampFieldNumber = 9,
  };
  // repeated .interfaces.msgPsnymCertFormat stPsnymCert = 7;
  int stpsnymcert_size() const;
  private:
  int _internal_stpsnymcert_size() const;
  public:
  void clear_stpsnymcert();
  ::interfaces::msgPsnymCertFormat* mutable_stpsnymcert(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymCertFormat >*
      mutable_stpsnymcert();
  private:
  const ::interfaces::msgPsnymCertFormat& _internal_stpsnymcert(int index) const;
  ::interfaces::msgPsnymCertFormat* _internal_add_stpsnymcert();
  public:
  const ::interfaces::msgPsnymCertFormat& stpsnymcert(int index) const;
  ::interfaces::msgPsnymCertFormat* add_stpsnymcert();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymCertFormat >&
      stpsnymcert() const;

  // required string strReqIdentification = 3 [default = ""];
  bool has_strreqidentification() const;
  private:
  bool _internal_has_strreqidentification() const;
  public:
  void clear_strreqidentification();
  const std::string& strreqidentification() const;
  void set_strreqidentification(const std::string& value);
  void set_strreqidentification(std::string&& value);
  void set_strreqidentification(const char* value);
  void set_strreqidentification(const char* value, size_t size);
  std::string* mutable_strreqidentification();
  std::string* release_strreqidentification();
  void set_allocated_strreqidentification(std::string* strreqidentification);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strreqidentification();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strreqidentification(
      std::string* strreqidentification);
  private:
  const std::string& _internal_strreqidentification() const;
  void _internal_set_strreqidentification(const std::string& value);
  std::string* _internal_mutable_strreqidentification();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 10;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 11;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiPsnymCertNo = 6 [default = 0];
  bool has_uipsnymcertno() const;
  private:
  bool _internal_has_uipsnymcertno() const;
  public:
  void clear_uipsnymcertno();
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertno() const;
  void set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uipsnymcertno() const;
  void _internal_set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 4 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 5 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCertRes_PCA2V)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymCertFormat > stpsnymcert_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strreqidentification_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uipsnymcertno_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCertAck_V2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCertAck_V2PCA) */ {
 public:
  inline msgPsnymCertAck_V2PCA() : msgPsnymCertAck_V2PCA(nullptr) {};
  virtual ~msgPsnymCertAck_V2PCA();

  msgPsnymCertAck_V2PCA(const msgPsnymCertAck_V2PCA& from);
  msgPsnymCertAck_V2PCA(msgPsnymCertAck_V2PCA&& from) noexcept
    : msgPsnymCertAck_V2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymCertAck_V2PCA& operator=(const msgPsnymCertAck_V2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCertAck_V2PCA& operator=(msgPsnymCertAck_V2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCertAck_V2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCertAck_V2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCertAck_V2PCA*>(
               &_msgPsnymCertAck_V2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(msgPsnymCertAck_V2PCA& a, msgPsnymCertAck_V2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCertAck_V2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCertAck_V2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCertAck_V2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymCertAck_V2PCA>(nullptr);
  }

  msgPsnymCertAck_V2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCertAck_V2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCertAck_V2PCA& from);
  void MergeFrom(const msgPsnymCertAck_V2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCertAck_V2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCertAck_V2PCA";
  }
  protected:
  explicit msgPsnymCertAck_V2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStErrInfoFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 2,
    kTTimeStampFieldNumber = 3,
  };
  // required .interfaces.msgError stErrInfo = 4;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 2 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 3 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCertAck_V2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgError* sterrinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCRLFormat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCRLFormat) */ {
 public:
  inline msgPsnymCRLFormat() : msgPsnymCRLFormat(nullptr) {};
  virtual ~msgPsnymCRLFormat();

  msgPsnymCRLFormat(const msgPsnymCRLFormat& from);
  msgPsnymCRLFormat(msgPsnymCRLFormat&& from) noexcept
    : msgPsnymCRLFormat() {
    *this = ::std::move(from);
  }

  inline msgPsnymCRLFormat& operator=(const msgPsnymCRLFormat& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCRLFormat& operator=(msgPsnymCRLFormat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCRLFormat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCRLFormat* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCRLFormat*>(
               &_msgPsnymCRLFormat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(msgPsnymCRLFormat& a, msgPsnymCRLFormat& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCRLFormat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCRLFormat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCRLFormat* New() const final {
    return CreateMaybeMessage<msgPsnymCRLFormat>(nullptr);
  }

  msgPsnymCRLFormat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCRLFormat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCRLFormat& from);
  void MergeFrom(const msgPsnymCRLFormat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCRLFormat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCRLFormat";
  }
  protected:
  explicit msgPsnymCRLFormat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrRevokedPsnymCertSerialNoFieldNumber = 3,
    kStrPsnymCRLSerialNoFieldNumber = 1,
    kUiRevokedPsnymCertNoFieldNumber = 2,
    kTTimeStampFieldNumber = 4,
  };
  // repeated string strRevokedPsnymCertSerialNo = 3;
  int strrevokedpsnymcertserialno_size() const;
  private:
  int _internal_strrevokedpsnymcertserialno_size() const;
  public:
  void clear_strrevokedpsnymcertserialno();
  const std::string& strrevokedpsnymcertserialno(int index) const;
  std::string* mutable_strrevokedpsnymcertserialno(int index);
  void set_strrevokedpsnymcertserialno(int index, const std::string& value);
  void set_strrevokedpsnymcertserialno(int index, std::string&& value);
  void set_strrevokedpsnymcertserialno(int index, const char* value);
  void set_strrevokedpsnymcertserialno(int index, const char* value, size_t size);
  std::string* add_strrevokedpsnymcertserialno();
  void add_strrevokedpsnymcertserialno(const std::string& value);
  void add_strrevokedpsnymcertserialno(std::string&& value);
  void add_strrevokedpsnymcertserialno(const char* value);
  void add_strrevokedpsnymcertserialno(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strrevokedpsnymcertserialno() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strrevokedpsnymcertserialno();
  private:
  const std::string& _internal_strrevokedpsnymcertserialno(int index) const;
  std::string* _internal_add_strrevokedpsnymcertserialno();
  public:

  // required string strPsnymCRLSerialNo = 1 [default = ""];
  bool has_strpsnymcrlserialno() const;
  private:
  bool _internal_has_strpsnymcrlserialno() const;
  public:
  void clear_strpsnymcrlserialno();
  const std::string& strpsnymcrlserialno() const;
  void set_strpsnymcrlserialno(const std::string& value);
  void set_strpsnymcrlserialno(std::string&& value);
  void set_strpsnymcrlserialno(const char* value);
  void set_strpsnymcrlserialno(const char* value, size_t size);
  std::string* mutable_strpsnymcrlserialno();
  std::string* release_strpsnymcrlserialno();
  void set_allocated_strpsnymcrlserialno(std::string* strpsnymcrlserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcrlserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcrlserialno(
      std::string* strpsnymcrlserialno);
  private:
  const std::string& _internal_strpsnymcrlserialno() const;
  void _internal_set_strpsnymcrlserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymcrlserialno();
  public:

  // required uint32 uiRevokedPsnymCertNo = 2 [default = 0];
  bool has_uirevokedpsnymcertno() const;
  private:
  bool _internal_has_uirevokedpsnymcertno() const;
  public:
  void clear_uirevokedpsnymcertno();
  ::PROTOBUF_NAMESPACE_ID::uint32 uirevokedpsnymcertno() const;
  void set_uirevokedpsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uirevokedpsnymcertno() const;
  void _internal_set_uirevokedpsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int64 tTimeStamp = 4 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCRLFormat)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strrevokedpsnymcertserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcrlserialno_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uirevokedpsnymcertno_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgIDAndDate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgIDAndDate) */ {
 public:
  inline msgIDAndDate() : msgIDAndDate(nullptr) {};
  virtual ~msgIDAndDate();

  msgIDAndDate(const msgIDAndDate& from);
  msgIDAndDate(msgIDAndDate&& from) noexcept
    : msgIDAndDate() {
    *this = ::std::move(from);
  }

  inline msgIDAndDate& operator=(const msgIDAndDate& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgIDAndDate& operator=(msgIDAndDate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgIDAndDate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgIDAndDate* internal_default_instance() {
    return reinterpret_cast<const msgIDAndDate*>(
               &_msgIDAndDate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(msgIDAndDate& a, msgIDAndDate& b) {
    a.Swap(&b);
  }
  inline void Swap(msgIDAndDate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgIDAndDate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgIDAndDate* New() const final {
    return CreateMaybeMessage<msgIDAndDate>(nullptr);
  }

  msgIDAndDate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgIDAndDate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgIDAndDate& from);
  void MergeFrom(const msgIDAndDate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgIDAndDate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgIDAndDate";
  }
  protected:
  explicit msgIDAndDate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrIDFieldNumber = 1,
    kExpiryFieldNumber = 2,
  };
  // required string strID = 1 [default = ""];
  bool has_strid() const;
  private:
  bool _internal_has_strid() const;
  public:
  void clear_strid();
  const std::string& strid() const;
  void set_strid(const std::string& value);
  void set_strid(std::string&& value);
  void set_strid(const char* value);
  void set_strid(const char* value, size_t size);
  std::string* mutable_strid();
  std::string* release_strid();
  void set_allocated_strid(std::string* strid);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strid();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strid(
      std::string* strid);
  private:
  const std::string& _internal_strid() const;
  void _internal_set_strid(const std::string& value);
  std::string* _internal_mutable_strid();
  public:

  // required int64 expiry = 2 [default = -1];
  bool has_expiry() const;
  private:
  bool _internal_has_expiry() const;
  public:
  void clear_expiry();
  ::PROTOBUF_NAMESPACE_ID::int64 expiry() const;
  void set_expiry(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_expiry() const;
  void _internal_set_expiry(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgIDAndDate)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strid_;
  ::PROTOBUF_NAMESPACE_ID::int64 expiry_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgToBeSignedCRL PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgToBeSignedCRL) */ {
 public:
  inline msgToBeSignedCRL() : msgToBeSignedCRL(nullptr) {};
  virtual ~msgToBeSignedCRL();

  msgToBeSignedCRL(const msgToBeSignedCRL& from);
  msgToBeSignedCRL(msgToBeSignedCRL&& from) noexcept
    : msgToBeSignedCRL() {
    *this = ::std::move(from);
  }

  inline msgToBeSignedCRL& operator=(const msgToBeSignedCRL& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgToBeSignedCRL& operator=(msgToBeSignedCRL&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgToBeSignedCRL& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgToBeSignedCRL* internal_default_instance() {
    return reinterpret_cast<const msgToBeSignedCRL*>(
               &_msgToBeSignedCRL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(msgToBeSignedCRL& a, msgToBeSignedCRL& b) {
    a.Swap(&b);
  }
  inline void Swap(msgToBeSignedCRL* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgToBeSignedCRL* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgToBeSignedCRL* New() const final {
    return CreateMaybeMessage<msgToBeSignedCRL>(nullptr);
  }

  msgToBeSignedCRL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgToBeSignedCRL>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgToBeSignedCRL& from);
  void MergeFrom(const msgToBeSignedCRL& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgToBeSignedCRL* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgToBeSignedCRL";
  }
  protected:
  explicit msgToBeSignedCRL(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrRevokedPsnymCertSerialNoFieldNumber = 9,
    kStEntriesIDAndDateFieldNumber = 10,
    kTypeFieldNumber = 1,
    kCrlSeriesFieldNumber = 2,
    kICAIDFieldNumber = 3,
    kCrlSerialFieldNumber = 4,
    kTStartPeriodFieldNumber = 5,
    kTIssueDateFieldNumber = 6,
    kTNextCRLFieldNumber = 7,
    kUiRevokedPsnymNoFieldNumber = 8,
  };
  // repeated string strRevokedPsnymCertSerialNo = 9;
  int strrevokedpsnymcertserialno_size() const;
  private:
  int _internal_strrevokedpsnymcertserialno_size() const;
  public:
  void clear_strrevokedpsnymcertserialno();
  const std::string& strrevokedpsnymcertserialno(int index) const;
  std::string* mutable_strrevokedpsnymcertserialno(int index);
  void set_strrevokedpsnymcertserialno(int index, const std::string& value);
  void set_strrevokedpsnymcertserialno(int index, std::string&& value);
  void set_strrevokedpsnymcertserialno(int index, const char* value);
  void set_strrevokedpsnymcertserialno(int index, const char* value, size_t size);
  std::string* add_strrevokedpsnymcertserialno();
  void add_strrevokedpsnymcertserialno(const std::string& value);
  void add_strrevokedpsnymcertserialno(std::string&& value);
  void add_strrevokedpsnymcertserialno(const char* value);
  void add_strrevokedpsnymcertserialno(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strrevokedpsnymcertserialno() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strrevokedpsnymcertserialno();
  private:
  const std::string& _internal_strrevokedpsnymcertserialno(int index) const;
  std::string* _internal_add_strrevokedpsnymcertserialno();
  public:

  // required .interfaces.msgIDAndDate stEntriesIDAndDate = 10;
  bool has_stentriesidanddate() const;
  private:
  bool _internal_has_stentriesidanddate() const;
  public:
  void clear_stentriesidanddate();
  const ::interfaces::msgIDAndDate& stentriesidanddate() const;
  ::interfaces::msgIDAndDate* release_stentriesidanddate();
  ::interfaces::msgIDAndDate* mutable_stentriesidanddate();
  void set_allocated_stentriesidanddate(::interfaces::msgIDAndDate* stentriesidanddate);
  private:
  const ::interfaces::msgIDAndDate& _internal_stentriesidanddate() const;
  ::interfaces::msgIDAndDate* _internal_mutable_stentriesidanddate();
  public:
  void unsafe_arena_set_allocated_stentriesidanddate(
      ::interfaces::msgIDAndDate* stentriesidanddate);
  ::interfaces::msgIDAndDate* unsafe_arena_release_stentriesidanddate();

  // required .interfaces.msgCRLType.CRLType type = 1 [default = idOnly];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::interfaces::msgCRLType_CRLType type() const;
  void set_type(::interfaces::msgCRLType_CRLType value);
  private:
  ::interfaces::msgCRLType_CRLType _internal_type() const;
  void _internal_set_type(::interfaces::msgCRLType_CRLType value);
  public:

  // required uint32 crlSeries = 2 [default = 0];
  bool has_crlseries() const;
  private:
  bool _internal_has_crlseries() const;
  public:
  void clear_crlseries();
  ::PROTOBUF_NAMESPACE_ID::uint32 crlseries() const;
  void set_crlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crlseries() const;
  void _internal_set_crlseries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 iCAID = 3 [default = 0];
  bool has_icaid() const;
  private:
  bool _internal_has_icaid() const;
  public:
  void clear_icaid();
  ::PROTOBUF_NAMESPACE_ID::uint32 icaid() const;
  void set_icaid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icaid() const;
  void _internal_set_icaid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 crlSerial = 4 [default = 0];
  bool has_crlserial() const;
  private:
  bool _internal_has_crlserial() const;
  public:
  void clear_crlserial();
  ::PROTOBUF_NAMESPACE_ID::uint32 crlserial() const;
  void set_crlserial(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crlserial() const;
  void _internal_set_crlserial(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint64 tStartPeriod = 5 [default = 0];
  bool has_tstartperiod() const;
  private:
  bool _internal_has_tstartperiod() const;
  public:
  void clear_tstartperiod();
  ::PROTOBUF_NAMESPACE_ID::uint64 tstartperiod() const;
  void set_tstartperiod(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tstartperiod() const;
  void _internal_set_tstartperiod(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 tIssueDate = 6 [default = 0];
  bool has_tissuedate() const;
  private:
  bool _internal_has_tissuedate() const;
  public:
  void clear_tissuedate();
  ::PROTOBUF_NAMESPACE_ID::uint64 tissuedate() const;
  void set_tissuedate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tissuedate() const;
  void _internal_set_tissuedate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 tNextCRL = 7 [default = 0];
  bool has_tnextcrl() const;
  private:
  bool _internal_has_tnextcrl() const;
  public:
  void clear_tnextcrl();
  ::PROTOBUF_NAMESPACE_ID::uint64 tnextcrl() const;
  void set_tnextcrl(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tnextcrl() const;
  void _internal_set_tnextcrl(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 uiRevokedPsnymNo = 8 [default = 0];
  bool has_uirevokedpsnymno() const;
  private:
  bool _internal_has_uirevokedpsnymno() const;
  public:
  void clear_uirevokedpsnymno();
  ::PROTOBUF_NAMESPACE_ID::uint64 uirevokedpsnymno() const;
  void set_uirevokedpsnymno(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uirevokedpsnymno() const;
  void _internal_set_uirevokedpsnymno(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgToBeSignedCRL)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strrevokedpsnymcertserialno_;
  ::interfaces::msgIDAndDate* stentriesidanddate_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crlseries_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icaid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crlserial_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tstartperiod_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tissuedate_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tnextcrl_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uirevokedpsnymno_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgWAVECRL PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgWAVECRL) */ {
 public:
  inline msgWAVECRL() : msgWAVECRL(nullptr) {};
  virtual ~msgWAVECRL();

  msgWAVECRL(const msgWAVECRL& from);
  msgWAVECRL(msgWAVECRL&& from) noexcept
    : msgWAVECRL() {
    *this = ::std::move(from);
  }

  inline msgWAVECRL& operator=(const msgWAVECRL& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgWAVECRL& operator=(msgWAVECRL&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgWAVECRL& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgWAVECRL* internal_default_instance() {
    return reinterpret_cast<const msgWAVECRL*>(
               &_msgWAVECRL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(msgWAVECRL& a, msgWAVECRL& b) {
    a.Swap(&b);
  }
  inline void Swap(msgWAVECRL* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgWAVECRL* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgWAVECRL* New() const final {
    return CreateMaybeMessage<msgWAVECRL>(nullptr);
  }

  msgWAVECRL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgWAVECRL>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgWAVECRL& from);
  void MergeFrom(const msgWAVECRL& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgWAVECRL* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgWAVECRL";
  }
  protected:
  explicit msgWAVECRL(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 2,
    kStToBeSignedCRLFieldNumber = 3,
    kStSignFieldNumber = 4,
    kUiWaveCRLVersionFieldNumber = 1,
  };
  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgToBeSignedCRL stToBeSignedCRL = 3;
  bool has_sttobesignedcrl() const;
  private:
  bool _internal_has_sttobesignedcrl() const;
  public:
  void clear_sttobesignedcrl();
  const ::interfaces::msgToBeSignedCRL& sttobesignedcrl() const;
  ::interfaces::msgToBeSignedCRL* release_sttobesignedcrl();
  ::interfaces::msgToBeSignedCRL* mutable_sttobesignedcrl();
  void set_allocated_sttobesignedcrl(::interfaces::msgToBeSignedCRL* sttobesignedcrl);
  private:
  const ::interfaces::msgToBeSignedCRL& _internal_sttobesignedcrl() const;
  ::interfaces::msgToBeSignedCRL* _internal_mutable_sttobesignedcrl();
  public:
  void unsafe_arena_set_allocated_sttobesignedcrl(
      ::interfaces::msgToBeSignedCRL* sttobesignedcrl);
  ::interfaces::msgToBeSignedCRL* unsafe_arena_release_sttobesignedcrl();

  // optional .interfaces.msgSignature stSign = 4;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiWaveCRLVersion = 1 [default = 0];
  bool has_uiwavecrlversion() const;
  private:
  bool _internal_has_uiwavecrlversion() const;
  public:
  void clear_uiwavecrlversion();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiwavecrlversion() const;
  void set_uiwavecrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiwavecrlversion() const;
  void _internal_set_uiwavecrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgWAVECRL)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgToBeSignedCRL* sttobesignedcrl_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiwavecrlversion_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgWAVECertificateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgWAVECertificateResponse) */ {
 public:
  inline msgWAVECertificateResponse() : msgWAVECertificateResponse(nullptr) {};
  virtual ~msgWAVECertificateResponse();

  msgWAVECertificateResponse(const msgWAVECertificateResponse& from);
  msgWAVECertificateResponse(msgWAVECertificateResponse&& from) noexcept
    : msgWAVECertificateResponse() {
    *this = ::std::move(from);
  }

  inline msgWAVECertificateResponse& operator=(const msgWAVECertificateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgWAVECertificateResponse& operator=(msgWAVECertificateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgWAVECertificateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgWAVECertificateResponse* internal_default_instance() {
    return reinterpret_cast<const msgWAVECertificateResponse*>(
               &_msgWAVECertificateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(msgWAVECertificateResponse& a, msgWAVECertificateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(msgWAVECertificateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgWAVECertificateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgWAVECertificateResponse* New() const final {
    return CreateMaybeMessage<msgWAVECertificateResponse>(nullptr);
  }

  msgWAVECertificateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgWAVECertificateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgWAVECertificateResponse& from);
  void MergeFrom(const msgWAVECertificateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgWAVECertificateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgWAVECertificateResponse";
  }
  protected:
  explicit msgWAVECertificateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStCRLPathFieldNumber = 1,
  };
  // required .interfaces.msgWAVECRL stCRLPath = 1;
  bool has_stcrlpath() const;
  private:
  bool _internal_has_stcrlpath() const;
  public:
  void clear_stcrlpath();
  const ::interfaces::msgWAVECRL& stcrlpath() const;
  ::interfaces::msgWAVECRL* release_stcrlpath();
  ::interfaces::msgWAVECRL* mutable_stcrlpath();
  void set_allocated_stcrlpath(::interfaces::msgWAVECRL* stcrlpath);
  private:
  const ::interfaces::msgWAVECRL& _internal_stcrlpath() const;
  ::interfaces::msgWAVECRL* _internal_mutable_stcrlpath();
  public:
  void unsafe_arena_set_allocated_stcrlpath(
      ::interfaces::msgWAVECRL* stcrlpath);
  ::interfaces::msgWAVECRL* unsafe_arena_release_stcrlpath();

  // @@protoc_insertion_point(class_scope:interfaces.msgWAVECertificateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgWAVECRL* stcrlpath_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCRLReq_V2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCRLReq_V2PCA) */ {
 public:
  inline msgPsnymCRLReq_V2PCA() : msgPsnymCRLReq_V2PCA(nullptr) {};
  virtual ~msgPsnymCRLReq_V2PCA();

  msgPsnymCRLReq_V2PCA(const msgPsnymCRLReq_V2PCA& from);
  msgPsnymCRLReq_V2PCA(msgPsnymCRLReq_V2PCA&& from) noexcept
    : msgPsnymCRLReq_V2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymCRLReq_V2PCA& operator=(const msgPsnymCRLReq_V2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCRLReq_V2PCA& operator=(msgPsnymCRLReq_V2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCRLReq_V2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCRLReq_V2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCRLReq_V2PCA*>(
               &_msgPsnymCRLReq_V2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(msgPsnymCRLReq_V2PCA& a, msgPsnymCRLReq_V2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCRLReq_V2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCRLReq_V2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCRLReq_V2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymCRLReq_V2PCA>(nullptr);
  }

  msgPsnymCRLReq_V2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCRLReq_V2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCRLReq_V2PCA& from);
  void MergeFrom(const msgPsnymCRLReq_V2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCRLReq_V2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCRLReq_V2PCA";
  }
  protected:
  explicit msgPsnymCRLReq_V2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertFieldNumber = 7,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 10,
    kUiCurrentCRLVersionFieldNumber = 3,
    kINonceFieldNumber = 8,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 4,
    kIRegionIdFieldNumber = 5,
    kIPsnymCertLenFieldNumber = 6,
    kTTimeStampFieldNumber = 9,
  };
  // required string strPsnymCert = 7 [default = ""];
  bool has_strpsnymcert() const;
  private:
  bool _internal_has_strpsnymcert() const;
  public:
  void clear_strpsnymcert();
  const std::string& strpsnymcert() const;
  void set_strpsnymcert(const std::string& value);
  void set_strpsnymcert(std::string&& value);
  void set_strpsnymcert(const char* value);
  void set_strpsnymcert(const char* value, size_t size);
  std::string* mutable_strpsnymcert();
  std::string* release_strpsnymcert();
  void set_allocated_strpsnymcert(std::string* strpsnymcert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcert(
      std::string* strpsnymcert);
  private:
  const std::string& _internal_strpsnymcert() const;
  void _internal_set_strpsnymcert(const std::string& value);
  std::string* _internal_mutable_strpsnymcert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiCurrentCRLVersion = 3 [default = 0];
  bool has_uicurrentcrlversion() const;
  private:
  bool _internal_has_uicurrentcrlversion() const;
  public:
  void clear_uicurrentcrlversion();
  ::PROTOBUF_NAMESPACE_ID::uint32 uicurrentcrlversion() const;
  void set_uicurrentcrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uicurrentcrlversion() const;
  void _internal_set_uicurrentcrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 4 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRegionId = 5 [default = -1];
  bool has_iregionid() const;
  private:
  bool _internal_has_iregionid() const;
  public:
  void clear_iregionid();
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid() const;
  void set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iregionid() const;
  void _internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPsnymCertLen = 6 [default = -1];
  bool has_ipsnymcertlen() const;
  private:
  bool _internal_has_ipsnymcertlen() const;
  public:
  void clear_ipsnymcertlen();
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen() const;
  void set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipsnymcertlen() const;
  void _internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCRLReq_V2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uicurrentcrlversion_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymCRLRes_PCA2V PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymCRLRes_PCA2V) */ {
 public:
  inline msgPsnymCRLRes_PCA2V() : msgPsnymCRLRes_PCA2V(nullptr) {};
  virtual ~msgPsnymCRLRes_PCA2V();

  msgPsnymCRLRes_PCA2V(const msgPsnymCRLRes_PCA2V& from);
  msgPsnymCRLRes_PCA2V(msgPsnymCRLRes_PCA2V&& from) noexcept
    : msgPsnymCRLRes_PCA2V() {
    *this = ::std::move(from);
  }

  inline msgPsnymCRLRes_PCA2V& operator=(const msgPsnymCRLRes_PCA2V& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymCRLRes_PCA2V& operator=(msgPsnymCRLRes_PCA2V&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymCRLRes_PCA2V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymCRLRes_PCA2V* internal_default_instance() {
    return reinterpret_cast<const msgPsnymCRLRes_PCA2V*>(
               &_msgPsnymCRLRes_PCA2V_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(msgPsnymCRLRes_PCA2V& a, msgPsnymCRLRes_PCA2V& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymCRLRes_PCA2V* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymCRLRes_PCA2V* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymCRLRes_PCA2V* New() const final {
    return CreateMaybeMessage<msgPsnymCRLRes_PCA2V>(nullptr);
  }

  msgPsnymCRLRes_PCA2V* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymCRLRes_PCA2V>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymCRLRes_PCA2V& from);
  void MergeFrom(const msgPsnymCRLRes_PCA2V& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymCRLRes_PCA2V* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymCRLRes_PCA2V";
  }
  protected:
  explicit msgPsnymCRLRes_PCA2V(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrWAVECRLResFieldNumber = 7,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 6,
    kStSignFieldNumber = 8,
    kINonceFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 3,
    kTTimeStampFieldNumber = 5,
  };
  // optional string strWAVECRLRes = 7;
  bool has_strwavecrlres() const;
  private:
  bool _internal_has_strwavecrlres() const;
  public:
  void clear_strwavecrlres();
  const std::string& strwavecrlres() const;
  void set_strwavecrlres(const std::string& value);
  void set_strwavecrlres(std::string&& value);
  void set_strwavecrlres(const char* value);
  void set_strwavecrlres(const char* value, size_t size);
  std::string* mutable_strwavecrlres();
  std::string* release_strwavecrlres();
  void set_allocated_strwavecrlres(std::string* strwavecrlres);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strwavecrlres();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strwavecrlres(
      std::string* strwavecrlres);
  private:
  const std::string& _internal_strwavecrlres() const;
  void _internal_set_strwavecrlres(const std::string& value);
  std::string* _internal_mutable_strwavecrlres();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 6;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 8;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 4 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 3 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 5 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymCRLRes_PCA2V)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strwavecrlres_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymOCSPReq_V2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymOCSPReq_V2PCA) */ {
 public:
  inline msgPsnymOCSPReq_V2PCA() : msgPsnymOCSPReq_V2PCA(nullptr) {};
  virtual ~msgPsnymOCSPReq_V2PCA();

  msgPsnymOCSPReq_V2PCA(const msgPsnymOCSPReq_V2PCA& from);
  msgPsnymOCSPReq_V2PCA(msgPsnymOCSPReq_V2PCA&& from) noexcept
    : msgPsnymOCSPReq_V2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymOCSPReq_V2PCA& operator=(const msgPsnymOCSPReq_V2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymOCSPReq_V2PCA& operator=(msgPsnymOCSPReq_V2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymOCSPReq_V2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymOCSPReq_V2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymOCSPReq_V2PCA*>(
               &_msgPsnymOCSPReq_V2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(msgPsnymOCSPReq_V2PCA& a, msgPsnymOCSPReq_V2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymOCSPReq_V2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymOCSPReq_V2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymOCSPReq_V2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymOCSPReq_V2PCA>(nullptr);
  }

  msgPsnymOCSPReq_V2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymOCSPReq_V2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymOCSPReq_V2PCA& from);
  void MergeFrom(const msgPsnymOCSPReq_V2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymOCSPReq_V2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymOCSPReq_V2PCA";
  }
  protected:
  explicit msgPsnymOCSPReq_V2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymsSerialNoToBeCheckedFieldNumber = 6,
    kStrPsnymCertFieldNumber = 8,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 11,
    kUiNoOfPsnymsToBeCheckedFieldNumber = 5,
    kINonceFieldNumber = 9,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 3,
    kIRegionIdFieldNumber = 4,
    kIPsnymCertLenFieldNumber = 7,
    kTTimeStampFieldNumber = 10,
  };
  // repeated string strPsnymsSerialNoToBeChecked = 6;
  int strpsnymsserialnotobechecked_size() const;
  private:
  int _internal_strpsnymsserialnotobechecked_size() const;
  public:
  void clear_strpsnymsserialnotobechecked();
  const std::string& strpsnymsserialnotobechecked(int index) const;
  std::string* mutable_strpsnymsserialnotobechecked(int index);
  void set_strpsnymsserialnotobechecked(int index, const std::string& value);
  void set_strpsnymsserialnotobechecked(int index, std::string&& value);
  void set_strpsnymsserialnotobechecked(int index, const char* value);
  void set_strpsnymsserialnotobechecked(int index, const char* value, size_t size);
  std::string* add_strpsnymsserialnotobechecked();
  void add_strpsnymsserialnotobechecked(const std::string& value);
  void add_strpsnymsserialnotobechecked(std::string&& value);
  void add_strpsnymsserialnotobechecked(const char* value);
  void add_strpsnymsserialnotobechecked(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strpsnymsserialnotobechecked() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strpsnymsserialnotobechecked();
  private:
  const std::string& _internal_strpsnymsserialnotobechecked(int index) const;
  std::string* _internal_add_strpsnymsserialnotobechecked();
  public:

  // required string strPsnymCert = 8 [default = ""];
  bool has_strpsnymcert() const;
  private:
  bool _internal_has_strpsnymcert() const;
  public:
  void clear_strpsnymcert();
  const std::string& strpsnymcert() const;
  void set_strpsnymcert(const std::string& value);
  void set_strpsnymcert(std::string&& value);
  void set_strpsnymcert(const char* value);
  void set_strpsnymcert(const char* value, size_t size);
  std::string* mutable_strpsnymcert();
  std::string* release_strpsnymcert();
  void set_allocated_strpsnymcert(std::string* strpsnymcert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcert(
      std::string* strpsnymcert);
  private:
  const std::string& _internal_strpsnymcert() const;
  void _internal_set_strpsnymcert(const std::string& value);
  std::string* _internal_mutable_strpsnymcert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 11;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeChecked = 5 [default = 0];
  bool has_uinoofpsnymstobechecked() const;
  private:
  bool _internal_has_uinoofpsnymstobechecked() const;
  public:
  void clear_uinoofpsnymstobechecked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstobechecked() const;
  void set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstobechecked() const;
  void _internal_set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iNonce = 9 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 3 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRegionId = 4 [default = -1];
  bool has_iregionid() const;
  private:
  bool _internal_has_iregionid() const;
  public:
  void clear_iregionid();
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid() const;
  void set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iregionid() const;
  void _internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPsnymCertLen = 7 [default = -1];
  bool has_ipsnymcertlen() const;
  private:
  bool _internal_has_ipsnymcertlen() const;
  public:
  void clear_ipsnymcertlen();
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen() const;
  void set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipsnymcertlen() const;
  void _internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 10 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymOCSPReq_V2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strpsnymsserialnotobechecked_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstobechecked_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymRevocationStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymRevocationStatus) */ {
 public:
  inline msgPsnymRevocationStatus() : msgPsnymRevocationStatus(nullptr) {};
  virtual ~msgPsnymRevocationStatus();

  msgPsnymRevocationStatus(const msgPsnymRevocationStatus& from);
  msgPsnymRevocationStatus(msgPsnymRevocationStatus&& from) noexcept
    : msgPsnymRevocationStatus() {
    *this = ::std::move(from);
  }

  inline msgPsnymRevocationStatus& operator=(const msgPsnymRevocationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymRevocationStatus& operator=(msgPsnymRevocationStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymRevocationStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymRevocationStatus* internal_default_instance() {
    return reinterpret_cast<const msgPsnymRevocationStatus*>(
               &_msgPsnymRevocationStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(msgPsnymRevocationStatus& a, msgPsnymRevocationStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymRevocationStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymRevocationStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymRevocationStatus* New() const final {
    return CreateMaybeMessage<msgPsnymRevocationStatus>(nullptr);
  }

  msgPsnymRevocationStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymRevocationStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymRevocationStatus& from);
  void MergeFrom(const msgPsnymRevocationStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymRevocationStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymRevocationStatus";
  }
  protected:
  explicit msgPsnymRevocationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymSerialNoFieldNumber = 1,
    kBRevocationStatusFieldNumber = 2,
  };
  // required string strPsnymSerialNo = 1 [default = ""];
  bool has_strpsnymserialno() const;
  private:
  bool _internal_has_strpsnymserialno() const;
  public:
  void clear_strpsnymserialno();
  const std::string& strpsnymserialno() const;
  void set_strpsnymserialno(const std::string& value);
  void set_strpsnymserialno(std::string&& value);
  void set_strpsnymserialno(const char* value);
  void set_strpsnymserialno(const char* value, size_t size);
  std::string* mutable_strpsnymserialno();
  std::string* release_strpsnymserialno();
  void set_allocated_strpsnymserialno(std::string* strpsnymserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymserialno(
      std::string* strpsnymserialno);
  private:
  const std::string& _internal_strpsnymserialno() const;
  void _internal_set_strpsnymserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymserialno();
  public:

  // required bool bRevocationStatus = 2 [default = false];
  bool has_brevocationstatus() const;
  private:
  bool _internal_has_brevocationstatus() const;
  public:
  void clear_brevocationstatus();
  bool brevocationstatus() const;
  void set_brevocationstatus(bool value);
  private:
  bool _internal_brevocationstatus() const;
  void _internal_set_brevocationstatus(bool value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymRevocationStatus)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymserialno_;
  bool brevocationstatus_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymOCSPRes_PCA2V PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymOCSPRes_PCA2V) */ {
 public:
  inline msgPsnymOCSPRes_PCA2V() : msgPsnymOCSPRes_PCA2V(nullptr) {};
  virtual ~msgPsnymOCSPRes_PCA2V();

  msgPsnymOCSPRes_PCA2V(const msgPsnymOCSPRes_PCA2V& from);
  msgPsnymOCSPRes_PCA2V(msgPsnymOCSPRes_PCA2V&& from) noexcept
    : msgPsnymOCSPRes_PCA2V() {
    *this = ::std::move(from);
  }

  inline msgPsnymOCSPRes_PCA2V& operator=(const msgPsnymOCSPRes_PCA2V& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymOCSPRes_PCA2V& operator=(msgPsnymOCSPRes_PCA2V&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymOCSPRes_PCA2V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymOCSPRes_PCA2V* internal_default_instance() {
    return reinterpret_cast<const msgPsnymOCSPRes_PCA2V*>(
               &_msgPsnymOCSPRes_PCA2V_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(msgPsnymOCSPRes_PCA2V& a, msgPsnymOCSPRes_PCA2V& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymOCSPRes_PCA2V* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymOCSPRes_PCA2V* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymOCSPRes_PCA2V* New() const final {
    return CreateMaybeMessage<msgPsnymOCSPRes_PCA2V>(nullptr);
  }

  msgPsnymOCSPRes_PCA2V* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymOCSPRes_PCA2V>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymOCSPRes_PCA2V& from);
  void MergeFrom(const msgPsnymOCSPRes_PCA2V& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymOCSPRes_PCA2V* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymOCSPRes_PCA2V";
  }
  protected:
  explicit msgPsnymOCSPRes_PCA2V(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStRevocationStatusFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 8,
    kStSignFieldNumber = 9,
    kUiNoOfPsnymsToBeCheckedFieldNumber = 4,
    kINonceFieldNumber = 6,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 3,
    kTTimeStampFieldNumber = 7,
  };
  // repeated .interfaces.msgPsnymRevocationStatus stRevocationStatus = 5;
  int strevocationstatus_size() const;
  private:
  int _internal_strevocationstatus_size() const;
  public:
  void clear_strevocationstatus();
  ::interfaces::msgPsnymRevocationStatus* mutable_strevocationstatus(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymRevocationStatus >*
      mutable_strevocationstatus();
  private:
  const ::interfaces::msgPsnymRevocationStatus& _internal_strevocationstatus(int index) const;
  ::interfaces::msgPsnymRevocationStatus* _internal_add_strevocationstatus();
  public:
  const ::interfaces::msgPsnymRevocationStatus& strevocationstatus(int index) const;
  ::interfaces::msgPsnymRevocationStatus* add_strevocationstatus();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymRevocationStatus >&
      strevocationstatus() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 8;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeChecked = 4 [default = 0];
  bool has_uinoofpsnymstobechecked() const;
  private:
  bool _internal_has_uinoofpsnymstobechecked() const;
  public:
  void clear_uinoofpsnymstobechecked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstobechecked() const;
  void set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstobechecked() const;
  void _internal_set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iNonce = 6 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 3 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 7 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymOCSPRes_PCA2V)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymRevocationStatus > strevocationstatus_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstobechecked_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokePsnymCertReq_P2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokePsnymCertReq_P2RA) */ {
 public:
  inline msgRevokePsnymCertReq_P2RA() : msgRevokePsnymCertReq_P2RA(nullptr) {};
  virtual ~msgRevokePsnymCertReq_P2RA();

  msgRevokePsnymCertReq_P2RA(const msgRevokePsnymCertReq_P2RA& from);
  msgRevokePsnymCertReq_P2RA(msgRevokePsnymCertReq_P2RA&& from) noexcept
    : msgRevokePsnymCertReq_P2RA() {
    *this = ::std::move(from);
  }

  inline msgRevokePsnymCertReq_P2RA& operator=(const msgRevokePsnymCertReq_P2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokePsnymCertReq_P2RA& operator=(msgRevokePsnymCertReq_P2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokePsnymCertReq_P2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokePsnymCertReq_P2RA* internal_default_instance() {
    return reinterpret_cast<const msgRevokePsnymCertReq_P2RA*>(
               &_msgRevokePsnymCertReq_P2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(msgRevokePsnymCertReq_P2RA& a, msgRevokePsnymCertReq_P2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokePsnymCertReq_P2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokePsnymCertReq_P2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokePsnymCertReq_P2RA* New() const final {
    return CreateMaybeMessage<msgRevokePsnymCertReq_P2RA>(nullptr);
  }

  msgRevokePsnymCertReq_P2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokePsnymCertReq_P2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokePsnymCertReq_P2RA& from);
  void MergeFrom(const msgRevokePsnymCertReq_P2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokePsnymCertReq_P2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokePsnymCertReq_P2RA";
  }
  protected:
  explicit msgRevokePsnymCertReq_P2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrRevokedPsnymCertFieldNumber = 6,
    kStrECSecManECPubKeyFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 9,
    kUiNoOfPsnymsToBeRevokedFieldNumber = 5,
    kINonceFieldNumber = 7,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 3,
    kTTimeStampFieldNumber = 8,
  };
  // repeated string strRevokedPsnymCert = 6;
  int strrevokedpsnymcert_size() const;
  private:
  int _internal_strrevokedpsnymcert_size() const;
  public:
  void clear_strrevokedpsnymcert();
  const std::string& strrevokedpsnymcert(int index) const;
  std::string* mutable_strrevokedpsnymcert(int index);
  void set_strrevokedpsnymcert(int index, const std::string& value);
  void set_strrevokedpsnymcert(int index, std::string&& value);
  void set_strrevokedpsnymcert(int index, const char* value);
  void set_strrevokedpsnymcert(int index, const char* value, size_t size);
  std::string* add_strrevokedpsnymcert();
  void add_strrevokedpsnymcert(const std::string& value);
  void add_strrevokedpsnymcert(std::string&& value);
  void add_strrevokedpsnymcert(const char* value);
  void add_strrevokedpsnymcert(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strrevokedpsnymcert() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strrevokedpsnymcert();
  private:
  const std::string& _internal_strrevokedpsnymcert(int index) const;
  std::string* _internal_add_strrevokedpsnymcert();
  public:

  // required string strECSecManECPubKey = 4 [default = ""];
  bool has_strecsecmanecpubkey() const;
  private:
  bool _internal_has_strecsecmanecpubkey() const;
  public:
  void clear_strecsecmanecpubkey();
  const std::string& strecsecmanecpubkey() const;
  void set_strecsecmanecpubkey(const std::string& value);
  void set_strecsecmanecpubkey(std::string&& value);
  void set_strecsecmanecpubkey(const char* value);
  void set_strecsecmanecpubkey(const char* value, size_t size);
  std::string* mutable_strecsecmanecpubkey();
  std::string* release_strecsecmanecpubkey();
  void set_allocated_strecsecmanecpubkey(std::string* strecsecmanecpubkey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strecsecmanecpubkey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strecsecmanecpubkey(
      std::string* strecsecmanecpubkey);
  private:
  const std::string& _internal_strecsecmanecpubkey() const;
  void _internal_set_strecsecmanecpubkey(const std::string& value);
  std::string* _internal_mutable_strecsecmanecpubkey();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeRevoked = 5 [default = 0];
  bool has_uinoofpsnymstoberevoked() const;
  private:
  bool _internal_has_uinoofpsnymstoberevoked() const;
  public:
  void clear_uinoofpsnymstoberevoked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked() const;
  void set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberevoked() const;
  void _internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 3 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokePsnymCertReq_P2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strrevokedpsnymcert_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strecsecmanecpubkey_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokePsnymCertReq_RA2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokePsnymCertReq_RA2PCA) */ {
 public:
  inline msgRevokePsnymCertReq_RA2PCA() : msgRevokePsnymCertReq_RA2PCA(nullptr) {};
  virtual ~msgRevokePsnymCertReq_RA2PCA();

  msgRevokePsnymCertReq_RA2PCA(const msgRevokePsnymCertReq_RA2PCA& from);
  msgRevokePsnymCertReq_RA2PCA(msgRevokePsnymCertReq_RA2PCA&& from) noexcept
    : msgRevokePsnymCertReq_RA2PCA() {
    *this = ::std::move(from);
  }

  inline msgRevokePsnymCertReq_RA2PCA& operator=(const msgRevokePsnymCertReq_RA2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokePsnymCertReq_RA2PCA& operator=(msgRevokePsnymCertReq_RA2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokePsnymCertReq_RA2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokePsnymCertReq_RA2PCA* internal_default_instance() {
    return reinterpret_cast<const msgRevokePsnymCertReq_RA2PCA*>(
               &_msgRevokePsnymCertReq_RA2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(msgRevokePsnymCertReq_RA2PCA& a, msgRevokePsnymCertReq_RA2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokePsnymCertReq_RA2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokePsnymCertReq_RA2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokePsnymCertReq_RA2PCA* New() const final {
    return CreateMaybeMessage<msgRevokePsnymCertReq_RA2PCA>(nullptr);
  }

  msgRevokePsnymCertReq_RA2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokePsnymCertReq_RA2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokePsnymCertReq_RA2PCA& from);
  void MergeFrom(const msgRevokePsnymCertReq_RA2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokePsnymCertReq_RA2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokePsnymCertReq_RA2PCA";
  }
  protected:
  explicit msgRevokePsnymCertReq_RA2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrRevokedPsnymCertFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kUiNoOfPsnymsToBeRevokedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 5,
    kTTimeStampFieldNumber = 6,
  };
  // repeated string strRevokedPsnymCert = 4;
  int strrevokedpsnymcert_size() const;
  private:
  int _internal_strrevokedpsnymcert_size() const;
  public:
  void clear_strrevokedpsnymcert();
  const std::string& strrevokedpsnymcert(int index) const;
  std::string* mutable_strrevokedpsnymcert(int index);
  void set_strrevokedpsnymcert(int index, const std::string& value);
  void set_strrevokedpsnymcert(int index, std::string&& value);
  void set_strrevokedpsnymcert(int index, const char* value);
  void set_strrevokedpsnymcert(int index, const char* value, size_t size);
  std::string* add_strrevokedpsnymcert();
  void add_strrevokedpsnymcert(const std::string& value);
  void add_strrevokedpsnymcert(std::string&& value);
  void add_strrevokedpsnymcert(const char* value);
  void add_strrevokedpsnymcert(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strrevokedpsnymcert() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strrevokedpsnymcert();
  private:
  const std::string& _internal_strrevokedpsnymcert(int index) const;
  std::string* _internal_add_strrevokedpsnymcert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
  bool has_uinoofpsnymstoberevoked() const;
  private:
  bool _internal_has_uinoofpsnymstoberevoked() const;
  public:
  void clear_uinoofpsnymstoberevoked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked() const;
  void set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberevoked() const;
  void _internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokePsnymCertReq_RA2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strrevokedpsnymcert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokePsnymCertRes_PCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokePsnymCertRes_PCA2RA) */ {
 public:
  inline msgRevokePsnymCertRes_PCA2RA() : msgRevokePsnymCertRes_PCA2RA(nullptr) {};
  virtual ~msgRevokePsnymCertRes_PCA2RA();

  msgRevokePsnymCertRes_PCA2RA(const msgRevokePsnymCertRes_PCA2RA& from);
  msgRevokePsnymCertRes_PCA2RA(msgRevokePsnymCertRes_PCA2RA&& from) noexcept
    : msgRevokePsnymCertRes_PCA2RA() {
    *this = ::std::move(from);
  }

  inline msgRevokePsnymCertRes_PCA2RA& operator=(const msgRevokePsnymCertRes_PCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokePsnymCertRes_PCA2RA& operator=(msgRevokePsnymCertRes_PCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokePsnymCertRes_PCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokePsnymCertRes_PCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgRevokePsnymCertRes_PCA2RA*>(
               &_msgRevokePsnymCertRes_PCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(msgRevokePsnymCertRes_PCA2RA& a, msgRevokePsnymCertRes_PCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokePsnymCertRes_PCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokePsnymCertRes_PCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokePsnymCertRes_PCA2RA* New() const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_PCA2RA>(nullptr);
  }

  msgRevokePsnymCertRes_PCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_PCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokePsnymCertRes_PCA2RA& from);
  void MergeFrom(const msgRevokePsnymCertRes_PCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokePsnymCertRes_PCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokePsnymCertRes_PCA2RA";
  }
  protected:
  explicit msgRevokePsnymCertRes_PCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 2,
    kUiNoOfPsnymsToBeRevokedFieldNumber = 3,
    kUiNoOfSuccessfullyRevokedPsnymsFieldNumber = 4,
    kUiNoOfSuccessfullyRevokedTicketsFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
  };
  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
  bool has_uinoofpsnymstoberevoked() const;
  private:
  bool _internal_has_uinoofpsnymstoberevoked() const;
  public:
  void clear_uinoofpsnymstoberevoked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked() const;
  void set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberevoked() const;
  void _internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyRevokedPsnyms = 4 [default = 0];
  bool has_uinoofsuccessfullyrevokedpsnyms() const;
  private:
  bool _internal_has_uinoofsuccessfullyrevokedpsnyms() const;
  public:
  void clear_uinoofsuccessfullyrevokedpsnyms();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedpsnyms() const;
  void set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullyrevokedpsnyms() const;
  void _internal_set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyRevokedTickets = 5 [default = 0];
  bool has_uinoofsuccessfullyrevokedtickets() const;
  private:
  bool _internal_has_uinoofsuccessfullyrevokedtickets() const;
  public:
  void clear_uinoofsuccessfullyrevokedtickets();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedtickets() const;
  void set_uinoofsuccessfullyrevokedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullyrevokedtickets() const;
  void _internal_set_uinoofsuccessfullyrevokedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokePsnymCertRes_PCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedpsnyms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedtickets_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokeX509CertReq_RA2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokeX509CertReq_RA2LTCA) */ {
 public:
  inline msgRevokeX509CertReq_RA2LTCA() : msgRevokeX509CertReq_RA2LTCA(nullptr) {};
  virtual ~msgRevokeX509CertReq_RA2LTCA();

  msgRevokeX509CertReq_RA2LTCA(const msgRevokeX509CertReq_RA2LTCA& from);
  msgRevokeX509CertReq_RA2LTCA(msgRevokeX509CertReq_RA2LTCA&& from) noexcept
    : msgRevokeX509CertReq_RA2LTCA() {
    *this = ::std::move(from);
  }

  inline msgRevokeX509CertReq_RA2LTCA& operator=(const msgRevokeX509CertReq_RA2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokeX509CertReq_RA2LTCA& operator=(msgRevokeX509CertReq_RA2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokeX509CertReq_RA2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokeX509CertReq_RA2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgRevokeX509CertReq_RA2LTCA*>(
               &_msgRevokeX509CertReq_RA2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(msgRevokeX509CertReq_RA2LTCA& a, msgRevokeX509CertReq_RA2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokeX509CertReq_RA2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokeX509CertReq_RA2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokeX509CertReq_RA2LTCA* New() const final {
    return CreateMaybeMessage<msgRevokeX509CertReq_RA2LTCA>(nullptr);
  }

  msgRevokeX509CertReq_RA2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokeX509CertReq_RA2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokeX509CertReq_RA2LTCA& from);
  void MergeFrom(const msgRevokeX509CertReq_RA2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokeX509CertReq_RA2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokeX509CertReq_RA2LTCA";
  }
  protected:
  explicit msgRevokeX509CertReq_RA2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kUiNoOfPsnymsToBeRevokedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 5,
    kTTimeStampFieldNumber = 6,
  };
  // repeated string strTicketSerialNo = 4;
  int strticketserialno_size() const;
  private:
  int _internal_strticketserialno_size() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno(int index) const;
  std::string* mutable_strticketserialno(int index);
  void set_strticketserialno(int index, const std::string& value);
  void set_strticketserialno(int index, std::string&& value);
  void set_strticketserialno(int index, const char* value);
  void set_strticketserialno(int index, const char* value, size_t size);
  std::string* add_strticketserialno();
  void add_strticketserialno(const std::string& value);
  void add_strticketserialno(std::string&& value);
  void add_strticketserialno(const char* value);
  void add_strticketserialno(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strticketserialno() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strticketserialno();
  private:
  const std::string& _internal_strticketserialno(int index) const;
  std::string* _internal_add_strticketserialno();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
  bool has_uinoofpsnymstoberevoked() const;
  private:
  bool _internal_has_uinoofpsnymstoberevoked() const;
  public:
  void clear_uinoofpsnymstoberevoked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked() const;
  void set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberevoked() const;
  void _internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokeX509CertReq_RA2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strticketserialno_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo) */ {
 public:
  inline msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo() : msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo(nullptr) {};
  virtual ~msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo();

  msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo(const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& from);
  msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo&& from) noexcept
    : msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo() {
    *this = ::std::move(from);
  }

  inline msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& operator=(const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& operator=(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* internal_default_instance() {
    return reinterpret_cast<const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo*>(
               &_msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& a, msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* New() const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo>(nullptr);
  }

  msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& from);
  void MergeFrom(const msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo";
  }
  protected:
  explicit msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStDetailedErrInfoFieldNumber = 2,
    kIErrGenSourceFieldNumber = 1,
  };
  // required .interfaces.msgError stDetailedErrInfo = 2;
  bool has_stdetailederrinfo() const;
  private:
  bool _internal_has_stdetailederrinfo() const;
  public:
  void clear_stdetailederrinfo();
  const ::interfaces::msgError& stdetailederrinfo() const;
  ::interfaces::msgError* release_stdetailederrinfo();
  ::interfaces::msgError* mutable_stdetailederrinfo();
  void set_allocated_stdetailederrinfo(::interfaces::msgError* stdetailederrinfo);
  private:
  const ::interfaces::msgError& _internal_stdetailederrinfo() const;
  ::interfaces::msgError* _internal_mutable_stdetailederrinfo();
  public:
  void unsafe_arena_set_allocated_stdetailederrinfo(
      ::interfaces::msgError* stdetailederrinfo);
  ::interfaces::msgError* unsafe_arena_release_stdetailederrinfo();

  // required int32 iErrGenSource = 1 [default = -1];
  bool has_ierrgensource() const;
  private:
  bool _internal_has_ierrgensource() const;
  public:
  void clear_ierrgensource();
  ::PROTOBUF_NAMESPACE_ID::int32 ierrgensource() const;
  void set_ierrgensource(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ierrgensource() const;
  void _internal_set_ierrgensource(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgError* stdetailederrinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 ierrgensource_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgRevokePsnymCertRes_RA2P PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgRevokePsnymCertRes_RA2P) */ {
 public:
  inline msgRevokePsnymCertRes_RA2P() : msgRevokePsnymCertRes_RA2P(nullptr) {};
  virtual ~msgRevokePsnymCertRes_RA2P();

  msgRevokePsnymCertRes_RA2P(const msgRevokePsnymCertRes_RA2P& from);
  msgRevokePsnymCertRes_RA2P(msgRevokePsnymCertRes_RA2P&& from) noexcept
    : msgRevokePsnymCertRes_RA2P() {
    *this = ::std::move(from);
  }

  inline msgRevokePsnymCertRes_RA2P& operator=(const msgRevokePsnymCertRes_RA2P& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgRevokePsnymCertRes_RA2P& operator=(msgRevokePsnymCertRes_RA2P&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgRevokePsnymCertRes_RA2P& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgRevokePsnymCertRes_RA2P* internal_default_instance() {
    return reinterpret_cast<const msgRevokePsnymCertRes_RA2P*>(
               &_msgRevokePsnymCertRes_RA2P_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(msgRevokePsnymCertRes_RA2P& a, msgRevokePsnymCertRes_RA2P& b) {
    a.Swap(&b);
  }
  inline void Swap(msgRevokePsnymCertRes_RA2P* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgRevokePsnymCertRes_RA2P* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgRevokePsnymCertRes_RA2P* New() const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_RA2P>(nullptr);
  }

  msgRevokePsnymCertRes_RA2P* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgRevokePsnymCertRes_RA2P>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgRevokePsnymCertRes_RA2P& from);
  void MergeFrom(const msgRevokePsnymCertRes_RA2P& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgRevokePsnymCertRes_RA2P* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgRevokePsnymCertRes_RA2P";
  }
  protected:
  explicit msgRevokePsnymCertRes_RA2P(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo msgPsnymRevocationErrInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymRevocationErrInfoFieldNumber = 6,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 9,
    kStSignFieldNumber = 10,
    kUiNoOfPsnymsToBeRevokedFieldNumber = 3,
    kUiNoOfSuccessfullyRevokedX509CertFieldNumber = 4,
    kUiNoOfSuccessfullyRevokedPsnymsFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo pstPsnymRevocationErrInfo = 6;
  int pstpsnymrevocationerrinfo_size() const;
  private:
  int _internal_pstpsnymrevocationerrinfo_size() const;
  public:
  void clear_pstpsnymrevocationerrinfo();
  ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* mutable_pstpsnymrevocationerrinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo >*
      mutable_pstpsnymrevocationerrinfo();
  private:
  const ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& _internal_pstpsnymrevocationerrinfo(int index) const;
  ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* _internal_add_pstpsnymrevocationerrinfo();
  public:
  const ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& pstpsnymrevocationerrinfo(int index) const;
  ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* add_pstpsnymrevocationerrinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo >&
      pstpsnymrevocationerrinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 9;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
  bool has_uinoofpsnymstoberevoked() const;
  private:
  bool _internal_has_uinoofpsnymstoberevoked() const;
  public:
  void clear_uinoofpsnymstoberevoked();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked() const;
  void set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberevoked() const;
  void _internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyRevokedX509Cert = 4 [default = 0];
  bool has_uinoofsuccessfullyrevokedx509cert() const;
  private:
  bool _internal_has_uinoofsuccessfullyrevokedx509cert() const;
  public:
  void clear_uinoofsuccessfullyrevokedx509cert();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedx509cert() const;
  void set_uinoofsuccessfullyrevokedx509cert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullyrevokedx509cert() const;
  void _internal_set_uinoofsuccessfullyrevokedx509cert(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyRevokedPsnyms = 5 [default = 0];
  bool has_uinoofsuccessfullyrevokedpsnyms() const;
  private:
  bool _internal_has_uinoofsuccessfullyrevokedpsnyms() const;
  public:
  void clear_uinoofsuccessfullyrevokedpsnyms();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedpsnyms() const;
  void set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullyrevokedpsnyms() const;
  void _internal_set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgRevokePsnymCertRes_RA2P)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo > pstpsnymrevocationerrinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberevoked_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedx509cert_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullyrevokedpsnyms_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionReq_Police2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionReq_Police2RA) */ {
 public:
  inline msgPsnymResolutionReq_Police2RA() : msgPsnymResolutionReq_Police2RA(nullptr) {};
  virtual ~msgPsnymResolutionReq_Police2RA();

  msgPsnymResolutionReq_Police2RA(const msgPsnymResolutionReq_Police2RA& from);
  msgPsnymResolutionReq_Police2RA(msgPsnymResolutionReq_Police2RA&& from) noexcept
    : msgPsnymResolutionReq_Police2RA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionReq_Police2RA& operator=(const msgPsnymResolutionReq_Police2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionReq_Police2RA& operator=(msgPsnymResolutionReq_Police2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionReq_Police2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionReq_Police2RA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionReq_Police2RA*>(
               &_msgPsnymResolutionReq_Police2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(msgPsnymResolutionReq_Police2RA& a, msgPsnymResolutionReq_Police2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionReq_Police2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionReq_Police2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionReq_Police2RA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_Police2RA>(nullptr);
  }

  msgPsnymResolutionReq_Police2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_Police2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionReq_Police2RA& from);
  void MergeFrom(const msgPsnymResolutionReq_Police2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionReq_Police2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionReq_Police2RA";
  }
  protected:
  explicit msgPsnymResolutionReq_Police2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymsSerialNoToBeResolvedFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 9,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIPoliceIdFieldNumber = 5,
    kIRAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated string strPsnymsSerialNoToBeResolved = 4;
  int strpsnymsserialnotoberesolved_size() const;
  private:
  int _internal_strpsnymsserialnotoberesolved_size() const;
  public:
  void clear_strpsnymsserialnotoberesolved();
  const std::string& strpsnymsserialnotoberesolved(int index) const;
  std::string* mutable_strpsnymsserialnotoberesolved(int index);
  void set_strpsnymsserialnotoberesolved(int index, const std::string& value);
  void set_strpsnymsserialnotoberesolved(int index, std::string&& value);
  void set_strpsnymsserialnotoberesolved(int index, const char* value);
  void set_strpsnymsserialnotoberesolved(int index, const char* value, size_t size);
  std::string* add_strpsnymsserialnotoberesolved();
  void add_strpsnymsserialnotoberesolved(const std::string& value);
  void add_strpsnymsserialnotoberesolved(std::string&& value);
  void add_strpsnymsserialnotoberesolved(const char* value);
  void add_strpsnymsserialnotoberesolved(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strpsnymsserialnotoberesolved() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strpsnymsserialnotoberesolved();
  private:
  const std::string& _internal_strpsnymsserialnotoberesolved(int index) const;
  std::string* _internal_add_strpsnymsserialnotoberesolved();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 5 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 6 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionReq_Police2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strpsnymsserialnotoberesolved_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionReq_RA2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionReq_RA2PCA) */ {
 public:
  inline msgPsnymResolutionReq_RA2PCA() : msgPsnymResolutionReq_RA2PCA(nullptr) {};
  virtual ~msgPsnymResolutionReq_RA2PCA();

  msgPsnymResolutionReq_RA2PCA(const msgPsnymResolutionReq_RA2PCA& from);
  msgPsnymResolutionReq_RA2PCA(msgPsnymResolutionReq_RA2PCA&& from) noexcept
    : msgPsnymResolutionReq_RA2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionReq_RA2PCA& operator=(const msgPsnymResolutionReq_RA2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionReq_RA2PCA& operator=(msgPsnymResolutionReq_RA2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionReq_RA2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionReq_RA2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionReq_RA2PCA*>(
               &_msgPsnymResolutionReq_RA2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(msgPsnymResolutionReq_RA2PCA& a, msgPsnymResolutionReq_RA2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionReq_RA2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionReq_RA2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionReq_RA2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2PCA>(nullptr);
  }

  msgPsnymResolutionReq_RA2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionReq_RA2PCA& from);
  void MergeFrom(const msgPsnymResolutionReq_RA2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionReq_RA2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionReq_RA2PCA";
  }
  protected:
  explicit msgPsnymResolutionReq_RA2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymsSerialNoToBeResolvedFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 9,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 5,
    kIPCAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated string strPsnymsSerialNoToBeResolved = 4;
  int strpsnymsserialnotoberesolved_size() const;
  private:
  int _internal_strpsnymsserialnotoberesolved_size() const;
  public:
  void clear_strpsnymsserialnotoberesolved();
  const std::string& strpsnymsserialnotoberesolved(int index) const;
  std::string* mutable_strpsnymsserialnotoberesolved(int index);
  void set_strpsnymsserialnotoberesolved(int index, const std::string& value);
  void set_strpsnymsserialnotoberesolved(int index, std::string&& value);
  void set_strpsnymsserialnotoberesolved(int index, const char* value);
  void set_strpsnymsserialnotoberesolved(int index, const char* value, size_t size);
  std::string* add_strpsnymsserialnotoberesolved();
  void add_strpsnymsserialnotoberesolved(const std::string& value);
  void add_strpsnymsserialnotoberesolved(std::string&& value);
  void add_strpsnymsserialnotoberesolved(const char* value);
  void add_strpsnymsserialnotoberesolved(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strpsnymsserialnotoberesolved() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strpsnymsserialnotoberesolved();
  private:
  const std::string& _internal_strpsnymsserialnotoberesolved(int index) const;
  std::string* _internal_add_strpsnymsserialnotoberesolved();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 6 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionReq_RA2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strpsnymsserialnotoberesolved_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_PCA2RA_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution) */ {
 public:
  inline msgPsnymResolutionRes_PCA2RA_msgPsnymResolution() : msgPsnymResolutionRes_PCA2RA_msgPsnymResolution(nullptr) {};
  virtual ~msgPsnymResolutionRes_PCA2RA_msgPsnymResolution();

  msgPsnymResolutionRes_PCA2RA_msgPsnymResolution(const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  msgPsnymResolutionRes_PCA2RA_msgPsnymResolution(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution&& from) noexcept
    : msgPsnymResolutionRes_PCA2RA_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& operator=(const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& operator=(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution*>(
               &_msgPsnymResolutionRes_PCA2RA_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& a, msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_PCA2RA_msgPsnymResolution>(nullptr);
  }

  msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_PCA2RA_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  void MergeFrom(const msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution";
  }
  protected:
  explicit msgPsnymResolutionRes_PCA2RA_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertSerialNoFieldNumber = 1,
    kStrTicketSerialNoFieldNumber = 2,
    kStrTicketIdentifiableKeyFieldNumber = 3,
    kStErrInfoFieldNumber = 4,
  };
  // required string strPsnymCertSerialNo = 1 [default = ""];
  bool has_strpsnymcertserialno() const;
  private:
  bool _internal_has_strpsnymcertserialno() const;
  public:
  void clear_strpsnymcertserialno();
  const std::string& strpsnymcertserialno() const;
  void set_strpsnymcertserialno(const std::string& value);
  void set_strpsnymcertserialno(std::string&& value);
  void set_strpsnymcertserialno(const char* value);
  void set_strpsnymcertserialno(const char* value, size_t size);
  std::string* mutable_strpsnymcertserialno();
  std::string* release_strpsnymcertserialno();
  void set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcertserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcertserialno(
      std::string* strpsnymcertserialno);
  private:
  const std::string& _internal_strpsnymcertserialno() const;
  void _internal_set_strpsnymcertserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymcertserialno();
  public:

  // required string strTicketSerialNo = 2 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicketIdentifiableKey = 3 [default = ""];
  bool has_strticketidentifiablekey() const;
  private:
  bool _internal_has_strticketidentifiablekey() const;
  public:
  void clear_strticketidentifiablekey();
  const std::string& strticketidentifiablekey() const;
  void set_strticketidentifiablekey(const std::string& value);
  void set_strticketidentifiablekey(std::string&& value);
  void set_strticketidentifiablekey(const char* value);
  void set_strticketidentifiablekey(const char* value, size_t size);
  std::string* mutable_strticketidentifiablekey();
  std::string* release_strticketidentifiablekey();
  void set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketidentifiablekey(
      std::string* strticketidentifiablekey);
  private:
  const std::string& _internal_strticketidentifiablekey() const;
  void _internal_set_strticketidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strticketidentifiablekey();
  public:

  // required .interfaces.msgError stErrInfo = 4;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcertserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketidentifiablekey_;
  ::interfaces::msgError* sterrinfo_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_PCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_PCA2RA) */ {
 public:
  inline msgPsnymResolutionRes_PCA2RA() : msgPsnymResolutionRes_PCA2RA(nullptr) {};
  virtual ~msgPsnymResolutionRes_PCA2RA();

  msgPsnymResolutionRes_PCA2RA(const msgPsnymResolutionRes_PCA2RA& from);
  msgPsnymResolutionRes_PCA2RA(msgPsnymResolutionRes_PCA2RA&& from) noexcept
    : msgPsnymResolutionRes_PCA2RA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_PCA2RA& operator=(const msgPsnymResolutionRes_PCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_PCA2RA& operator=(msgPsnymResolutionRes_PCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_PCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_PCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_PCA2RA*>(
               &_msgPsnymResolutionRes_PCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(msgPsnymResolutionRes_PCA2RA& a, msgPsnymResolutionRes_PCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_PCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_PCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_PCA2RA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_PCA2RA>(nullptr);
  }

  msgPsnymResolutionRes_PCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_PCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_PCA2RA& from);
  void MergeFrom(const msgPsnymResolutionRes_PCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_PCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_PCA2RA";
  }
  protected:
  explicit msgPsnymResolutionRes_PCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgPsnymResolutionRes_PCA2RA_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 9,
    kStSignFieldNumber = 10,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 5,
    kIPCAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 4;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 9;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 6 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_PCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution) */ {
 public:
  inline msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution() : msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution(nullptr) {};
  virtual ~msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution();

  msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution(const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& from);
  msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution&& from) noexcept
    : msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& operator=(const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& operator=(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution*>(
               &_msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& a, msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution>(nullptr);
  }

  msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& from);
  void MergeFrom(const msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution";
  }
  protected:
  explicit msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStrTicketIdentifiableKeyFieldNumber = 2,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicketIdentifiableKey = 2 [default = ""];
  bool has_strticketidentifiablekey() const;
  private:
  bool _internal_has_strticketidentifiablekey() const;
  public:
  void clear_strticketidentifiablekey();
  const std::string& strticketidentifiablekey() const;
  void set_strticketidentifiablekey(const std::string& value);
  void set_strticketidentifiablekey(std::string&& value);
  void set_strticketidentifiablekey(const char* value);
  void set_strticketidentifiablekey(const char* value, size_t size);
  std::string* mutable_strticketidentifiablekey();
  std::string* release_strticketidentifiablekey();
  void set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketidentifiablekey(
      std::string* strticketidentifiablekey);
  private:
  const std::string& _internal_strticketidentifiablekey() const;
  void _internal_set_strticketidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strticketidentifiablekey();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketidentifiablekey_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionReq_RA2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionReq_RA2LTCA) */ {
 public:
  inline msgPsnymResolutionReq_RA2LTCA() : msgPsnymResolutionReq_RA2LTCA(nullptr) {};
  virtual ~msgPsnymResolutionReq_RA2LTCA();

  msgPsnymResolutionReq_RA2LTCA(const msgPsnymResolutionReq_RA2LTCA& from);
  msgPsnymResolutionReq_RA2LTCA(msgPsnymResolutionReq_RA2LTCA&& from) noexcept
    : msgPsnymResolutionReq_RA2LTCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionReq_RA2LTCA& operator=(const msgPsnymResolutionReq_RA2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionReq_RA2LTCA& operator=(msgPsnymResolutionReq_RA2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionReq_RA2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionReq_RA2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionReq_RA2LTCA*>(
               &_msgPsnymResolutionReq_RA2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(msgPsnymResolutionReq_RA2LTCA& a, msgPsnymResolutionReq_RA2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionReq_RA2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionReq_RA2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionReq_RA2LTCA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2LTCA>(nullptr);
  }

  msgPsnymResolutionReq_RA2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionReq_RA2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionReq_RA2LTCA& from);
  void MergeFrom(const msgPsnymResolutionReq_RA2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionReq_RA2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionReq_RA2LTCA";
  }
  protected:
  explicit msgPsnymResolutionReq_RA2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 9,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 5,
    kILTCAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution pstPsnymResolutionInfo = 4;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 6 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionReq_RA2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution) */ {
 public:
  inline msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution() : msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution(nullptr) {};
  virtual ~msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution();

  msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution(const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& from);
  msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution&& from) noexcept
    : msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& operator=(const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& operator=(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution*>(
               &_msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& a, msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution>(nullptr);
  }

  msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& from);
  void MergeFrom(const msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution";
  }
  protected:
  explicit msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStrVehX509CertSerialNoFieldNumber = 2,
    kStrTicketIdentifiableKeyFieldNumber = 3,
    kStErrInfoFieldNumber = 5,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strVehX509CertSerialNo = 2 [default = ""];
  bool has_strvehx509certserialno() const;
  private:
  bool _internal_has_strvehx509certserialno() const;
  public:
  void clear_strvehx509certserialno();
  const std::string& strvehx509certserialno() const;
  void set_strvehx509certserialno(const std::string& value);
  void set_strvehx509certserialno(std::string&& value);
  void set_strvehx509certserialno(const char* value);
  void set_strvehx509certserialno(const char* value, size_t size);
  std::string* mutable_strvehx509certserialno();
  std::string* release_strvehx509certserialno();
  void set_allocated_strvehx509certserialno(std::string* strvehx509certserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strvehx509certserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strvehx509certserialno(
      std::string* strvehx509certserialno);
  private:
  const std::string& _internal_strvehx509certserialno() const;
  void _internal_set_strvehx509certserialno(const std::string& value);
  std::string* _internal_mutable_strvehx509certserialno();
  public:

  // required string strTicketIdentifiableKey = 3 [default = ""];
  bool has_strticketidentifiablekey() const;
  private:
  bool _internal_has_strticketidentifiablekey() const;
  public:
  void clear_strticketidentifiablekey();
  const std::string& strticketidentifiablekey() const;
  void set_strticketidentifiablekey(const std::string& value);
  void set_strticketidentifiablekey(std::string&& value);
  void set_strticketidentifiablekey(const char* value);
  void set_strticketidentifiablekey(const char* value, size_t size);
  std::string* mutable_strticketidentifiablekey();
  std::string* release_strticketidentifiablekey();
  void set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketidentifiablekey(
      std::string* strticketidentifiablekey);
  private:
  const std::string& _internal_strticketidentifiablekey() const;
  void _internal_set_strticketidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strticketidentifiablekey();
  public:

  // required .interfaces.msgError stErrInfo = 5;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strvehx509certserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketidentifiablekey_;
  ::interfaces::msgError* sterrinfo_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_LTCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_LTCA2RA) */ {
 public:
  inline msgPsnymResolutionRes_LTCA2RA() : msgPsnymResolutionRes_LTCA2RA(nullptr) {};
  virtual ~msgPsnymResolutionRes_LTCA2RA();

  msgPsnymResolutionRes_LTCA2RA(const msgPsnymResolutionRes_LTCA2RA& from);
  msgPsnymResolutionRes_LTCA2RA(msgPsnymResolutionRes_LTCA2RA&& from) noexcept
    : msgPsnymResolutionRes_LTCA2RA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_LTCA2RA& operator=(const msgPsnymResolutionRes_LTCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_LTCA2RA& operator=(msgPsnymResolutionRes_LTCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_LTCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_LTCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_LTCA2RA*>(
               &_msgPsnymResolutionRes_LTCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(msgPsnymResolutionRes_LTCA2RA& a, msgPsnymResolutionRes_LTCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_LTCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_LTCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_LTCA2RA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_LTCA2RA>(nullptr);
  }

  msgPsnymResolutionRes_LTCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_LTCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_LTCA2RA& from);
  void MergeFrom(const msgPsnymResolutionRes_LTCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_LTCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_LTCA2RA";
  }
  protected:
  explicit msgPsnymResolutionRes_LTCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 9,
    kStSignFieldNumber = 10,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 5,
    kILTCAIdRangeFieldNumber = 6,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 4;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 9;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 6 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_LTCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_RA2Police_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution) */ {
 public:
  inline msgPsnymResolutionRes_RA2Police_msgPsnymResolution() : msgPsnymResolutionRes_RA2Police_msgPsnymResolution(nullptr) {};
  virtual ~msgPsnymResolutionRes_RA2Police_msgPsnymResolution();

  msgPsnymResolutionRes_RA2Police_msgPsnymResolution(const msgPsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  msgPsnymResolutionRes_RA2Police_msgPsnymResolution(msgPsnymResolutionRes_RA2Police_msgPsnymResolution&& from) noexcept
    : msgPsnymResolutionRes_RA2Police_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_RA2Police_msgPsnymResolution& operator=(const msgPsnymResolutionRes_RA2Police_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_RA2Police_msgPsnymResolution& operator=(msgPsnymResolutionRes_RA2Police_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_RA2Police_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_RA2Police_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_RA2Police_msgPsnymResolution*>(
               &_msgPsnymResolutionRes_RA2Police_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(msgPsnymResolutionRes_RA2Police_msgPsnymResolution& a, msgPsnymResolutionRes_RA2Police_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_RA2Police_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_RA2Police_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_RA2Police_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_RA2Police_msgPsnymResolution>(nullptr);
  }

  msgPsnymResolutionRes_RA2Police_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_RA2Police_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  void MergeFrom(const msgPsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_RA2Police_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution";
  }
  protected:
  explicit msgPsnymResolutionRes_RA2Police_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymSerialNoFieldNumber = 1,
    kStrVehX509CertSerialNoFieldNumber = 2,
    kStErrInfoFieldNumber = 3,
  };
  // required string strPsnymSerialNo = 1 [default = ""];
  bool has_strpsnymserialno() const;
  private:
  bool _internal_has_strpsnymserialno() const;
  public:
  void clear_strpsnymserialno();
  const std::string& strpsnymserialno() const;
  void set_strpsnymserialno(const std::string& value);
  void set_strpsnymserialno(std::string&& value);
  void set_strpsnymserialno(const char* value);
  void set_strpsnymserialno(const char* value, size_t size);
  std::string* mutable_strpsnymserialno();
  std::string* release_strpsnymserialno();
  void set_allocated_strpsnymserialno(std::string* strpsnymserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymserialno(
      std::string* strpsnymserialno);
  private:
  const std::string& _internal_strpsnymserialno() const;
  void _internal_set_strpsnymserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymserialno();
  public:

  // required string strVehX509CertSerialNo = 2 [default = ""];
  bool has_strvehx509certserialno() const;
  private:
  bool _internal_has_strvehx509certserialno() const;
  public:
  void clear_strvehx509certserialno();
  const std::string& strvehx509certserialno() const;
  void set_strvehx509certserialno(const std::string& value);
  void set_strvehx509certserialno(std::string&& value);
  void set_strvehx509certserialno(const char* value);
  void set_strvehx509certserialno(const char* value, size_t size);
  std::string* mutable_strvehx509certserialno();
  std::string* release_strvehx509certserialno();
  void set_allocated_strvehx509certserialno(std::string* strvehx509certserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strvehx509certserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strvehx509certserialno(
      std::string* strvehx509certserialno);
  private:
  const std::string& _internal_strvehx509certserialno() const;
  void _internal_set_strvehx509certserialno(const std::string& value);
  std::string* _internal_mutable_strvehx509certserialno();
  public:

  // required .interfaces.msgError stErrInfo = 3;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strvehx509certserialno_;
  ::interfaces::msgError* sterrinfo_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionRes_RA2Police PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionRes_RA2Police) */ {
 public:
  inline msgPsnymResolutionRes_RA2Police() : msgPsnymResolutionRes_RA2Police(nullptr) {};
  virtual ~msgPsnymResolutionRes_RA2Police();

  msgPsnymResolutionRes_RA2Police(const msgPsnymResolutionRes_RA2Police& from);
  msgPsnymResolutionRes_RA2Police(msgPsnymResolutionRes_RA2Police&& from) noexcept
    : msgPsnymResolutionRes_RA2Police() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionRes_RA2Police& operator=(const msgPsnymResolutionRes_RA2Police& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionRes_RA2Police& operator=(msgPsnymResolutionRes_RA2Police&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionRes_RA2Police& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionRes_RA2Police* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionRes_RA2Police*>(
               &_msgPsnymResolutionRes_RA2Police_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(msgPsnymResolutionRes_RA2Police& a, msgPsnymResolutionRes_RA2Police& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionRes_RA2Police* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionRes_RA2Police* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionRes_RA2Police* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_RA2Police>(nullptr);
  }

  msgPsnymResolutionRes_RA2Police* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionRes_RA2Police>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionRes_RA2Police& from);
  void MergeFrom(const msgPsnymResolutionRes_RA2Police& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionRes_RA2Police* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionRes_RA2Police";
  }
  protected:
  explicit msgPsnymResolutionRes_RA2Police(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgPsnymResolutionRes_RA2Police_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 11,
    kStSignFieldNumber = 12,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 5,
    kILTCAIdRangeFieldNumber = 6,
    kIPCAIdRangeFieldNumber = 7,
    kIPoliceIdFieldNumber = 8,
    kINonceFieldNumber = 9,
    kTTimeStampFieldNumber = 10,
  };
  // repeated .interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution pstPsnymResolutionInfo = 4;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 11;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 12;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 6 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 7 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 8 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 9 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 10 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionRes_RA2Police)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymResolutionAck_Police2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymResolutionAck_Police2RA) */ {
 public:
  inline msgPsnymResolutionAck_Police2RA() : msgPsnymResolutionAck_Police2RA(nullptr) {};
  virtual ~msgPsnymResolutionAck_Police2RA();

  msgPsnymResolutionAck_Police2RA(const msgPsnymResolutionAck_Police2RA& from);
  msgPsnymResolutionAck_Police2RA(msgPsnymResolutionAck_Police2RA&& from) noexcept
    : msgPsnymResolutionAck_Police2RA() {
    *this = ::std::move(from);
  }

  inline msgPsnymResolutionAck_Police2RA& operator=(const msgPsnymResolutionAck_Police2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymResolutionAck_Police2RA& operator=(msgPsnymResolutionAck_Police2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymResolutionAck_Police2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymResolutionAck_Police2RA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymResolutionAck_Police2RA*>(
               &_msgPsnymResolutionAck_Police2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(msgPsnymResolutionAck_Police2RA& a, msgPsnymResolutionAck_Police2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymResolutionAck_Police2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymResolutionAck_Police2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymResolutionAck_Police2RA* New() const final {
    return CreateMaybeMessage<msgPsnymResolutionAck_Police2RA>(nullptr);
  }

  msgPsnymResolutionAck_Police2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymResolutionAck_Police2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymResolutionAck_Police2RA& from);
  void MergeFrom(const msgPsnymResolutionAck_Police2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymResolutionAck_Police2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymResolutionAck_Police2RA";
  }
  protected:
  explicit msgPsnymResolutionAck_Police2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionErrInfoFieldNumber = 6,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 9,
    kStSignFieldNumber = 10,
    kUiNoOfPsnymsToBeResolvedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIPoliceIdFieldNumber = 4,
    kIRAIdRangeFieldNumber = 5,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgError pstPsnymResolutionErrInfo = 6;
  int pstpsnymresolutionerrinfo_size() const;
  private:
  int _internal_pstpsnymresolutionerrinfo_size() const;
  public:
  void clear_pstpsnymresolutionerrinfo();
  ::interfaces::msgError* mutable_pstpsnymresolutionerrinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >*
      mutable_pstpsnymresolutionerrinfo();
  private:
  const ::interfaces::msgError& _internal_pstpsnymresolutionerrinfo(int index) const;
  ::interfaces::msgError* _internal_add_pstpsnymresolutionerrinfo();
  public:
  const ::interfaces::msgError& pstpsnymresolutionerrinfo(int index) const;
  ::interfaces::msgError* add_pstpsnymresolutionerrinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >&
      pstpsnymresolutionerrinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 9;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
  bool has_uinoofpsnymstoberesolved() const;
  private:
  bool _internal_has_uinoofpsnymstoberesolved() const;
  public:
  void clear_uinoofpsnymstoberesolved();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved() const;
  void set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofpsnymstoberesolved() const;
  void _internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 4 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymResolutionAck_Police2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError > pstpsnymresolutionerrinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofpsnymstoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsReq_Police2RA_msgBannedTickets PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets) */ {
 public:
  inline msgBanTicketsReq_Police2RA_msgBannedTickets() : msgBanTicketsReq_Police2RA_msgBannedTickets(nullptr) {};
  virtual ~msgBanTicketsReq_Police2RA_msgBannedTickets();

  msgBanTicketsReq_Police2RA_msgBannedTickets(const msgBanTicketsReq_Police2RA_msgBannedTickets& from);
  msgBanTicketsReq_Police2RA_msgBannedTickets(msgBanTicketsReq_Police2RA_msgBannedTickets&& from) noexcept
    : msgBanTicketsReq_Police2RA_msgBannedTickets() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsReq_Police2RA_msgBannedTickets& operator=(const msgBanTicketsReq_Police2RA_msgBannedTickets& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsReq_Police2RA_msgBannedTickets& operator=(msgBanTicketsReq_Police2RA_msgBannedTickets&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsReq_Police2RA_msgBannedTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsReq_Police2RA_msgBannedTickets* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsReq_Police2RA_msgBannedTickets*>(
               &_msgBanTicketsReq_Police2RA_msgBannedTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(msgBanTicketsReq_Police2RA_msgBannedTickets& a, msgBanTicketsReq_Police2RA_msgBannedTickets& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsReq_Police2RA_msgBannedTickets* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsReq_Police2RA_msgBannedTickets* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsReq_Police2RA_msgBannedTickets* New() const final {
    return CreateMaybeMessage<msgBanTicketsReq_Police2RA_msgBannedTickets>(nullptr);
  }

  msgBanTicketsReq_Police2RA_msgBannedTickets* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsReq_Police2RA_msgBannedTickets>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsReq_Police2RA_msgBannedTickets& from);
  void MergeFrom(const msgBanTicketsReq_Police2RA_msgBannedTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsReq_Police2RA_msgBannedTickets* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets";
  }
  protected:
  explicit msgBanTicketsReq_Police2RA_msgBannedTickets(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrSerialNoFieldNumber = 1,
    kStrTicketFieldNumber = 2,
  };
  // required string strSerialNo = 1 [default = ""];
  bool has_strserialno() const;
  private:
  bool _internal_has_strserialno() const;
  public:
  void clear_strserialno();
  const std::string& strserialno() const;
  void set_strserialno(const std::string& value);
  void set_strserialno(std::string&& value);
  void set_strserialno(const char* value);
  void set_strserialno(const char* value, size_t size);
  std::string* mutable_strserialno();
  std::string* release_strserialno();
  void set_allocated_strserialno(std::string* strserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strserialno(
      std::string* strserialno);
  private:
  const std::string& _internal_strserialno() const;
  void _internal_set_strserialno(const std::string& value);
  std::string* _internal_mutable_strserialno();
  public:

  // required string strTicket = 2 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsReq_Police2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsReq_Police2RA) */ {
 public:
  inline msgBanTicketsReq_Police2RA() : msgBanTicketsReq_Police2RA(nullptr) {};
  virtual ~msgBanTicketsReq_Police2RA();

  msgBanTicketsReq_Police2RA(const msgBanTicketsReq_Police2RA& from);
  msgBanTicketsReq_Police2RA(msgBanTicketsReq_Police2RA&& from) noexcept
    : msgBanTicketsReq_Police2RA() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsReq_Police2RA& operator=(const msgBanTicketsReq_Police2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsReq_Police2RA& operator=(msgBanTicketsReq_Police2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsReq_Police2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsReq_Police2RA* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsReq_Police2RA*>(
               &_msgBanTicketsReq_Police2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(msgBanTicketsReq_Police2RA& a, msgBanTicketsReq_Police2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsReq_Police2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsReq_Police2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsReq_Police2RA* New() const final {
    return CreateMaybeMessage<msgBanTicketsReq_Police2RA>(nullptr);
  }

  msgBanTicketsReq_Police2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsReq_Police2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsReq_Police2RA& from);
  void MergeFrom(const msgBanTicketsReq_Police2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsReq_Police2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsReq_Police2RA";
  }
  protected:
  explicit msgBanTicketsReq_Police2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgBanTicketsReq_Police2RA_msgBannedTickets msgBannedTickets;

  // accessors -------------------------------------------------------

  enum : int {
    kPstBannedTicketsInfoFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 10,
    kChPolicyIdFieldNumber = 3,
    kUiNoOfTicketsToBeBannedFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kIPoliceIdFieldNumber = 6,
    kIRAIdRangeFieldNumber = 7,
    kINonceFieldNumber = 8,
    kTTimeStampFieldNumber = 9,
  };
  // repeated .interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets pstBannedTicketsInfo = 5;
  int pstbannedticketsinfo_size() const;
  private:
  int _internal_pstbannedticketsinfo_size() const;
  public:
  void clear_pstbannedticketsinfo();
  ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* mutable_pstbannedticketsinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets >*
      mutable_pstbannedticketsinfo();
  private:
  const ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets& _internal_pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* _internal_add_pstbannedticketsinfo();
  public:
  const ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets& pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* add_pstbannedticketsinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets >&
      pstbannedticketsinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 chPolicyId = 3 [default = 0];
  bool has_chpolicyid() const;
  private:
  bool _internal_has_chpolicyid() const;
  public:
  void clear_chpolicyid();
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid() const;
  void set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chpolicyid() const;
  void _internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfTicketsToBeBanned = 4 [default = 0];
  bool has_uinoofticketstobebanned() const;
  private:
  bool _internal_has_uinoofticketstobebanned() const;
  public:
  void clear_uinoofticketstobebanned();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned() const;
  void set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofticketstobebanned() const;
  void _internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 6 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 7 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsReq_Police2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets > pstbannedticketsinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsReq_RA2PCA_msgBannedTickets PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets) */ {
 public:
  inline msgBanTicketsReq_RA2PCA_msgBannedTickets() : msgBanTicketsReq_RA2PCA_msgBannedTickets(nullptr) {};
  virtual ~msgBanTicketsReq_RA2PCA_msgBannedTickets();

  msgBanTicketsReq_RA2PCA_msgBannedTickets(const msgBanTicketsReq_RA2PCA_msgBannedTickets& from);
  msgBanTicketsReq_RA2PCA_msgBannedTickets(msgBanTicketsReq_RA2PCA_msgBannedTickets&& from) noexcept
    : msgBanTicketsReq_RA2PCA_msgBannedTickets() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsReq_RA2PCA_msgBannedTickets& operator=(const msgBanTicketsReq_RA2PCA_msgBannedTickets& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsReq_RA2PCA_msgBannedTickets& operator=(msgBanTicketsReq_RA2PCA_msgBannedTickets&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsReq_RA2PCA_msgBannedTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsReq_RA2PCA_msgBannedTickets* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsReq_RA2PCA_msgBannedTickets*>(
               &_msgBanTicketsReq_RA2PCA_msgBannedTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(msgBanTicketsReq_RA2PCA_msgBannedTickets& a, msgBanTicketsReq_RA2PCA_msgBannedTickets& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsReq_RA2PCA_msgBannedTickets* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsReq_RA2PCA_msgBannedTickets* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsReq_RA2PCA_msgBannedTickets* New() const final {
    return CreateMaybeMessage<msgBanTicketsReq_RA2PCA_msgBannedTickets>(nullptr);
  }

  msgBanTicketsReq_RA2PCA_msgBannedTickets* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsReq_RA2PCA_msgBannedTickets>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsReq_RA2PCA_msgBannedTickets& from);
  void MergeFrom(const msgBanTicketsReq_RA2PCA_msgBannedTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsReq_RA2PCA_msgBannedTickets* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets";
  }
  protected:
  explicit msgBanTicketsReq_RA2PCA_msgBannedTickets(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrSerialNoFieldNumber = 1,
    kStrTicketFieldNumber = 2,
  };
  // required string strSerialNo = 1 [default = ""];
  bool has_strserialno() const;
  private:
  bool _internal_has_strserialno() const;
  public:
  void clear_strserialno();
  const std::string& strserialno() const;
  void set_strserialno(const std::string& value);
  void set_strserialno(std::string&& value);
  void set_strserialno(const char* value);
  void set_strserialno(const char* value, size_t size);
  std::string* mutable_strserialno();
  std::string* release_strserialno();
  void set_allocated_strserialno(std::string* strserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strserialno(
      std::string* strserialno);
  private:
  const std::string& _internal_strserialno() const;
  void _internal_set_strserialno(const std::string& value);
  std::string* _internal_mutable_strserialno();
  public:

  // required string strTicket = 2 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsReq_RA2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsReq_RA2PCA) */ {
 public:
  inline msgBanTicketsReq_RA2PCA() : msgBanTicketsReq_RA2PCA(nullptr) {};
  virtual ~msgBanTicketsReq_RA2PCA();

  msgBanTicketsReq_RA2PCA(const msgBanTicketsReq_RA2PCA& from);
  msgBanTicketsReq_RA2PCA(msgBanTicketsReq_RA2PCA&& from) noexcept
    : msgBanTicketsReq_RA2PCA() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsReq_RA2PCA& operator=(const msgBanTicketsReq_RA2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsReq_RA2PCA& operator=(msgBanTicketsReq_RA2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsReq_RA2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsReq_RA2PCA* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsReq_RA2PCA*>(
               &_msgBanTicketsReq_RA2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(msgBanTicketsReq_RA2PCA& a, msgBanTicketsReq_RA2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsReq_RA2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsReq_RA2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsReq_RA2PCA* New() const final {
    return CreateMaybeMessage<msgBanTicketsReq_RA2PCA>(nullptr);
  }

  msgBanTicketsReq_RA2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsReq_RA2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsReq_RA2PCA& from);
  void MergeFrom(const msgBanTicketsReq_RA2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsReq_RA2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsReq_RA2PCA";
  }
  protected:
  explicit msgBanTicketsReq_RA2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgBanTicketsReq_RA2PCA_msgBannedTickets msgBannedTickets;

  // accessors -------------------------------------------------------

  enum : int {
    kPstBannedTicketsInfoFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 10,
    kChPolicyIdFieldNumber = 3,
    kUiNoOfTicketsToBeBannedFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 6,
    kILTCAIdRangeFieldNumber = 7,
    kINonceFieldNumber = 8,
    kTTimeStampFieldNumber = 9,
  };
  // repeated .interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets pstBannedTicketsInfo = 5;
  int pstbannedticketsinfo_size() const;
  private:
  int _internal_pstbannedticketsinfo_size() const;
  public:
  void clear_pstbannedticketsinfo();
  ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* mutable_pstbannedticketsinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets >*
      mutable_pstbannedticketsinfo();
  private:
  const ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets& _internal_pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* _internal_add_pstbannedticketsinfo();
  public:
  const ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets& pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* add_pstbannedticketsinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets >&
      pstbannedticketsinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 chPolicyId = 3 [default = 0];
  bool has_chpolicyid() const;
  private:
  bool _internal_has_chpolicyid() const;
  public:
  void clear_chpolicyid();
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid() const;
  void set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chpolicyid() const;
  void _internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfTicketsToBeBanned = 4 [default = 0];
  bool has_uinoofticketstobebanned() const;
  private:
  bool _internal_has_uinoofticketstobebanned() const;
  public:
  void clear_uinoofticketstobebanned();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned() const;
  void set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofticketstobebanned() const;
  void _internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 6 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 7 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsReq_RA2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets > pstbannedticketsinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chpolicyid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsRes_PCA2RA_msgBannedTickets PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets) */ {
 public:
  inline msgBanTicketsRes_PCA2RA_msgBannedTickets() : msgBanTicketsRes_PCA2RA_msgBannedTickets(nullptr) {};
  virtual ~msgBanTicketsRes_PCA2RA_msgBannedTickets();

  msgBanTicketsRes_PCA2RA_msgBannedTickets(const msgBanTicketsRes_PCA2RA_msgBannedTickets& from);
  msgBanTicketsRes_PCA2RA_msgBannedTickets(msgBanTicketsRes_PCA2RA_msgBannedTickets&& from) noexcept
    : msgBanTicketsRes_PCA2RA_msgBannedTickets() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsRes_PCA2RA_msgBannedTickets& operator=(const msgBanTicketsRes_PCA2RA_msgBannedTickets& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsRes_PCA2RA_msgBannedTickets& operator=(msgBanTicketsRes_PCA2RA_msgBannedTickets&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsRes_PCA2RA_msgBannedTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsRes_PCA2RA_msgBannedTickets* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsRes_PCA2RA_msgBannedTickets*>(
               &_msgBanTicketsRes_PCA2RA_msgBannedTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(msgBanTicketsRes_PCA2RA_msgBannedTickets& a, msgBanTicketsRes_PCA2RA_msgBannedTickets& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsRes_PCA2RA_msgBannedTickets* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsRes_PCA2RA_msgBannedTickets* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsRes_PCA2RA_msgBannedTickets* New() const final {
    return CreateMaybeMessage<msgBanTicketsRes_PCA2RA_msgBannedTickets>(nullptr);
  }

  msgBanTicketsRes_PCA2RA_msgBannedTickets* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsRes_PCA2RA_msgBannedTickets>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsRes_PCA2RA_msgBannedTickets& from);
  void MergeFrom(const msgBanTicketsRes_PCA2RA_msgBannedTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsRes_PCA2RA_msgBannedTickets* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets";
  }
  protected:
  explicit msgBanTicketsRes_PCA2RA_msgBannedTickets(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStErrInfoFieldNumber = 2,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required .interfaces.msgError stErrInfo = 2;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::interfaces::msgError* sterrinfo_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsRes_PCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsRes_PCA2RA) */ {
 public:
  inline msgBanTicketsRes_PCA2RA() : msgBanTicketsRes_PCA2RA(nullptr) {};
  virtual ~msgBanTicketsRes_PCA2RA();

  msgBanTicketsRes_PCA2RA(const msgBanTicketsRes_PCA2RA& from);
  msgBanTicketsRes_PCA2RA(msgBanTicketsRes_PCA2RA&& from) noexcept
    : msgBanTicketsRes_PCA2RA() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsRes_PCA2RA& operator=(const msgBanTicketsRes_PCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsRes_PCA2RA& operator=(msgBanTicketsRes_PCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsRes_PCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsRes_PCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsRes_PCA2RA*>(
               &_msgBanTicketsRes_PCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(msgBanTicketsRes_PCA2RA& a, msgBanTicketsRes_PCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsRes_PCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsRes_PCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsRes_PCA2RA* New() const final {
    return CreateMaybeMessage<msgBanTicketsRes_PCA2RA>(nullptr);
  }

  msgBanTicketsRes_PCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsRes_PCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsRes_PCA2RA& from);
  void MergeFrom(const msgBanTicketsRes_PCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsRes_PCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsRes_PCA2RA";
  }
  protected:
  explicit msgBanTicketsRes_PCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgBanTicketsRes_PCA2RA_msgBannedTickets msgBannedTickets;

  // accessors -------------------------------------------------------

  enum : int {
    kPstBannedTicketsInfoFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 10,
    kStSignFieldNumber = 11,
    kUiNoOfTicketsToBeBannedFieldNumber = 3,
    kUiNoOfSuccessfullyBannedTicketsFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 6,
    kILTCAIdRangeFieldNumber = 7,
    kINonceFieldNumber = 8,
    kTTimeStampFieldNumber = 9,
  };
  // repeated .interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets pstBannedTicketsInfo = 5;
  int pstbannedticketsinfo_size() const;
  private:
  int _internal_pstbannedticketsinfo_size() const;
  public:
  void clear_pstbannedticketsinfo();
  ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* mutable_pstbannedticketsinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets >*
      mutable_pstbannedticketsinfo();
  private:
  const ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets& _internal_pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* _internal_add_pstbannedticketsinfo();
  public:
  const ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets& pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* add_pstbannedticketsinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets >&
      pstbannedticketsinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 10;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 11;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
  bool has_uinoofticketstobebanned() const;
  private:
  bool _internal_has_uinoofticketstobebanned() const;
  public:
  void clear_uinoofticketstobebanned();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned() const;
  void set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofticketstobebanned() const;
  void _internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyBannedTickets = 4 [default = 0];
  bool has_uinoofsuccessfullybannedtickets() const;
  private:
  bool _internal_has_uinoofsuccessfullybannedtickets() const;
  public:
  void clear_uinoofsuccessfullybannedtickets();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullybannedtickets() const;
  void set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullybannedtickets() const;
  void _internal_set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 6 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 7 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 8 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 9 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsRes_PCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets > pstbannedticketsinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullybannedtickets_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsRes_RA2Police_msgBannedTickets PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets) */ {
 public:
  inline msgBanTicketsRes_RA2Police_msgBannedTickets() : msgBanTicketsRes_RA2Police_msgBannedTickets(nullptr) {};
  virtual ~msgBanTicketsRes_RA2Police_msgBannedTickets();

  msgBanTicketsRes_RA2Police_msgBannedTickets(const msgBanTicketsRes_RA2Police_msgBannedTickets& from);
  msgBanTicketsRes_RA2Police_msgBannedTickets(msgBanTicketsRes_RA2Police_msgBannedTickets&& from) noexcept
    : msgBanTicketsRes_RA2Police_msgBannedTickets() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsRes_RA2Police_msgBannedTickets& operator=(const msgBanTicketsRes_RA2Police_msgBannedTickets& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsRes_RA2Police_msgBannedTickets& operator=(msgBanTicketsRes_RA2Police_msgBannedTickets&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsRes_RA2Police_msgBannedTickets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsRes_RA2Police_msgBannedTickets* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsRes_RA2Police_msgBannedTickets*>(
               &_msgBanTicketsRes_RA2Police_msgBannedTickets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(msgBanTicketsRes_RA2Police_msgBannedTickets& a, msgBanTicketsRes_RA2Police_msgBannedTickets& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsRes_RA2Police_msgBannedTickets* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsRes_RA2Police_msgBannedTickets* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsRes_RA2Police_msgBannedTickets* New() const final {
    return CreateMaybeMessage<msgBanTicketsRes_RA2Police_msgBannedTickets>(nullptr);
  }

  msgBanTicketsRes_RA2Police_msgBannedTickets* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsRes_RA2Police_msgBannedTickets>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsRes_RA2Police_msgBannedTickets& from);
  void MergeFrom(const msgBanTicketsRes_RA2Police_msgBannedTickets& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsRes_RA2Police_msgBannedTickets* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets";
  }
  protected:
  explicit msgBanTicketsRes_RA2Police_msgBannedTickets(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStrTicketFieldNumber = 3,
    kStErrInfoFieldNumber = 4,
    kITicketLenFieldNumber = 2,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicket = 3 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // required .interfaces.msgError stErrInfo = 4;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // required int32 iTicketLen = 2 [default = -1];
  bool has_iticketlen() const;
  private:
  bool _internal_has_iticketlen() const;
  public:
  void clear_iticketlen();
  ::PROTOBUF_NAMESPACE_ID::int32 iticketlen() const;
  void set_iticketlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iticketlen() const;
  void _internal_set_iticketlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  ::interfaces::msgError* sterrinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 iticketlen_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsRes_RA2Police PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsRes_RA2Police) */ {
 public:
  inline msgBanTicketsRes_RA2Police() : msgBanTicketsRes_RA2Police(nullptr) {};
  virtual ~msgBanTicketsRes_RA2Police();

  msgBanTicketsRes_RA2Police(const msgBanTicketsRes_RA2Police& from);
  msgBanTicketsRes_RA2Police(msgBanTicketsRes_RA2Police&& from) noexcept
    : msgBanTicketsRes_RA2Police() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsRes_RA2Police& operator=(const msgBanTicketsRes_RA2Police& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsRes_RA2Police& operator=(msgBanTicketsRes_RA2Police&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsRes_RA2Police& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsRes_RA2Police* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsRes_RA2Police*>(
               &_msgBanTicketsRes_RA2Police_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(msgBanTicketsRes_RA2Police& a, msgBanTicketsRes_RA2Police& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsRes_RA2Police* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsRes_RA2Police* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsRes_RA2Police* New() const final {
    return CreateMaybeMessage<msgBanTicketsRes_RA2Police>(nullptr);
  }

  msgBanTicketsRes_RA2Police* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsRes_RA2Police>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsRes_RA2Police& from);
  void MergeFrom(const msgBanTicketsRes_RA2Police& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsRes_RA2Police* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsRes_RA2Police";
  }
  protected:
  explicit msgBanTicketsRes_RA2Police(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgBanTicketsRes_RA2Police_msgBannedTickets msgBannedTickets;

  // accessors -------------------------------------------------------

  enum : int {
    kPstBannedTicketsInfoFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 12,
    kStSignFieldNumber = 13,
    kUiNoOfTicketsToBeBannedFieldNumber = 3,
    kUiNoOfSuccessfullyBannedTicketsFieldNumber = 4,
    kIReqTypeFieldNumber = 1,
    kIRAIdRangeFieldNumber = 6,
    kILTCAIdRangeFieldNumber = 7,
    kIPCAIdRangeFieldNumber = 8,
    kIPoliceIdFieldNumber = 9,
    kINonceFieldNumber = 10,
    kTTimeStampFieldNumber = 11,
  };
  // repeated .interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets pstBannedTicketsInfo = 5;
  int pstbannedticketsinfo_size() const;
  private:
  int _internal_pstbannedticketsinfo_size() const;
  public:
  void clear_pstbannedticketsinfo();
  ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* mutable_pstbannedticketsinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets >*
      mutable_pstbannedticketsinfo();
  private:
  const ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets& _internal_pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* _internal_add_pstbannedticketsinfo();
  public:
  const ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets& pstbannedticketsinfo(int index) const;
  ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* add_pstbannedticketsinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets >&
      pstbannedticketsinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 12;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 13;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
  bool has_uinoofticketstobebanned() const;
  private:
  bool _internal_has_uinoofticketstobebanned() const;
  public:
  void clear_uinoofticketstobebanned();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned() const;
  void set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofticketstobebanned() const;
  void _internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiNoOfSuccessfullyBannedTickets = 4 [default = 0];
  bool has_uinoofsuccessfullybannedtickets() const;
  private:
  bool _internal_has_uinoofsuccessfullybannedtickets() const;
  public:
  void clear_uinoofsuccessfullybannedtickets();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullybannedtickets() const;
  void set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofsuccessfullybannedtickets() const;
  void _internal_set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 6 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAIdRange = 7 [default = -1];
  bool has_iltcaidrange() const;
  private:
  bool _internal_has_iltcaidrange() const;
  public:
  void clear_iltcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange() const;
  void set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaidrange() const;
  void _internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 8 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 9 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 10 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 11 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsRes_RA2Police)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets > pstbannedticketsinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofsuccessfullybannedtickets_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgBanTicketsAck_Police2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgBanTicketsAck_Police2RA) */ {
 public:
  inline msgBanTicketsAck_Police2RA() : msgBanTicketsAck_Police2RA(nullptr) {};
  virtual ~msgBanTicketsAck_Police2RA();

  msgBanTicketsAck_Police2RA(const msgBanTicketsAck_Police2RA& from);
  msgBanTicketsAck_Police2RA(msgBanTicketsAck_Police2RA&& from) noexcept
    : msgBanTicketsAck_Police2RA() {
    *this = ::std::move(from);
  }

  inline msgBanTicketsAck_Police2RA& operator=(const msgBanTicketsAck_Police2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgBanTicketsAck_Police2RA& operator=(msgBanTicketsAck_Police2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgBanTicketsAck_Police2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgBanTicketsAck_Police2RA* internal_default_instance() {
    return reinterpret_cast<const msgBanTicketsAck_Police2RA*>(
               &_msgBanTicketsAck_Police2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(msgBanTicketsAck_Police2RA& a, msgBanTicketsAck_Police2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgBanTicketsAck_Police2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgBanTicketsAck_Police2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgBanTicketsAck_Police2RA* New() const final {
    return CreateMaybeMessage<msgBanTicketsAck_Police2RA>(nullptr);
  }

  msgBanTicketsAck_Police2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgBanTicketsAck_Police2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgBanTicketsAck_Police2RA& from);
  void MergeFrom(const msgBanTicketsAck_Police2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgBanTicketsAck_Police2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgBanTicketsAck_Police2RA";
  }
  protected:
  explicit msgBanTicketsAck_Police2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketErrInfoFieldNumber = 6,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 9,
    kStSignFieldNumber = 10,
    kUiNoOfTicketsToBeBannedFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kIPoliceIdFieldNumber = 4,
    kIRAIdRangeFieldNumber = 5,
    kINonceFieldNumber = 7,
    kTTimeStampFieldNumber = 8,
  };
  // repeated .interfaces.msgError pstTicketErrInfo = 6;
  int pstticketerrinfo_size() const;
  private:
  int _internal_pstticketerrinfo_size() const;
  public:
  void clear_pstticketerrinfo();
  ::interfaces::msgError* mutable_pstticketerrinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >*
      mutable_pstticketerrinfo();
  private:
  const ::interfaces::msgError& _internal_pstticketerrinfo(int index) const;
  ::interfaces::msgError* _internal_add_pstticketerrinfo();
  public:
  const ::interfaces::msgError& pstticketerrinfo(int index) const;
  ::interfaces::msgError* add_pstticketerrinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >&
      pstticketerrinfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 9;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 10;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
  bool has_uinoofticketstobebanned() const;
  private:
  bool _internal_has_uinoofticketstobebanned() const;
  public:
  void clear_uinoofticketstobebanned();
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned() const;
  void set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uinoofticketstobebanned() const;
  void _internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 4 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAIdRange = 5 [default = -1];
  bool has_iraidrange() const;
  private:
  bool _internal_has_iraidrange() const;
  public:
  void clear_iraidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange() const;
  void set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraidrange() const;
  void _internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 7 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 8 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgBanTicketsAck_Police2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError > pstticketerrinfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uinoofticketstobebanned_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVehicleConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVehicleConfig) */ {
 public:
  inline msgVehicleConfig() : msgVehicleConfig(nullptr) {};
  virtual ~msgVehicleConfig();

  msgVehicleConfig(const msgVehicleConfig& from);
  msgVehicleConfig(msgVehicleConfig&& from) noexcept
    : msgVehicleConfig() {
    *this = ::std::move(from);
  }

  inline msgVehicleConfig& operator=(const msgVehicleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVehicleConfig& operator=(msgVehicleConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVehicleConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVehicleConfig* internal_default_instance() {
    return reinterpret_cast<const msgVehicleConfig*>(
               &_msgVehicleConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(msgVehicleConfig& a, msgVehicleConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVehicleConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVehicleConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVehicleConfig* New() const final {
    return CreateMaybeMessage<msgVehicleConfig>(nullptr);
  }

  msgVehicleConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVehicleConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVehicleConfig& from);
  void MergeFrom(const msgVehicleConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVehicleConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVehicleConfig";
  }
  protected:
  explicit msgVehicleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrLTCAServerURLFieldNumber = 1,
    kStrPCAServerURLFieldNumber = 2,
    kStrRAServerURLFieldNumber = 3,
    kStrLTCAMethodNameFieldNumber = 4,
    kStrPCAMethodNameFieldNumber = 5,
    kStrRAMethodNameFieldNumber = 6,
    kLMaxXMLRPCLimitBufferSizeFieldNumber = 7,
    kFVersionFieldNumber = 8,
  };
  // required string strLTCAServerURL = 1 [default = ""];
  bool has_strltcaserverurl() const;
  private:
  bool _internal_has_strltcaserverurl() const;
  public:
  void clear_strltcaserverurl();
  const std::string& strltcaserverurl() const;
  void set_strltcaserverurl(const std::string& value);
  void set_strltcaserverurl(std::string&& value);
  void set_strltcaserverurl(const char* value);
  void set_strltcaserverurl(const char* value, size_t size);
  std::string* mutable_strltcaserverurl();
  std::string* release_strltcaserverurl();
  void set_allocated_strltcaserverurl(std::string* strltcaserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strltcaserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strltcaserverurl(
      std::string* strltcaserverurl);
  private:
  const std::string& _internal_strltcaserverurl() const;
  void _internal_set_strltcaserverurl(const std::string& value);
  std::string* _internal_mutable_strltcaserverurl();
  public:

  // required string strPCAServerURL = 2 [default = ""];
  bool has_strpcaserverurl() const;
  private:
  bool _internal_has_strpcaserverurl() const;
  public:
  void clear_strpcaserverurl();
  const std::string& strpcaserverurl() const;
  void set_strpcaserverurl(const std::string& value);
  void set_strpcaserverurl(std::string&& value);
  void set_strpcaserverurl(const char* value);
  void set_strpcaserverurl(const char* value, size_t size);
  std::string* mutable_strpcaserverurl();
  std::string* release_strpcaserverurl();
  void set_allocated_strpcaserverurl(std::string* strpcaserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpcaserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpcaserverurl(
      std::string* strpcaserverurl);
  private:
  const std::string& _internal_strpcaserverurl() const;
  void _internal_set_strpcaserverurl(const std::string& value);
  std::string* _internal_mutable_strpcaserverurl();
  public:

  // required string strRAServerURL = 3 [default = ""];
  bool has_strraserverurl() const;
  private:
  bool _internal_has_strraserverurl() const;
  public:
  void clear_strraserverurl();
  const std::string& strraserverurl() const;
  void set_strraserverurl(const std::string& value);
  void set_strraserverurl(std::string&& value);
  void set_strraserverurl(const char* value);
  void set_strraserverurl(const char* value, size_t size);
  std::string* mutable_strraserverurl();
  std::string* release_strraserverurl();
  void set_allocated_strraserverurl(std::string* strraserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strraserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strraserverurl(
      std::string* strraserverurl);
  private:
  const std::string& _internal_strraserverurl() const;
  void _internal_set_strraserverurl(const std::string& value);
  std::string* _internal_mutable_strraserverurl();
  public:

  // required string strLTCAMethodName = 4 [default = ""];
  bool has_strltcamethodname() const;
  private:
  bool _internal_has_strltcamethodname() const;
  public:
  void clear_strltcamethodname();
  const std::string& strltcamethodname() const;
  void set_strltcamethodname(const std::string& value);
  void set_strltcamethodname(std::string&& value);
  void set_strltcamethodname(const char* value);
  void set_strltcamethodname(const char* value, size_t size);
  std::string* mutable_strltcamethodname();
  std::string* release_strltcamethodname();
  void set_allocated_strltcamethodname(std::string* strltcamethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strltcamethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strltcamethodname(
      std::string* strltcamethodname);
  private:
  const std::string& _internal_strltcamethodname() const;
  void _internal_set_strltcamethodname(const std::string& value);
  std::string* _internal_mutable_strltcamethodname();
  public:

  // required string strPCAMethodName = 5 [default = ""];
  bool has_strpcamethodname() const;
  private:
  bool _internal_has_strpcamethodname() const;
  public:
  void clear_strpcamethodname();
  const std::string& strpcamethodname() const;
  void set_strpcamethodname(const std::string& value);
  void set_strpcamethodname(std::string&& value);
  void set_strpcamethodname(const char* value);
  void set_strpcamethodname(const char* value, size_t size);
  std::string* mutable_strpcamethodname();
  std::string* release_strpcamethodname();
  void set_allocated_strpcamethodname(std::string* strpcamethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpcamethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpcamethodname(
      std::string* strpcamethodname);
  private:
  const std::string& _internal_strpcamethodname() const;
  void _internal_set_strpcamethodname(const std::string& value);
  std::string* _internal_mutable_strpcamethodname();
  public:

  // required string strRAMethodName = 6 [default = ""];
  bool has_strramethodname() const;
  private:
  bool _internal_has_strramethodname() const;
  public:
  void clear_strramethodname();
  const std::string& strramethodname() const;
  void set_strramethodname(const std::string& value);
  void set_strramethodname(std::string&& value);
  void set_strramethodname(const char* value);
  void set_strramethodname(const char* value, size_t size);
  std::string* mutable_strramethodname();
  std::string* release_strramethodname();
  void set_allocated_strramethodname(std::string* strramethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strramethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strramethodname(
      std::string* strramethodname);
  private:
  const std::string& _internal_strramethodname() const;
  void _internal_set_strramethodname(const std::string& value);
  std::string* _internal_mutable_strramethodname();
  public:

  // required uint64 lMaxXMLRPCLimitBufferSize = 7 [default = 0];
  bool has_lmaxxmlrpclimitbuffersize() const;
  private:
  bool _internal_has_lmaxxmlrpclimitbuffersize() const;
  public:
  void clear_lmaxxmlrpclimitbuffersize();
  ::PROTOBUF_NAMESPACE_ID::uint64 lmaxxmlrpclimitbuffersize() const;
  void set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lmaxxmlrpclimitbuffersize() const;
  void _internal_set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required float fVersion = 8 [default = -1];
  bool has_fversion() const;
  private:
  bool _internal_has_fversion() const;
  public:
  void clear_fversion();
  float fversion() const;
  void set_fversion(float value);
  private:
  float _internal_fversion() const;
  void _internal_set_fversion(float value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVehicleConfig)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strltcaserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpcaserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strraserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strltcamethodname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpcamethodname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strramethodname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lmaxxmlrpclimitbuffersize_;
  float fversion_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPoliceConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPoliceConfig) */ {
 public:
  inline msgPoliceConfig() : msgPoliceConfig(nullptr) {};
  virtual ~msgPoliceConfig();

  msgPoliceConfig(const msgPoliceConfig& from);
  msgPoliceConfig(msgPoliceConfig&& from) noexcept
    : msgPoliceConfig() {
    *this = ::std::move(from);
  }

  inline msgPoliceConfig& operator=(const msgPoliceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPoliceConfig& operator=(msgPoliceConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPoliceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPoliceConfig* internal_default_instance() {
    return reinterpret_cast<const msgPoliceConfig*>(
               &_msgPoliceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(msgPoliceConfig& a, msgPoliceConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPoliceConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPoliceConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPoliceConfig* New() const final {
    return CreateMaybeMessage<msgPoliceConfig>(nullptr);
  }

  msgPoliceConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPoliceConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPoliceConfig& from);
  void MergeFrom(const msgPoliceConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPoliceConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPoliceConfig";
  }
  protected:
  explicit msgPoliceConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrLTCAServerURLFieldNumber = 1,
    kStrPCAServerURLFieldNumber = 2,
    kStrRAServerURLFieldNumber = 3,
    kStrLTCAMethodNameFieldNumber = 4,
    kStrPCAMethodNameFieldNumber = 5,
    kStrRAMethodNameFieldNumber = 6,
    kLMaxXMLRPCLimitBufferSizeFieldNumber = 7,
    kFVersionFieldNumber = 8,
  };
  // required string strLTCAServerURL = 1 [default = ""];
  bool has_strltcaserverurl() const;
  private:
  bool _internal_has_strltcaserverurl() const;
  public:
  void clear_strltcaserverurl();
  const std::string& strltcaserverurl() const;
  void set_strltcaserverurl(const std::string& value);
  void set_strltcaserverurl(std::string&& value);
  void set_strltcaserverurl(const char* value);
  void set_strltcaserverurl(const char* value, size_t size);
  std::string* mutable_strltcaserverurl();
  std::string* release_strltcaserverurl();
  void set_allocated_strltcaserverurl(std::string* strltcaserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strltcaserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strltcaserverurl(
      std::string* strltcaserverurl);
  private:
  const std::string& _internal_strltcaserverurl() const;
  void _internal_set_strltcaserverurl(const std::string& value);
  std::string* _internal_mutable_strltcaserverurl();
  public:

  // required string strPCAServerURL = 2 [default = ""];
  bool has_strpcaserverurl() const;
  private:
  bool _internal_has_strpcaserverurl() const;
  public:
  void clear_strpcaserverurl();
  const std::string& strpcaserverurl() const;
  void set_strpcaserverurl(const std::string& value);
  void set_strpcaserverurl(std::string&& value);
  void set_strpcaserverurl(const char* value);
  void set_strpcaserverurl(const char* value, size_t size);
  std::string* mutable_strpcaserverurl();
  std::string* release_strpcaserverurl();
  void set_allocated_strpcaserverurl(std::string* strpcaserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpcaserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpcaserverurl(
      std::string* strpcaserverurl);
  private:
  const std::string& _internal_strpcaserverurl() const;
  void _internal_set_strpcaserverurl(const std::string& value);
  std::string* _internal_mutable_strpcaserverurl();
  public:

  // required string strRAServerURL = 3 [default = ""];
  bool has_strraserverurl() const;
  private:
  bool _internal_has_strraserverurl() const;
  public:
  void clear_strraserverurl();
  const std::string& strraserverurl() const;
  void set_strraserverurl(const std::string& value);
  void set_strraserverurl(std::string&& value);
  void set_strraserverurl(const char* value);
  void set_strraserverurl(const char* value, size_t size);
  std::string* mutable_strraserverurl();
  std::string* release_strraserverurl();
  void set_allocated_strraserverurl(std::string* strraserverurl);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strraserverurl();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strraserverurl(
      std::string* strraserverurl);
  private:
  const std::string& _internal_strraserverurl() const;
  void _internal_set_strraserverurl(const std::string& value);
  std::string* _internal_mutable_strraserverurl();
  public:

  // required string strLTCAMethodName = 4 [default = ""];
  bool has_strltcamethodname() const;
  private:
  bool _internal_has_strltcamethodname() const;
  public:
  void clear_strltcamethodname();
  const std::string& strltcamethodname() const;
  void set_strltcamethodname(const std::string& value);
  void set_strltcamethodname(std::string&& value);
  void set_strltcamethodname(const char* value);
  void set_strltcamethodname(const char* value, size_t size);
  std::string* mutable_strltcamethodname();
  std::string* release_strltcamethodname();
  void set_allocated_strltcamethodname(std::string* strltcamethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strltcamethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strltcamethodname(
      std::string* strltcamethodname);
  private:
  const std::string& _internal_strltcamethodname() const;
  void _internal_set_strltcamethodname(const std::string& value);
  std::string* _internal_mutable_strltcamethodname();
  public:

  // required string strPCAMethodName = 5 [default = ""];
  bool has_strpcamethodname() const;
  private:
  bool _internal_has_strpcamethodname() const;
  public:
  void clear_strpcamethodname();
  const std::string& strpcamethodname() const;
  void set_strpcamethodname(const std::string& value);
  void set_strpcamethodname(std::string&& value);
  void set_strpcamethodname(const char* value);
  void set_strpcamethodname(const char* value, size_t size);
  std::string* mutable_strpcamethodname();
  std::string* release_strpcamethodname();
  void set_allocated_strpcamethodname(std::string* strpcamethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpcamethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpcamethodname(
      std::string* strpcamethodname);
  private:
  const std::string& _internal_strpcamethodname() const;
  void _internal_set_strpcamethodname(const std::string& value);
  std::string* _internal_mutable_strpcamethodname();
  public:

  // required string strRAMethodName = 6 [default = ""];
  bool has_strramethodname() const;
  private:
  bool _internal_has_strramethodname() const;
  public:
  void clear_strramethodname();
  const std::string& strramethodname() const;
  void set_strramethodname(const std::string& value);
  void set_strramethodname(std::string&& value);
  void set_strramethodname(const char* value);
  void set_strramethodname(const char* value, size_t size);
  std::string* mutable_strramethodname();
  std::string* release_strramethodname();
  void set_allocated_strramethodname(std::string* strramethodname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strramethodname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strramethodname(
      std::string* strramethodname);
  private:
  const std::string& _internal_strramethodname() const;
  void _internal_set_strramethodname(const std::string& value);
  std::string* _internal_mutable_strramethodname();
  public:

  // required uint64 lMaxXMLRPCLimitBufferSize = 7 [default = 0];
  bool has_lmaxxmlrpclimitbuffersize() const;
  private:
  bool _internal_has_lmaxxmlrpclimitbuffersize() const;
  public:
  void clear_lmaxxmlrpclimitbuffersize();
  ::PROTOBUF_NAMESPACE_ID::uint64 lmaxxmlrpclimitbuffersize() const;
  void set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lmaxxmlrpclimitbuffersize() const;
  void _internal_set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required float fVersion = 8 [default = -1];
  bool has_fversion() const;
  private:
  bool _internal_has_fversion() const;
  public:
  void clear_fversion();
  float fversion() const;
  void set_fversion(float value);
  private:
  float _internal_fversion() const;
  void _internal_set_fversion(float value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPoliceConfig)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strltcaserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpcaserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strraserverurl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strltcamethodname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpcamethodname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strramethodname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lmaxxmlrpclimitbuffersize_;
  float fversion_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVPKILibConfig_msgTicketPolicy PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVPKILibConfig.msgTicketPolicy) */ {
 public:
  inline msgVPKILibConfig_msgTicketPolicy() : msgVPKILibConfig_msgTicketPolicy(nullptr) {};
  virtual ~msgVPKILibConfig_msgTicketPolicy();

  msgVPKILibConfig_msgTicketPolicy(const msgVPKILibConfig_msgTicketPolicy& from);
  msgVPKILibConfig_msgTicketPolicy(msgVPKILibConfig_msgTicketPolicy&& from) noexcept
    : msgVPKILibConfig_msgTicketPolicy() {
    *this = ::std::move(from);
  }

  inline msgVPKILibConfig_msgTicketPolicy& operator=(const msgVPKILibConfig_msgTicketPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVPKILibConfig_msgTicketPolicy& operator=(msgVPKILibConfig_msgTicketPolicy&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVPKILibConfig_msgTicketPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVPKILibConfig_msgTicketPolicy* internal_default_instance() {
    return reinterpret_cast<const msgVPKILibConfig_msgTicketPolicy*>(
               &_msgVPKILibConfig_msgTicketPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(msgVPKILibConfig_msgTicketPolicy& a, msgVPKILibConfig_msgTicketPolicy& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVPKILibConfig_msgTicketPolicy* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVPKILibConfig_msgTicketPolicy* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVPKILibConfig_msgTicketPolicy* New() const final {
    return CreateMaybeMessage<msgVPKILibConfig_msgTicketPolicy>(nullptr);
  }

  msgVPKILibConfig_msgTicketPolicy* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVPKILibConfig_msgTicketPolicy>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVPKILibConfig_msgTicketPolicy& from);
  void MergeFrom(const msgVPKILibConfig_msgTicketPolicy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVPKILibConfig_msgTicketPolicy* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVPKILibConfig.msgTicketPolicy";
  }
  protected:
  explicit msgVPKILibConfig_msgTicketPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUiMaxNoOfTicketsToObtainPerHourFieldNumber = 2,
    kUiMinNoOfTicketsToReqFieldNumber = 3,
    kUiMaxNoOfTicketsToReqFieldNumber = 4,
    kUiMinNoOfTicketsToRevokeFieldNumber = 5,
    kUiMaxNoOfTicketsToRevokeFieldNumber = 6,
    kUiMinNoOfTicketsToBanFieldNumber = 7,
    kUiMaxNoOfTicketsToBanFieldNumber = 8,
    kUiBanTicketPeriodFieldNumber = 9,
    kBTicketReusabilityFieldNumber = 1,
  };
  // required uint32 uiMaxNoOfTicketsToObtainPerHour = 2 [default = 0];
  bool has_uimaxnoofticketstoobtainperhour() const;
  private:
  bool _internal_has_uimaxnoofticketstoobtainperhour() const;
  public:
  void clear_uimaxnoofticketstoobtainperhour();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoobtainperhour() const;
  void set_uimaxnoofticketstoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofticketstoobtainperhour() const;
  void _internal_set_uimaxnoofticketstoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfTicketsToReq = 3 [default = 0];
  bool has_uiminnoofticketstoreq() const;
  private:
  bool _internal_has_uiminnoofticketstoreq() const;
  public:
  void clear_uiminnoofticketstoreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstoreq() const;
  void set_uiminnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofticketstoreq() const;
  void _internal_set_uiminnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfTicketsToReq = 4 [default = 0];
  bool has_uimaxnoofticketstoreq() const;
  private:
  bool _internal_has_uimaxnoofticketstoreq() const;
  public:
  void clear_uimaxnoofticketstoreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoreq() const;
  void set_uimaxnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofticketstoreq() const;
  void _internal_set_uimaxnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfTicketsToRevoke = 5 [default = 0];
  bool has_uiminnoofticketstorevoke() const;
  private:
  bool _internal_has_uiminnoofticketstorevoke() const;
  public:
  void clear_uiminnoofticketstorevoke();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstorevoke() const;
  void set_uiminnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofticketstorevoke() const;
  void _internal_set_uiminnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfTicketsToRevoke = 6 [default = 0];
  bool has_uimaxnoofticketstorevoke() const;
  private:
  bool _internal_has_uimaxnoofticketstorevoke() const;
  public:
  void clear_uimaxnoofticketstorevoke();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstorevoke() const;
  void set_uimaxnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofticketstorevoke() const;
  void _internal_set_uimaxnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfTicketsToBan = 7 [default = 0];
  bool has_uiminnoofticketstoban() const;
  private:
  bool _internal_has_uiminnoofticketstoban() const;
  public:
  void clear_uiminnoofticketstoban();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstoban() const;
  void set_uiminnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofticketstoban() const;
  void _internal_set_uiminnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfTicketsToBan = 8 [default = 0];
  bool has_uimaxnoofticketstoban() const;
  private:
  bool _internal_has_uimaxnoofticketstoban() const;
  public:
  void clear_uimaxnoofticketstoban();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoban() const;
  void set_uimaxnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofticketstoban() const;
  void _internal_set_uimaxnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiBanTicketPeriod = 9 [default = 0];
  bool has_uibanticketperiod() const;
  private:
  bool _internal_has_uibanticketperiod() const;
  public:
  void clear_uibanticketperiod();
  ::PROTOBUF_NAMESPACE_ID::uint32 uibanticketperiod() const;
  void set_uibanticketperiod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uibanticketperiod() const;
  void _internal_set_uibanticketperiod(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required bool bTicketReusability = 1 [default = true];
  bool has_bticketreusability() const;
  private:
  bool _internal_has_bticketreusability() const;
  public:
  void clear_bticketreusability();
  bool bticketreusability() const;
  void set_bticketreusability(bool value);
  private:
  bool _internal_bticketreusability() const;
  void _internal_set_bticketreusability(bool value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVPKILibConfig.msgTicketPolicy)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoobtainperhour_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstoreq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoreq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstorevoke_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstorevoke_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofticketstoban_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofticketstoban_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uibanticketperiod_;
  bool bticketreusability_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVPKILibConfig_msgPsnymPolicy PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVPKILibConfig.msgPsnymPolicy) */ {
 public:
  inline msgVPKILibConfig_msgPsnymPolicy() : msgVPKILibConfig_msgPsnymPolicy(nullptr) {};
  virtual ~msgVPKILibConfig_msgPsnymPolicy();

  msgVPKILibConfig_msgPsnymPolicy(const msgVPKILibConfig_msgPsnymPolicy& from);
  msgVPKILibConfig_msgPsnymPolicy(msgVPKILibConfig_msgPsnymPolicy&& from) noexcept
    : msgVPKILibConfig_msgPsnymPolicy() {
    *this = ::std::move(from);
  }

  inline msgVPKILibConfig_msgPsnymPolicy& operator=(const msgVPKILibConfig_msgPsnymPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVPKILibConfig_msgPsnymPolicy& operator=(msgVPKILibConfig_msgPsnymPolicy&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVPKILibConfig_msgPsnymPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVPKILibConfig_msgPsnymPolicy* internal_default_instance() {
    return reinterpret_cast<const msgVPKILibConfig_msgPsnymPolicy*>(
               &_msgVPKILibConfig_msgPsnymPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(msgVPKILibConfig_msgPsnymPolicy& a, msgVPKILibConfig_msgPsnymPolicy& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVPKILibConfig_msgPsnymPolicy* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVPKILibConfig_msgPsnymPolicy* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVPKILibConfig_msgPsnymPolicy* New() const final {
    return CreateMaybeMessage<msgVPKILibConfig_msgPsnymPolicy>(nullptr);
  }

  msgVPKILibConfig_msgPsnymPolicy* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVPKILibConfig_msgPsnymPolicy>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVPKILibConfig_msgPsnymPolicy& from);
  void MergeFrom(const msgVPKILibConfig_msgPsnymPolicy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVPKILibConfig_msgPsnymPolicy* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVPKILibConfig.msgPsnymPolicy";
  }
  protected:
  explicit msgVPKILibConfig_msgPsnymPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrResponsibleNodeToRevokePsnymsFieldNumber = 1,
    kStrPsnymOverlappingMechanismFieldNumber = 11,
    kUiMaxNoOfPsnymCertToObtainPerHourFieldNumber = 2,
    kUiMaxNoOfPsnymCertReqUsingATicketFieldNumber = 3,
    kUiMinNoOfPsnymCertToReqFieldNumber = 4,
    kUiMaxNoOfPsnymCertToReqFieldNumber = 5,
    kUiMinNoOfPsnymCertToResolveFieldNumber = 6,
    kUiMaxNoOfPsnymCertToResolveFieldNumber = 7,
    kUiMinNoOfPsnymCertToRevokeFieldNumber = 8,
    kUiMaxNoOfPsnymCertToRevokeFieldNumber = 9,
    kUiMaxNumOfPsnymCertToObtainPerReqFieldNumber = 10,
  };
  // required string strResponsibleNodeToRevokePsnyms = 1;
  bool has_strresponsiblenodetorevokepsnyms() const;
  private:
  bool _internal_has_strresponsiblenodetorevokepsnyms() const;
  public:
  void clear_strresponsiblenodetorevokepsnyms();
  const std::string& strresponsiblenodetorevokepsnyms() const;
  void set_strresponsiblenodetorevokepsnyms(const std::string& value);
  void set_strresponsiblenodetorevokepsnyms(std::string&& value);
  void set_strresponsiblenodetorevokepsnyms(const char* value);
  void set_strresponsiblenodetorevokepsnyms(const char* value, size_t size);
  std::string* mutable_strresponsiblenodetorevokepsnyms();
  std::string* release_strresponsiblenodetorevokepsnyms();
  void set_allocated_strresponsiblenodetorevokepsnyms(std::string* strresponsiblenodetorevokepsnyms);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strresponsiblenodetorevokepsnyms();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strresponsiblenodetorevokepsnyms(
      std::string* strresponsiblenodetorevokepsnyms);
  private:
  const std::string& _internal_strresponsiblenodetorevokepsnyms() const;
  void _internal_set_strresponsiblenodetorevokepsnyms(const std::string& value);
  std::string* _internal_mutable_strresponsiblenodetorevokepsnyms();
  public:

  // required string strPsnymOverlappingMechanism = 11 [default = ""];
  bool has_strpsnymoverlappingmechanism() const;
  private:
  bool _internal_has_strpsnymoverlappingmechanism() const;
  public:
  void clear_strpsnymoverlappingmechanism();
  const std::string& strpsnymoverlappingmechanism() const;
  void set_strpsnymoverlappingmechanism(const std::string& value);
  void set_strpsnymoverlappingmechanism(std::string&& value);
  void set_strpsnymoverlappingmechanism(const char* value);
  void set_strpsnymoverlappingmechanism(const char* value, size_t size);
  std::string* mutable_strpsnymoverlappingmechanism();
  std::string* release_strpsnymoverlappingmechanism();
  void set_allocated_strpsnymoverlappingmechanism(std::string* strpsnymoverlappingmechanism);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymoverlappingmechanism();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymoverlappingmechanism(
      std::string* strpsnymoverlappingmechanism);
  private:
  const std::string& _internal_strpsnymoverlappingmechanism() const;
  void _internal_set_strpsnymoverlappingmechanism(const std::string& value);
  std::string* _internal_mutable_strpsnymoverlappingmechanism();
  public:

  // required uint32 uiMaxNoOfPsnymCertToObtainPerHour = 2 [default = 0];
  bool has_uimaxnoofpsnymcerttoobtainperhour() const;
  private:
  bool _internal_has_uimaxnoofpsnymcerttoobtainperhour() const;
  public:
  void clear_uimaxnoofpsnymcerttoobtainperhour();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoobtainperhour() const;
  void set_uimaxnoofpsnymcerttoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofpsnymcerttoobtainperhour() const;
  void _internal_set_uimaxnoofpsnymcerttoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfPsnymCertReqUsingATicket = 3 [default = 0];
  bool has_uimaxnoofpsnymcertrequsingaticket() const;
  private:
  bool _internal_has_uimaxnoofpsnymcertrequsingaticket() const;
  public:
  void clear_uimaxnoofpsnymcertrequsingaticket();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcertrequsingaticket() const;
  void set_uimaxnoofpsnymcertrequsingaticket(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofpsnymcertrequsingaticket() const;
  void _internal_set_uimaxnoofpsnymcertrequsingaticket(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfPsnymCertToReq = 4 [default = 0];
  bool has_uiminnoofpsnymcerttoreq() const;
  private:
  bool _internal_has_uiminnoofpsnymcerttoreq() const;
  public:
  void clear_uiminnoofpsnymcerttoreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttoreq() const;
  void set_uiminnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofpsnymcerttoreq() const;
  void _internal_set_uiminnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfPsnymCertToReq = 5 [default = 0];
  bool has_uimaxnoofpsnymcerttoreq() const;
  private:
  bool _internal_has_uimaxnoofpsnymcerttoreq() const;
  public:
  void clear_uimaxnoofpsnymcerttoreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoreq() const;
  void set_uimaxnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofpsnymcerttoreq() const;
  void _internal_set_uimaxnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfPsnymCertToResolve = 6 [default = 0];
  bool has_uiminnoofpsnymcerttoresolve() const;
  private:
  bool _internal_has_uiminnoofpsnymcerttoresolve() const;
  public:
  void clear_uiminnoofpsnymcerttoresolve();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttoresolve() const;
  void set_uiminnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofpsnymcerttoresolve() const;
  void _internal_set_uiminnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfPsnymCertToResolve = 7 [default = 0];
  bool has_uimaxnoofpsnymcerttoresolve() const;
  private:
  bool _internal_has_uimaxnoofpsnymcerttoresolve() const;
  public:
  void clear_uimaxnoofpsnymcerttoresolve();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoresolve() const;
  void set_uimaxnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofpsnymcerttoresolve() const;
  void _internal_set_uimaxnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMinNoOfPsnymCertToRevoke = 8 [default = 0];
  bool has_uiminnoofpsnymcerttorevoke() const;
  private:
  bool _internal_has_uiminnoofpsnymcerttorevoke() const;
  public:
  void clear_uiminnoofpsnymcerttorevoke();
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttorevoke() const;
  void set_uiminnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uiminnoofpsnymcerttorevoke() const;
  void _internal_set_uiminnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNoOfPsnymCertToRevoke = 9 [default = 0];
  bool has_uimaxnoofpsnymcerttorevoke() const;
  private:
  bool _internal_has_uimaxnoofpsnymcerttorevoke() const;
  public:
  void clear_uimaxnoofpsnymcerttorevoke();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttorevoke() const;
  void set_uimaxnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnoofpsnymcerttorevoke() const;
  void _internal_set_uimaxnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uiMaxNumOfPsnymCertToObtainPerReq = 10 [default = 0];
  bool has_uimaxnumofpsnymcerttoobtainperreq() const;
  private:
  bool _internal_has_uimaxnumofpsnymcerttoobtainperreq() const;
  public:
  void clear_uimaxnumofpsnymcerttoobtainperreq();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnumofpsnymcerttoobtainperreq() const;
  void set_uimaxnumofpsnymcerttoobtainperreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimaxnumofpsnymcerttoobtainperreq() const;
  void _internal_set_uimaxnumofpsnymcerttoobtainperreq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVPKILibConfig.msgPsnymPolicy)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strresponsiblenodetorevokepsnyms_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymoverlappingmechanism_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoobtainperhour_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcertrequsingaticket_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttoreq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoreq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttoresolve_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttoresolve_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uiminnoofpsnymcerttorevoke_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnoofpsnymcerttorevoke_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimaxnumofpsnymcerttoobtainperreq_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgVPKILibConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgVPKILibConfig) */ {
 public:
  inline msgVPKILibConfig() : msgVPKILibConfig(nullptr) {};
  virtual ~msgVPKILibConfig();

  msgVPKILibConfig(const msgVPKILibConfig& from);
  msgVPKILibConfig(msgVPKILibConfig&& from) noexcept
    : msgVPKILibConfig() {
    *this = ::std::move(from);
  }

  inline msgVPKILibConfig& operator=(const msgVPKILibConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgVPKILibConfig& operator=(msgVPKILibConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgVPKILibConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgVPKILibConfig* internal_default_instance() {
    return reinterpret_cast<const msgVPKILibConfig*>(
               &_msgVPKILibConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(msgVPKILibConfig& a, msgVPKILibConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(msgVPKILibConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgVPKILibConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgVPKILibConfig* New() const final {
    return CreateMaybeMessage<msgVPKILibConfig>(nullptr);
  }

  msgVPKILibConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgVPKILibConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgVPKILibConfig& from);
  void MergeFrom(const msgVPKILibConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgVPKILibConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgVPKILibConfig";
  }
  protected:
  explicit msgVPKILibConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgVPKILibConfig_msgTicketPolicy msgTicketPolicy;
  typedef msgVPKILibConfig_msgPsnymPolicy msgPsnymPolicy;

  // accessors -------------------------------------------------------

  enum : int {
    kStTicketPoliciesFieldNumber = 9,
    kStPsnymPoliciesFieldNumber = 10,
    kStrGetHelpCommandNameFieldNumber = 8,
    kUiSignatureSizeFieldNumber = 16,
    kFVPKIVersionFieldNumber = 21,
    kIRCAIdFieldNumber = 1,
    kIPCAIdFieldNumber = 2,
    kILTCAIdFieldNumber = 3,
    kIRAIdFieldNumber = 4,
    kIPoliceIdFieldNumber = 5,
    kIRegionIdFieldNumber = 6,
    kILocationIdFieldNumber = 7,
    kIMaxDelayThreasholdFieldNumber = 11,
    kIPsnymIssuanceValidityPeriodFieldNumber = 12,
    kITicketValidityPeriodFieldNumber = 13,
    kIRandValueThreasholdFieldNumber = 14,
    kICryptoBuffSizeFieldNumber = 15,
    kITimeStampLowerBoundFieldNumber = 17,
    kITimeStampUpperBoundFieldNumber = 18,
    kICurrentCRLVersionFieldNumber = 19,
    kINonceIncreasingValueFieldNumber = 20,
  };
  // repeated .interfaces.msgVPKILibConfig.msgTicketPolicy stTicketPolicies = 9;
  int stticketpolicies_size() const;
  private:
  int _internal_stticketpolicies_size() const;
  public:
  void clear_stticketpolicies();
  ::interfaces::msgVPKILibConfig_msgTicketPolicy* mutable_stticketpolicies(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgTicketPolicy >*
      mutable_stticketpolicies();
  private:
  const ::interfaces::msgVPKILibConfig_msgTicketPolicy& _internal_stticketpolicies(int index) const;
  ::interfaces::msgVPKILibConfig_msgTicketPolicy* _internal_add_stticketpolicies();
  public:
  const ::interfaces::msgVPKILibConfig_msgTicketPolicy& stticketpolicies(int index) const;
  ::interfaces::msgVPKILibConfig_msgTicketPolicy* add_stticketpolicies();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgTicketPolicy >&
      stticketpolicies() const;

  // repeated .interfaces.msgVPKILibConfig.msgPsnymPolicy stPsnymPolicies = 10;
  int stpsnympolicies_size() const;
  private:
  int _internal_stpsnympolicies_size() const;
  public:
  void clear_stpsnympolicies();
  ::interfaces::msgVPKILibConfig_msgPsnymPolicy* mutable_stpsnympolicies(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgPsnymPolicy >*
      mutable_stpsnympolicies();
  private:
  const ::interfaces::msgVPKILibConfig_msgPsnymPolicy& _internal_stpsnympolicies(int index) const;
  ::interfaces::msgVPKILibConfig_msgPsnymPolicy* _internal_add_stpsnympolicies();
  public:
  const ::interfaces::msgVPKILibConfig_msgPsnymPolicy& stpsnympolicies(int index) const;
  ::interfaces::msgVPKILibConfig_msgPsnymPolicy* add_stpsnympolicies();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgPsnymPolicy >&
      stpsnympolicies() const;

  // required string strGetHelpCommandName = 8 [default = ""];
  bool has_strgethelpcommandname() const;
  private:
  bool _internal_has_strgethelpcommandname() const;
  public:
  void clear_strgethelpcommandname();
  const std::string& strgethelpcommandname() const;
  void set_strgethelpcommandname(const std::string& value);
  void set_strgethelpcommandname(std::string&& value);
  void set_strgethelpcommandname(const char* value);
  void set_strgethelpcommandname(const char* value, size_t size);
  std::string* mutable_strgethelpcommandname();
  std::string* release_strgethelpcommandname();
  void set_allocated_strgethelpcommandname(std::string* strgethelpcommandname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strgethelpcommandname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strgethelpcommandname(
      std::string* strgethelpcommandname);
  private:
  const std::string& _internal_strgethelpcommandname() const;
  void _internal_set_strgethelpcommandname(const std::string& value);
  std::string* _internal_mutable_strgethelpcommandname();
  public:

  // required uint32 uiSignatureSize = 16 [default = 0];
  bool has_uisignaturesize() const;
  private:
  bool _internal_has_uisignaturesize() const;
  public:
  void clear_uisignaturesize();
  ::PROTOBUF_NAMESPACE_ID::uint32 uisignaturesize() const;
  void set_uisignaturesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uisignaturesize() const;
  void _internal_set_uisignaturesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required float fVPKIVersion = 21 [default = -1];
  bool has_fvpkiversion() const;
  private:
  bool _internal_has_fvpkiversion() const;
  public:
  void clear_fvpkiversion();
  float fvpkiversion() const;
  void set_fvpkiversion(float value);
  private:
  float _internal_fvpkiversion() const;
  void _internal_set_fvpkiversion(float value);
  public:

  // required int32 iRCAId = 1 [default = -1];
  bool has_ircaid() const;
  private:
  bool _internal_has_ircaid() const;
  public:
  void clear_ircaid();
  ::PROTOBUF_NAMESPACE_ID::int32 ircaid() const;
  void set_ircaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ircaid() const;
  void _internal_set_ircaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAId = 2 [default = -1];
  bool has_ipcaid() const;
  private:
  bool _internal_has_ipcaid() const;
  public:
  void clear_ipcaid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaid() const;
  void set_ipcaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaid() const;
  void _internal_set_ipcaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLTCAId = 3 [default = -1];
  bool has_iltcaid() const;
  private:
  bool _internal_has_iltcaid() const;
  public:
  void clear_iltcaid();
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaid() const;
  void set_iltcaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iltcaid() const;
  void _internal_set_iltcaid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRAId = 4 [default = -1];
  bool has_iraid() const;
  private:
  bool _internal_has_iraid() const;
  public:
  void clear_iraid();
  ::PROTOBUF_NAMESPACE_ID::int32 iraid() const;
  void set_iraid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iraid() const;
  void _internal_set_iraid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPoliceId = 5 [default = -1];
  bool has_ipoliceid() const;
  private:
  bool _internal_has_ipoliceid() const;
  public:
  void clear_ipoliceid();
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid() const;
  void set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipoliceid() const;
  void _internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRegionId = 6 [default = -1];
  bool has_iregionid() const;
  private:
  bool _internal_has_iregionid() const;
  public:
  void clear_iregionid();
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid() const;
  void set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iregionid() const;
  void _internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iLocationId = 7 [default = -1];
  bool has_ilocationid() const;
  private:
  bool _internal_has_ilocationid() const;
  public:
  void clear_ilocationid();
  ::PROTOBUF_NAMESPACE_ID::int32 ilocationid() const;
  void set_ilocationid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ilocationid() const;
  void _internal_set_ilocationid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iMaxDelayThreashold = 11 [default = -1];
  bool has_imaxdelaythreashold() const;
  private:
  bool _internal_has_imaxdelaythreashold() const;
  public:
  void clear_imaxdelaythreashold();
  ::PROTOBUF_NAMESPACE_ID::int32 imaxdelaythreashold() const;
  void set_imaxdelaythreashold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_imaxdelaythreashold() const;
  void _internal_set_imaxdelaythreashold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPsnymIssuanceValidityPeriod = 12 [default = -1];
  bool has_ipsnymissuancevalidityperiod() const;
  private:
  bool _internal_has_ipsnymissuancevalidityperiod() const;
  public:
  void clear_ipsnymissuancevalidityperiod();
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymissuancevalidityperiod() const;
  void set_ipsnymissuancevalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipsnymissuancevalidityperiod() const;
  void _internal_set_ipsnymissuancevalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTicketValidityPeriod = 13 [default = -1];
  bool has_iticketvalidityperiod() const;
  private:
  bool _internal_has_iticketvalidityperiod() const;
  public:
  void clear_iticketvalidityperiod();
  ::PROTOBUF_NAMESPACE_ID::int32 iticketvalidityperiod() const;
  void set_iticketvalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iticketvalidityperiod() const;
  void _internal_set_iticketvalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRandValueThreashold = 14 [default = -1];
  bool has_irandvaluethreashold() const;
  private:
  bool _internal_has_irandvaluethreashold() const;
  public:
  void clear_irandvaluethreashold();
  ::PROTOBUF_NAMESPACE_ID::int32 irandvaluethreashold() const;
  void set_irandvaluethreashold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_irandvaluethreashold() const;
  void _internal_set_irandvaluethreashold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iCryptoBuffSize = 15 [default = -1];
  bool has_icryptobuffsize() const;
  private:
  bool _internal_has_icryptobuffsize() const;
  public:
  void clear_icryptobuffsize();
  ::PROTOBUF_NAMESPACE_ID::int32 icryptobuffsize() const;
  void set_icryptobuffsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icryptobuffsize() const;
  void _internal_set_icryptobuffsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTimeStampLowerBound = 17 [default = -1];
  bool has_itimestamplowerbound() const;
  private:
  bool _internal_has_itimestamplowerbound() const;
  public:
  void clear_itimestamplowerbound();
  ::PROTOBUF_NAMESPACE_ID::int32 itimestamplowerbound() const;
  void set_itimestamplowerbound(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_itimestamplowerbound() const;
  void _internal_set_itimestamplowerbound(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iTimeStampUpperBound = 18 [default = -1];
  bool has_itimestampupperbound() const;
  private:
  bool _internal_has_itimestampupperbound() const;
  public:
  void clear_itimestampupperbound();
  ::PROTOBUF_NAMESPACE_ID::int32 itimestampupperbound() const;
  void set_itimestampupperbound(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_itimestampupperbound() const;
  void _internal_set_itimestampupperbound(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iCurrentCRLVersion = 19 [default = -1];
  bool has_icurrentcrlversion() const;
  private:
  bool _internal_has_icurrentcrlversion() const;
  public:
  void clear_icurrentcrlversion();
  ::PROTOBUF_NAMESPACE_ID::int32 icurrentcrlversion() const;
  void set_icurrentcrlversion(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icurrentcrlversion() const;
  void _internal_set_icurrentcrlversion(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonceIncreasingValue = 20 [default = -1];
  bool has_inonceincreasingvalue() const;
  private:
  bool _internal_has_inonceincreasingvalue() const;
  public:
  void clear_inonceincreasingvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 inonceincreasingvalue() const;
  void set_inonceincreasingvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonceincreasingvalue() const;
  void _internal_set_inonceincreasingvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgVPKILibConfig)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgTicketPolicy > stticketpolicies_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgPsnymPolicy > stpsnympolicies_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strgethelpcommandname_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uisignaturesize_;
  float fvpkiversion_;
  ::PROTOBUF_NAMESPACE_ID::int32 ircaid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iltcaid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iraid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipoliceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ilocationid_;
  ::PROTOBUF_NAMESPACE_ID::int32 imaxdelaythreashold_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymissuancevalidityperiod_;
  ::PROTOBUF_NAMESPACE_ID::int32 iticketvalidityperiod_;
  ::PROTOBUF_NAMESPACE_ID::int32 irandvaluethreashold_;
  ::PROTOBUF_NAMESPACE_ID::int32 icryptobuffsize_;
  ::PROTOBUF_NAMESPACE_ID::int32 itimestamplowerbound_;
  ::PROTOBUF_NAMESPACE_ID::int32 itimestampupperbound_;
  ::PROTOBUF_NAMESPACE_ID::int32 icurrentcrlversion_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonceincreasingvalue_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgUpgradeConfigurationReq_Client2Server PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgUpgradeConfigurationReq_Client2Server) */ {
 public:
  inline msgUpgradeConfigurationReq_Client2Server() : msgUpgradeConfigurationReq_Client2Server(nullptr) {};
  virtual ~msgUpgradeConfigurationReq_Client2Server();

  msgUpgradeConfigurationReq_Client2Server(const msgUpgradeConfigurationReq_Client2Server& from);
  msgUpgradeConfigurationReq_Client2Server(msgUpgradeConfigurationReq_Client2Server&& from) noexcept
    : msgUpgradeConfigurationReq_Client2Server() {
    *this = ::std::move(from);
  }

  inline msgUpgradeConfigurationReq_Client2Server& operator=(const msgUpgradeConfigurationReq_Client2Server& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgUpgradeConfigurationReq_Client2Server& operator=(msgUpgradeConfigurationReq_Client2Server&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgUpgradeConfigurationReq_Client2Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgUpgradeConfigurationReq_Client2Server* internal_default_instance() {
    return reinterpret_cast<const msgUpgradeConfigurationReq_Client2Server*>(
               &_msgUpgradeConfigurationReq_Client2Server_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(msgUpgradeConfigurationReq_Client2Server& a, msgUpgradeConfigurationReq_Client2Server& b) {
    a.Swap(&b);
  }
  inline void Swap(msgUpgradeConfigurationReq_Client2Server* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgUpgradeConfigurationReq_Client2Server* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgUpgradeConfigurationReq_Client2Server* New() const final {
    return CreateMaybeMessage<msgUpgradeConfigurationReq_Client2Server>(nullptr);
  }

  msgUpgradeConfigurationReq_Client2Server* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgUpgradeConfigurationReq_Client2Server>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgUpgradeConfigurationReq_Client2Server& from);
  void MergeFrom(const msgUpgradeConfigurationReq_Client2Server& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgUpgradeConfigurationReq_Client2Server* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgUpgradeConfigurationReq_Client2Server";
  }
  protected:
  explicit msgUpgradeConfigurationReq_Client2Server(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertFieldNumber = 5,
    kStSignFieldNumber = 8,
    kINonceFieldNumber = 6,
    kIReqTypeFieldNumber = 1,
    kIPCAIdRangeFieldNumber = 2,
    kIRegionIdFieldNumber = 3,
    kIPsnymCertLenFieldNumber = 4,
    kTTimeStampFieldNumber = 7,
  };
  // required string strPsnymCert = 5 [default = ""];
  bool has_strpsnymcert() const;
  private:
  bool _internal_has_strpsnymcert() const;
  public:
  void clear_strpsnymcert();
  const std::string& strpsnymcert() const;
  void set_strpsnymcert(const std::string& value);
  void set_strpsnymcert(std::string&& value);
  void set_strpsnymcert(const char* value);
  void set_strpsnymcert(const char* value, size_t size);
  std::string* mutable_strpsnymcert();
  std::string* release_strpsnymcert();
  void set_allocated_strpsnymcert(std::string* strpsnymcert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcert(
      std::string* strpsnymcert);
  private:
  const std::string& _internal_strpsnymcert() const;
  void _internal_set_strpsnymcert(const std::string& value);
  std::string* _internal_mutable_strpsnymcert();
  public:

  // optional .interfaces.msgSignature stSign = 8;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 6 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPCAIdRange = 2 [default = -1];
  bool has_ipcaidrange() const;
  private:
  bool _internal_has_ipcaidrange() const;
  public:
  void clear_ipcaidrange();
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange() const;
  void set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipcaidrange() const;
  void _internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iRegionId = 3 [default = -1];
  bool has_iregionid() const;
  private:
  bool _internal_has_iregionid() const;
  public:
  void clear_iregionid();
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid() const;
  void set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iregionid() const;
  void _internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iPsnymCertLen = 4 [default = -1];
  bool has_ipsnymcertlen() const;
  private:
  bool _internal_has_ipsnymcertlen() const;
  public:
  void clear_ipsnymcertlen();
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen() const;
  void set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ipsnymcertlen() const;
  void _internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 7 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgUpgradeConfigurationReq_Client2Server)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcert_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipcaidrange_;
  ::PROTOBUF_NAMESPACE_ID::int32 iregionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 ipsnymcertlen_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgUpgradeConfigurationRes_Server2Client PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgUpgradeConfigurationRes_Server2Client) */ {
 public:
  inline msgUpgradeConfigurationRes_Server2Client() : msgUpgradeConfigurationRes_Server2Client(nullptr) {};
  virtual ~msgUpgradeConfigurationRes_Server2Client();

  msgUpgradeConfigurationRes_Server2Client(const msgUpgradeConfigurationRes_Server2Client& from);
  msgUpgradeConfigurationRes_Server2Client(msgUpgradeConfigurationRes_Server2Client&& from) noexcept
    : msgUpgradeConfigurationRes_Server2Client() {
    *this = ::std::move(from);
  }

  inline msgUpgradeConfigurationRes_Server2Client& operator=(const msgUpgradeConfigurationRes_Server2Client& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgUpgradeConfigurationRes_Server2Client& operator=(msgUpgradeConfigurationRes_Server2Client&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgUpgradeConfigurationRes_Server2Client& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgUpgradeConfigurationRes_Server2Client* internal_default_instance() {
    return reinterpret_cast<const msgUpgradeConfigurationRes_Server2Client*>(
               &_msgUpgradeConfigurationRes_Server2Client_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(msgUpgradeConfigurationRes_Server2Client& a, msgUpgradeConfigurationRes_Server2Client& b) {
    a.Swap(&b);
  }
  inline void Swap(msgUpgradeConfigurationRes_Server2Client* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgUpgradeConfigurationRes_Server2Client* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgUpgradeConfigurationRes_Server2Client* New() const final {
    return CreateMaybeMessage<msgUpgradeConfigurationRes_Server2Client>(nullptr);
  }

  msgUpgradeConfigurationRes_Server2Client* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgUpgradeConfigurationRes_Server2Client>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgUpgradeConfigurationRes_Server2Client& from);
  void MergeFrom(const msgUpgradeConfigurationRes_Server2Client& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgUpgradeConfigurationRes_Server2Client* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgUpgradeConfigurationRes_Server2Client";
  }
  protected:
  explicit msgUpgradeConfigurationRes_Server2Client(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 2,
    kStVehConfigFieldNumber = 3,
    kStPoliceConfigFieldNumber = 4,
    kStVPKILibConfigFieldNumber = 5,
    kStErrInfoFieldNumber = 8,
    kStSignFieldNumber = 9,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 6,
    kTTimeStampFieldNumber = 7,
  };
  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgVehicleConfig stVehConfig = 3;
  bool has_stvehconfig() const;
  private:
  bool _internal_has_stvehconfig() const;
  public:
  void clear_stvehconfig();
  const ::interfaces::msgVehicleConfig& stvehconfig() const;
  ::interfaces::msgVehicleConfig* release_stvehconfig();
  ::interfaces::msgVehicleConfig* mutable_stvehconfig();
  void set_allocated_stvehconfig(::interfaces::msgVehicleConfig* stvehconfig);
  private:
  const ::interfaces::msgVehicleConfig& _internal_stvehconfig() const;
  ::interfaces::msgVehicleConfig* _internal_mutable_stvehconfig();
  public:
  void unsafe_arena_set_allocated_stvehconfig(
      ::interfaces::msgVehicleConfig* stvehconfig);
  ::interfaces::msgVehicleConfig* unsafe_arena_release_stvehconfig();

  // required .interfaces.msgPoliceConfig stPoliceConfig = 4;
  bool has_stpoliceconfig() const;
  private:
  bool _internal_has_stpoliceconfig() const;
  public:
  void clear_stpoliceconfig();
  const ::interfaces::msgPoliceConfig& stpoliceconfig() const;
  ::interfaces::msgPoliceConfig* release_stpoliceconfig();
  ::interfaces::msgPoliceConfig* mutable_stpoliceconfig();
  void set_allocated_stpoliceconfig(::interfaces::msgPoliceConfig* stpoliceconfig);
  private:
  const ::interfaces::msgPoliceConfig& _internal_stpoliceconfig() const;
  ::interfaces::msgPoliceConfig* _internal_mutable_stpoliceconfig();
  public:
  void unsafe_arena_set_allocated_stpoliceconfig(
      ::interfaces::msgPoliceConfig* stpoliceconfig);
  ::interfaces::msgPoliceConfig* unsafe_arena_release_stpoliceconfig();

  // required .interfaces.msgVPKILibConfig stVPKILibConfig = 5;
  bool has_stvpkilibconfig() const;
  private:
  bool _internal_has_stvpkilibconfig() const;
  public:
  void clear_stvpkilibconfig();
  const ::interfaces::msgVPKILibConfig& stvpkilibconfig() const;
  ::interfaces::msgVPKILibConfig* release_stvpkilibconfig();
  ::interfaces::msgVPKILibConfig* mutable_stvpkilibconfig();
  void set_allocated_stvpkilibconfig(::interfaces::msgVPKILibConfig* stvpkilibconfig);
  private:
  const ::interfaces::msgVPKILibConfig& _internal_stvpkilibconfig() const;
  ::interfaces::msgVPKILibConfig* _internal_mutable_stvpkilibconfig();
  public:
  void unsafe_arena_set_allocated_stvpkilibconfig(
      ::interfaces::msgVPKILibConfig* stvpkilibconfig);
  ::interfaces::msgVPKILibConfig* unsafe_arena_release_stvpkilibconfig();

  // required .interfaces.msgError stErrInfo = 8;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 6 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 7 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgUpgradeConfigurationRes_Server2Client)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgVehicleConfig* stvehconfig_;
  ::interfaces::msgPoliceConfig* stpoliceconfig_;
  ::interfaces::msgVPKILibConfig* stvpkilibconfig_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionReq_Police2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionReq_Police2RA) */ {
 public:
  inline msgReversePsnymResolutionReq_Police2RA() : msgReversePsnymResolutionReq_Police2RA(nullptr) {};
  virtual ~msgReversePsnymResolutionReq_Police2RA();

  msgReversePsnymResolutionReq_Police2RA(const msgReversePsnymResolutionReq_Police2RA& from);
  msgReversePsnymResolutionReq_Police2RA(msgReversePsnymResolutionReq_Police2RA&& from) noexcept
    : msgReversePsnymResolutionReq_Police2RA() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionReq_Police2RA& operator=(const msgReversePsnymResolutionReq_Police2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionReq_Police2RA& operator=(msgReversePsnymResolutionReq_Police2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionReq_Police2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionReq_Police2RA* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionReq_Police2RA*>(
               &_msgReversePsnymResolutionReq_Police2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(msgReversePsnymResolutionReq_Police2RA& a, msgReversePsnymResolutionReq_Police2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionReq_Police2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionReq_Police2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionReq_Police2RA* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_Police2RA>(nullptr);
  }

  msgReversePsnymResolutionReq_Police2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_Police2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionReq_Police2RA& from);
  void MergeFrom(const msgReversePsnymResolutionReq_Police2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionReq_Police2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionReq_Police2RA";
  }
  protected:
  explicit msgReversePsnymResolutionReq_Police2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrX509CertFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kINonceFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 6,
  };
  // repeated string strX509Cert = 4;
  int strx509cert_size() const;
  private:
  int _internal_strx509cert_size() const;
  public:
  void clear_strx509cert();
  const std::string& strx509cert(int index) const;
  std::string* mutable_strx509cert(int index);
  void set_strx509cert(int index, const std::string& value);
  void set_strx509cert(int index, std::string&& value);
  void set_strx509cert(int index, const char* value);
  void set_strx509cert(int index, const char* value, size_t size);
  std::string* add_strx509cert();
  void add_strx509cert(const std::string& value);
  void add_strx509cert(std::string&& value);
  void add_strx509cert(const char* value);
  void add_strx509cert(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strx509cert() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strx509cert();
  private:
  const std::string& _internal_strx509cert(int index) const;
  std::string* _internal_add_strx509cert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionReq_Police2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strx509cert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionReq_RA2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionReq_RA2LTCA) */ {
 public:
  inline msgReversePsnymResolutionReq_RA2LTCA() : msgReversePsnymResolutionReq_RA2LTCA(nullptr) {};
  virtual ~msgReversePsnymResolutionReq_RA2LTCA();

  msgReversePsnymResolutionReq_RA2LTCA(const msgReversePsnymResolutionReq_RA2LTCA& from);
  msgReversePsnymResolutionReq_RA2LTCA(msgReversePsnymResolutionReq_RA2LTCA&& from) noexcept
    : msgReversePsnymResolutionReq_RA2LTCA() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionReq_RA2LTCA& operator=(const msgReversePsnymResolutionReq_RA2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionReq_RA2LTCA& operator=(msgReversePsnymResolutionReq_RA2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionReq_RA2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionReq_RA2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionReq_RA2LTCA*>(
               &_msgReversePsnymResolutionReq_RA2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(msgReversePsnymResolutionReq_RA2LTCA& a, msgReversePsnymResolutionReq_RA2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionReq_RA2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionReq_RA2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionReq_RA2LTCA* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2LTCA>(nullptr);
  }

  msgReversePsnymResolutionReq_RA2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionReq_RA2LTCA& from);
  void MergeFrom(const msgReversePsnymResolutionReq_RA2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionReq_RA2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionReq_RA2LTCA";
  }
  protected:
  explicit msgReversePsnymResolutionReq_RA2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrX509CertFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kINonceFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 6,
  };
  // repeated string strX509Cert = 4;
  int strx509cert_size() const;
  private:
  int _internal_strx509cert_size() const;
  public:
  void clear_strx509cert();
  const std::string& strx509cert(int index) const;
  std::string* mutable_strx509cert(int index);
  void set_strx509cert(int index, const std::string& value);
  void set_strx509cert(int index, std::string&& value);
  void set_strx509cert(int index, const char* value);
  void set_strx509cert(int index, const char* value, size_t size);
  std::string* add_strx509cert();
  void add_strx509cert(const std::string& value);
  void add_strx509cert(std::string&& value);
  void add_strx509cert(const char* value);
  void add_strx509cert(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strx509cert() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strx509cert();
  private:
  const std::string& _internal_strx509cert(int index) const;
  std::string* _internal_add_strx509cert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionReq_RA2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strx509cert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_LTCA2RA_msgTicket PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket) */ {
 public:
  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicket() : msgReversePsnymResolutionRes_LTCA2RA_msgTicket(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_LTCA2RA_msgTicket();

  msgReversePsnymResolutionRes_LTCA2RA_msgTicket(const msgReversePsnymResolutionRes_LTCA2RA_msgTicket& from);
  msgReversePsnymResolutionRes_LTCA2RA_msgTicket(msgReversePsnymResolutionRes_LTCA2RA_msgTicket&& from) noexcept
    : msgReversePsnymResolutionRes_LTCA2RA_msgTicket() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicket& operator=(const msgReversePsnymResolutionRes_LTCA2RA_msgTicket& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicket& operator=(msgReversePsnymResolutionRes_LTCA2RA_msgTicket&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_LTCA2RA_msgTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_LTCA2RA_msgTicket* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_LTCA2RA_msgTicket*>(
               &_msgReversePsnymResolutionRes_LTCA2RA_msgTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(msgReversePsnymResolutionRes_LTCA2RA_msgTicket& a, msgReversePsnymResolutionRes_LTCA2RA_msgTicket& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_LTCA2RA_msgTicket* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_LTCA2RA_msgTicket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicket* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA_msgTicket>(nullptr);
  }

  msgReversePsnymResolutionRes_LTCA2RA_msgTicket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA_msgTicket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_LTCA2RA_msgTicket& from);
  void MergeFrom(const msgReversePsnymResolutionRes_LTCA2RA_msgTicket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_LTCA2RA_msgTicket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket";
  }
  protected:
  explicit msgReversePsnymResolutionRes_LTCA2RA_msgTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStrTicketFieldNumber = 2,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicket = 2 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution) */ {
 public:
  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution() : msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution();

  msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution(const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& from);
  msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution&& from) noexcept
    : msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& operator=(const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& operator=(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution*>(
               &_msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& a, msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution>(nullptr);
  }

  msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& from);
  void MergeFrom(const msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution";
  }
  protected:
  explicit msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketInfoFieldNumber = 3,
    kStrVehX509CertSerialNoFieldNumber = 1,
    kINoOfResolvedTicketFieldNumber = 2,
  };
  // repeated .interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket pstTicketInfo = 3;
  int pstticketinfo_size() const;
  private:
  int _internal_pstticketinfo_size() const;
  public:
  void clear_pstticketinfo();
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* mutable_pstticketinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket >*
      mutable_pstticketinfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket& _internal_pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* _internal_add_pstticketinfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket& pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* add_pstticketinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket >&
      pstticketinfo() const;

  // required string strVehX509CertSerialNo = 1 [default = ""];
  bool has_strvehx509certserialno() const;
  private:
  bool _internal_has_strvehx509certserialno() const;
  public:
  void clear_strvehx509certserialno();
  const std::string& strvehx509certserialno() const;
  void set_strvehx509certserialno(const std::string& value);
  void set_strvehx509certserialno(std::string&& value);
  void set_strvehx509certserialno(const char* value);
  void set_strvehx509certserialno(const char* value, size_t size);
  std::string* mutable_strvehx509certserialno();
  std::string* release_strvehx509certserialno();
  void set_allocated_strvehx509certserialno(std::string* strvehx509certserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strvehx509certserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strvehx509certserialno(
      std::string* strvehx509certserialno);
  private:
  const std::string& _internal_strvehx509certserialno() const;
  void _internal_set_strvehx509certserialno(const std::string& value);
  std::string* _internal_mutable_strvehx509certserialno();
  public:

  // required int32 iNoOfResolvedTicket = 2 [default = -1];
  bool has_inoofresolvedticket() const;
  private:
  bool _internal_has_inoofresolvedticket() const;
  public:
  void clear_inoofresolvedticket();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedticket() const;
  void set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofresolvedticket() const;
  void _internal_set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket > pstticketinfo_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strvehx509certserialno_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_LTCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_LTCA2RA) */ {
 public:
  inline msgReversePsnymResolutionRes_LTCA2RA() : msgReversePsnymResolutionRes_LTCA2RA(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_LTCA2RA();

  msgReversePsnymResolutionRes_LTCA2RA(const msgReversePsnymResolutionRes_LTCA2RA& from);
  msgReversePsnymResolutionRes_LTCA2RA(msgReversePsnymResolutionRes_LTCA2RA&& from) noexcept
    : msgReversePsnymResolutionRes_LTCA2RA() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_LTCA2RA& operator=(const msgReversePsnymResolutionRes_LTCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_LTCA2RA& operator=(msgReversePsnymResolutionRes_LTCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_LTCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_LTCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_LTCA2RA*>(
               &_msgReversePsnymResolutionRes_LTCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(msgReversePsnymResolutionRes_LTCA2RA& a, msgReversePsnymResolutionRes_LTCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_LTCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_LTCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_LTCA2RA* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA>(nullptr);
  }

  msgReversePsnymResolutionRes_LTCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_LTCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_LTCA2RA& from);
  void MergeFrom(const msgReversePsnymResolutionRes_LTCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_LTCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_LTCA2RA";
  }
  protected:
  explicit msgReversePsnymResolutionRes_LTCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgReversePsnymResolutionRes_LTCA2RA_msgTicket msgTicket;
  typedef msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution msgTicketResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 7,
    kStSignFieldNumber = 8,
    kINonceFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 6,
  };
  // repeated .interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution pstTicketResolutionInfo = 4;
  int pstticketresolutioninfo_size() const;
  private:
  int _internal_pstticketresolutioninfo_size() const;
  public:
  void clear_pstticketresolutioninfo();
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* mutable_pstticketresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution >*
      mutable_pstticketresolutioninfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& _internal_pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* _internal_add_pstticketresolutioninfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* add_pstticketresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution >&
      pstticketresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 7;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 8;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_LTCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution > pstticketresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionReq_RA2PCA_msgTicket PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket) */ {
 public:
  inline msgReversePsnymResolutionReq_RA2PCA_msgTicket() : msgReversePsnymResolutionReq_RA2PCA_msgTicket(nullptr) {};
  virtual ~msgReversePsnymResolutionReq_RA2PCA_msgTicket();

  msgReversePsnymResolutionReq_RA2PCA_msgTicket(const msgReversePsnymResolutionReq_RA2PCA_msgTicket& from);
  msgReversePsnymResolutionReq_RA2PCA_msgTicket(msgReversePsnymResolutionReq_RA2PCA_msgTicket&& from) noexcept
    : msgReversePsnymResolutionReq_RA2PCA_msgTicket() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionReq_RA2PCA_msgTicket& operator=(const msgReversePsnymResolutionReq_RA2PCA_msgTicket& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionReq_RA2PCA_msgTicket& operator=(msgReversePsnymResolutionReq_RA2PCA_msgTicket&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionReq_RA2PCA_msgTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionReq_RA2PCA_msgTicket* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionReq_RA2PCA_msgTicket*>(
               &_msgReversePsnymResolutionReq_RA2PCA_msgTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(msgReversePsnymResolutionReq_RA2PCA_msgTicket& a, msgReversePsnymResolutionReq_RA2PCA_msgTicket& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionReq_RA2PCA_msgTicket* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionReq_RA2PCA_msgTicket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionReq_RA2PCA_msgTicket* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA_msgTicket>(nullptr);
  }

  msgReversePsnymResolutionReq_RA2PCA_msgTicket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA_msgTicket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionReq_RA2PCA_msgTicket& from);
  void MergeFrom(const msgReversePsnymResolutionReq_RA2PCA_msgTicket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionReq_RA2PCA_msgTicket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket";
  }
  protected:
  explicit msgReversePsnymResolutionReq_RA2PCA_msgTicket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrTicketSerialNoFieldNumber = 1,
    kStrTicketFieldNumber = 2,
  };
  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicket = 2 [default = ""];
  bool has_strticket() const;
  private:
  bool _internal_has_strticket() const;
  public:
  void clear_strticket();
  const std::string& strticket() const;
  void set_strticket(const std::string& value);
  void set_strticket(std::string&& value);
  void set_strticket(const char* value);
  void set_strticket(const char* value, size_t size);
  std::string* mutable_strticket();
  std::string* release_strticket();
  void set_allocated_strticket(std::string* strticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticket(
      std::string* strticket);
  private:
  const std::string& _internal_strticket() const;
  void _internal_set_strticket(const std::string& value);
  std::string* _internal_mutable_strticket();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution) */ {
 public:
  inline msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution() : msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution(nullptr) {};
  virtual ~msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution();

  msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution(const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& from);
  msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution&& from) noexcept
    : msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& operator=(const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& operator=(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution*>(
               &_msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& a, msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution>(nullptr);
  }

  msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& from);
  void MergeFrom(const msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution";
  }
  protected:
  explicit msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketInfoFieldNumber = 2,
    kINoOfResolvedTicketFieldNumber = 1,
  };
  // repeated .interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket pstTicketInfo = 2;
  int pstticketinfo_size() const;
  private:
  int _internal_pstticketinfo_size() const;
  public:
  void clear_pstticketinfo();
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* mutable_pstticketinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket >*
      mutable_pstticketinfo();
  private:
  const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket& _internal_pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* _internal_add_pstticketinfo();
  public:
  const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket& pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* add_pstticketinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket >&
      pstticketinfo() const;

  // required int32 iNoOfResolvedTicket = 1 [default = -1];
  bool has_inoofresolvedticket() const;
  private:
  bool _internal_has_inoofresolvedticket() const;
  public:
  void clear_inoofresolvedticket();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedticket() const;
  void set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofresolvedticket() const;
  void _internal_set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket > pstticketinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedticket_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionReq_RA2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionReq_RA2PCA) */ {
 public:
  inline msgReversePsnymResolutionReq_RA2PCA() : msgReversePsnymResolutionReq_RA2PCA(nullptr) {};
  virtual ~msgReversePsnymResolutionReq_RA2PCA();

  msgReversePsnymResolutionReq_RA2PCA(const msgReversePsnymResolutionReq_RA2PCA& from);
  msgReversePsnymResolutionReq_RA2PCA(msgReversePsnymResolutionReq_RA2PCA&& from) noexcept
    : msgReversePsnymResolutionReq_RA2PCA() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionReq_RA2PCA& operator=(const msgReversePsnymResolutionReq_RA2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionReq_RA2PCA& operator=(msgReversePsnymResolutionReq_RA2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionReq_RA2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionReq_RA2PCA* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionReq_RA2PCA*>(
               &_msgReversePsnymResolutionReq_RA2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(msgReversePsnymResolutionReq_RA2PCA& a, msgReversePsnymResolutionReq_RA2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionReq_RA2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionReq_RA2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionReq_RA2PCA* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA>(nullptr);
  }

  msgReversePsnymResolutionReq_RA2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionReq_RA2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionReq_RA2PCA& from);
  void MergeFrom(const msgReversePsnymResolutionReq_RA2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionReq_RA2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionReq_RA2PCA";
  }
  protected:
  explicit msgReversePsnymResolutionReq_RA2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgReversePsnymResolutionReq_RA2PCA_msgTicket msgTicket;
  typedef msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution msgTicketResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kINonceFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 6,
  };
  // repeated .interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution pstTicketResolutionInfo = 4;
  int pstticketresolutioninfo_size() const;
  private:
  int _internal_pstticketresolutioninfo_size() const;
  public:
  void clear_pstticketresolutioninfo();
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* mutable_pstticketresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution >*
      mutable_pstticketresolutioninfo();
  private:
  const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& _internal_pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* _internal_add_pstticketresolutioninfo();
  public:
  const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* add_pstticketresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution >&
      pstticketresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionReq_RA2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution > pstticketresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_PCA2RA_msgPsnym PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym) */ {
 public:
  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnym() : msgReversePsnymResolutionRes_PCA2RA_msgPsnym(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_PCA2RA_msgPsnym();

  msgReversePsnymResolutionRes_PCA2RA_msgPsnym(const msgReversePsnymResolutionRes_PCA2RA_msgPsnym& from);
  msgReversePsnymResolutionRes_PCA2RA_msgPsnym(msgReversePsnymResolutionRes_PCA2RA_msgPsnym&& from) noexcept
    : msgReversePsnymResolutionRes_PCA2RA_msgPsnym() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnym& operator=(const msgReversePsnymResolutionRes_PCA2RA_msgPsnym& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnym& operator=(msgReversePsnymResolutionRes_PCA2RA_msgPsnym&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_PCA2RA_msgPsnym& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_PCA2RA_msgPsnym* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_PCA2RA_msgPsnym*>(
               &_msgReversePsnymResolutionRes_PCA2RA_msgPsnym_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(msgReversePsnymResolutionRes_PCA2RA_msgPsnym& a, msgReversePsnymResolutionRes_PCA2RA_msgPsnym& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_PCA2RA_msgPsnym* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_PCA2RA_msgPsnym* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnym* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgPsnym>(nullptr);
  }

  msgReversePsnymResolutionRes_PCA2RA_msgPsnym* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgPsnym>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_PCA2RA_msgPsnym& from);
  void MergeFrom(const msgReversePsnymResolutionRes_PCA2RA_msgPsnym& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_PCA2RA_msgPsnym* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym";
  }
  protected:
  explicit msgReversePsnymResolutionRes_PCA2RA_msgPsnym(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymFieldNumber = 2,
    kStrTicketSerialNoFieldNumber = 1,
  };
  // repeated string strPsnym = 2;
  int strpsnym_size() const;
  private:
  int _internal_strpsnym_size() const;
  public:
  void clear_strpsnym();
  const std::string& strpsnym(int index) const;
  std::string* mutable_strpsnym(int index);
  void set_strpsnym(int index, const std::string& value);
  void set_strpsnym(int index, std::string&& value);
  void set_strpsnym(int index, const char* value);
  void set_strpsnym(int index, const char* value, size_t size);
  std::string* add_strpsnym();
  void add_strpsnym(const std::string& value);
  void add_strpsnym(std::string&& value);
  void add_strpsnym(const char* value);
  void add_strpsnym(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strpsnym() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strpsnym();
  private:
  const std::string& _internal_strpsnym(int index) const;
  std::string* _internal_add_strpsnym();
  public:

  // required string strTicketSerialNo = 1 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strpsnym_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution) */ {
 public:
  inline msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution() : msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution();

  msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution(const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& from);
  msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution&& from) noexcept
    : msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& operator=(const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& operator=(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution*>(
               &_msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& a, msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution>(nullptr);
  }

  msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& from);
  void MergeFrom(const msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution";
  }
  protected:
  explicit msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketInfoFieldNumber = 2,
    kINoOfResolvedPsnymsFieldNumber = 1,
  };
  // repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym pstTicketInfo = 2;
  int pstticketinfo_size() const;
  private:
  int _internal_pstticketinfo_size() const;
  public:
  void clear_pstticketinfo();
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* mutable_pstticketinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym >*
      mutable_pstticketinfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym& _internal_pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* _internal_add_pstticketinfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym& pstticketinfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* add_pstticketinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym >&
      pstticketinfo() const;

  // required int32 iNoOfResolvedPsnyms = 1 [default = -1];
  bool has_inoofresolvedpsnyms() const;
  private:
  bool _internal_has_inoofresolvedpsnyms() const;
  public:
  void clear_inoofresolvedpsnyms();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedpsnyms() const;
  void set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofresolvedpsnyms() const;
  void _internal_set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym > pstticketinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedpsnyms_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution) */ {
 public:
  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution() : msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution();

  msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution(const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution&& from) noexcept
    : msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& operator=(const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& operator=(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution*>(
               &_msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& a, msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution>(nullptr);
  }

  msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  void MergeFrom(const msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution";
  }
  protected:
  explicit msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertSerialNoFieldNumber = 1,
    kStrTicketSerialNoFieldNumber = 2,
    kStrTicketIdentifiableKeyFieldNumber = 3,
  };
  // required string strPsnymCertSerialNo = 1 [default = ""];
  bool has_strpsnymcertserialno() const;
  private:
  bool _internal_has_strpsnymcertserialno() const;
  public:
  void clear_strpsnymcertserialno();
  const std::string& strpsnymcertserialno() const;
  void set_strpsnymcertserialno(const std::string& value);
  void set_strpsnymcertserialno(std::string&& value);
  void set_strpsnymcertserialno(const char* value);
  void set_strpsnymcertserialno(const char* value, size_t size);
  std::string* mutable_strpsnymcertserialno();
  std::string* release_strpsnymcertserialno();
  void set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpsnymcertserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpsnymcertserialno(
      std::string* strpsnymcertserialno);
  private:
  const std::string& _internal_strpsnymcertserialno() const;
  void _internal_set_strpsnymcertserialno(const std::string& value);
  std::string* _internal_mutable_strpsnymcertserialno();
  public:

  // required string strTicketSerialNo = 2 [default = ""];
  bool has_strticketserialno() const;
  private:
  bool _internal_has_strticketserialno() const;
  public:
  void clear_strticketserialno();
  const std::string& strticketserialno() const;
  void set_strticketserialno(const std::string& value);
  void set_strticketserialno(std::string&& value);
  void set_strticketserialno(const char* value);
  void set_strticketserialno(const char* value, size_t size);
  std::string* mutable_strticketserialno();
  std::string* release_strticketserialno();
  void set_allocated_strticketserialno(std::string* strticketserialno);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketserialno();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketserialno(
      std::string* strticketserialno);
  private:
  const std::string& _internal_strticketserialno() const;
  void _internal_set_strticketserialno(const std::string& value);
  std::string* _internal_mutable_strticketserialno();
  public:

  // required string strTicketIdentifiableKey = 3 [default = ""];
  bool has_strticketidentifiablekey() const;
  private:
  bool _internal_has_strticketidentifiablekey() const;
  public:
  void clear_strticketidentifiablekey();
  const std::string& strticketidentifiablekey() const;
  void set_strticketidentifiablekey(const std::string& value);
  void set_strticketidentifiablekey(std::string&& value);
  void set_strticketidentifiablekey(const char* value);
  void set_strticketidentifiablekey(const char* value, size_t size);
  std::string* mutable_strticketidentifiablekey();
  std::string* release_strticketidentifiablekey();
  void set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strticketidentifiablekey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strticketidentifiablekey(
      std::string* strticketidentifiablekey);
  private:
  const std::string& _internal_strticketidentifiablekey() const;
  void _internal_set_strticketidentifiablekey(const std::string& value);
  std::string* _internal_mutable_strticketidentifiablekey();
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpsnymcertserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketserialno_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strticketidentifiablekey_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_PCA2RA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_PCA2RA) */ {
 public:
  inline msgReversePsnymResolutionRes_PCA2RA() : msgReversePsnymResolutionRes_PCA2RA(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_PCA2RA();

  msgReversePsnymResolutionRes_PCA2RA(const msgReversePsnymResolutionRes_PCA2RA& from);
  msgReversePsnymResolutionRes_PCA2RA(msgReversePsnymResolutionRes_PCA2RA&& from) noexcept
    : msgReversePsnymResolutionRes_PCA2RA() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_PCA2RA& operator=(const msgReversePsnymResolutionRes_PCA2RA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_PCA2RA& operator=(msgReversePsnymResolutionRes_PCA2RA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_PCA2RA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_PCA2RA* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_PCA2RA*>(
               &_msgReversePsnymResolutionRes_PCA2RA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(msgReversePsnymResolutionRes_PCA2RA& a, msgReversePsnymResolutionRes_PCA2RA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_PCA2RA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_PCA2RA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_PCA2RA* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA>(nullptr);
  }

  msgReversePsnymResolutionRes_PCA2RA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_PCA2RA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_PCA2RA& from);
  void MergeFrom(const msgReversePsnymResolutionRes_PCA2RA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_PCA2RA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_PCA2RA";
  }
  protected:
  explicit msgReversePsnymResolutionRes_PCA2RA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgReversePsnymResolutionRes_PCA2RA_msgPsnym msgPsnym;
  typedef msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution msgTicketResolution;
  typedef msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstTicketResolutionInfoFieldNumber = 4,
    kPstPsnymResolutionInfoFieldNumber = 5,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 8,
    kStSignFieldNumber = 9,
    kINonceFieldNumber = 6,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 7,
  };
  // repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution pstTicketResolutionInfo = 4;
  int pstticketresolutioninfo_size() const;
  private:
  int _internal_pstticketresolutioninfo_size() const;
  public:
  void clear_pstticketresolutioninfo();
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* mutable_pstticketresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >*
      mutable_pstticketresolutioninfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& _internal_pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* _internal_add_pstticketresolutioninfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& pstticketresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* add_pstticketresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >&
      pstticketresolutioninfo() const;

  // repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 5;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 8;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 9;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 6 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 7 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_PCA2RA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution > pstticketresolutioninfo_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution) */ {
 public:
  inline msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution() : msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution();

  msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution(const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution&& from) noexcept
    : msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& operator=(const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& operator=(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution*>(
               &_msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& a, msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution>(nullptr);
  }

  msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  void MergeFrom(const msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution";
  }
  protected:
  explicit msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPsnymCertFieldNumber = 2,
    kINoOfResolvedPsnymsFieldNumber = 1,
  };
  // repeated string strPsnymCert = 2;
  int strpsnymcert_size() const;
  private:
  int _internal_strpsnymcert_size() const;
  public:
  void clear_strpsnymcert();
  const std::string& strpsnymcert(int index) const;
  std::string* mutable_strpsnymcert(int index);
  void set_strpsnymcert(int index, const std::string& value);
  void set_strpsnymcert(int index, std::string&& value);
  void set_strpsnymcert(int index, const char* value);
  void set_strpsnymcert(int index, const char* value, size_t size);
  std::string* add_strpsnymcert();
  void add_strpsnymcert(const std::string& value);
  void add_strpsnymcert(std::string&& value);
  void add_strpsnymcert(const char* value);
  void add_strpsnymcert(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strpsnymcert() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strpsnymcert();
  private:
  const std::string& _internal_strpsnymcert(int index) const;
  std::string* _internal_add_strpsnymcert();
  public:

  // required int32 iNoOfResolvedPsnyms = 1 [default = -1];
  bool has_inoofresolvedpsnyms() const;
  private:
  bool _internal_has_inoofresolvedpsnyms() const;
  public:
  void clear_inoofresolvedpsnyms();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedpsnyms() const;
  void set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofresolvedpsnyms() const;
  void _internal_set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strpsnymcert_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofresolvedpsnyms_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgReversePsnymResolutionRes_RA2Police PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgReversePsnymResolutionRes_RA2Police) */ {
 public:
  inline msgReversePsnymResolutionRes_RA2Police() : msgReversePsnymResolutionRes_RA2Police(nullptr) {};
  virtual ~msgReversePsnymResolutionRes_RA2Police();

  msgReversePsnymResolutionRes_RA2Police(const msgReversePsnymResolutionRes_RA2Police& from);
  msgReversePsnymResolutionRes_RA2Police(msgReversePsnymResolutionRes_RA2Police&& from) noexcept
    : msgReversePsnymResolutionRes_RA2Police() {
    *this = ::std::move(from);
  }

  inline msgReversePsnymResolutionRes_RA2Police& operator=(const msgReversePsnymResolutionRes_RA2Police& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgReversePsnymResolutionRes_RA2Police& operator=(msgReversePsnymResolutionRes_RA2Police&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgReversePsnymResolutionRes_RA2Police& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgReversePsnymResolutionRes_RA2Police* internal_default_instance() {
    return reinterpret_cast<const msgReversePsnymResolutionRes_RA2Police*>(
               &_msgReversePsnymResolutionRes_RA2Police_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(msgReversePsnymResolutionRes_RA2Police& a, msgReversePsnymResolutionRes_RA2Police& b) {
    a.Swap(&b);
  }
  inline void Swap(msgReversePsnymResolutionRes_RA2Police* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgReversePsnymResolutionRes_RA2Police* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgReversePsnymResolutionRes_RA2Police* New() const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_RA2Police>(nullptr);
  }

  msgReversePsnymResolutionRes_RA2Police* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgReversePsnymResolutionRes_RA2Police>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgReversePsnymResolutionRes_RA2Police& from);
  void MergeFrom(const msgReversePsnymResolutionRes_RA2Police& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgReversePsnymResolutionRes_RA2Police* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgReversePsnymResolutionRes_RA2Police";
  }
  protected:
  explicit msgReversePsnymResolutionRes_RA2Police(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution msgPsnymResolution;

  // accessors -------------------------------------------------------

  enum : int {
    kPstPsnymResolutionInfoFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 7,
    kStSignFieldNumber = 8,
    kINonceFieldNumber = 5,
    kIReqTypeFieldNumber = 1,
    kINoOfX509CertToBeResolvedFieldNumber = 3,
    kTTimeStampFieldNumber = 6,
  };
  // repeated .interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution pstPsnymResolutionInfo = 4;
  int pstpsnymresolutioninfo_size() const;
  private:
  int _internal_pstpsnymresolutioninfo_size() const;
  public:
  void clear_pstpsnymresolutioninfo();
  ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* mutable_pstpsnymresolutioninfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution >*
      mutable_pstpsnymresolutioninfo();
  private:
  const ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& _internal_pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* _internal_add_pstpsnymresolutioninfo();
  public:
  const ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& pstpsnymresolutioninfo(int index) const;
  ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* add_pstpsnymresolutioninfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution >&
      pstpsnymresolutioninfo() const;

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 7;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 8;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
  bool has_inoofx509certtoberesolved() const;
  private:
  bool _internal_has_inoofx509certtoberesolved() const;
  public:
  void clear_inoofx509certtoberesolved();
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved() const;
  void set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inoofx509certtoberesolved() const;
  void _internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgReversePsnymResolutionRes_RA2Police)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution > pstpsnymresolutioninfo_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inoofx509certtoberesolved_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTicketProvisionValidationReq_LTCA2TVR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTicketProvisionValidationReq_LTCA2TVR) */ {
 public:
  inline msgTicketProvisionValidationReq_LTCA2TVR() : msgTicketProvisionValidationReq_LTCA2TVR(nullptr) {};
  virtual ~msgTicketProvisionValidationReq_LTCA2TVR();

  msgTicketProvisionValidationReq_LTCA2TVR(const msgTicketProvisionValidationReq_LTCA2TVR& from);
  msgTicketProvisionValidationReq_LTCA2TVR(msgTicketProvisionValidationReq_LTCA2TVR&& from) noexcept
    : msgTicketProvisionValidationReq_LTCA2TVR() {
    *this = ::std::move(from);
  }

  inline msgTicketProvisionValidationReq_LTCA2TVR& operator=(const msgTicketProvisionValidationReq_LTCA2TVR& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTicketProvisionValidationReq_LTCA2TVR& operator=(msgTicketProvisionValidationReq_LTCA2TVR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTicketProvisionValidationReq_LTCA2TVR& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTicketProvisionValidationReq_LTCA2TVR* internal_default_instance() {
    return reinterpret_cast<const msgTicketProvisionValidationReq_LTCA2TVR*>(
               &_msgTicketProvisionValidationReq_LTCA2TVR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(msgTicketProvisionValidationReq_LTCA2TVR& a, msgTicketProvisionValidationReq_LTCA2TVR& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTicketProvisionValidationReq_LTCA2TVR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTicketProvisionValidationReq_LTCA2TVR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTicketProvisionValidationReq_LTCA2TVR* New() const final {
    return CreateMaybeMessage<msgTicketProvisionValidationReq_LTCA2TVR>(nullptr);
  }

  msgTicketProvisionValidationReq_LTCA2TVR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTicketProvisionValidationReq_LTCA2TVR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTicketProvisionValidationReq_LTCA2TVR& from);
  void MergeFrom(const msgTicketProvisionValidationReq_LTCA2TVR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTicketProvisionValidationReq_LTCA2TVR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTicketProvisionValidationReq_LTCA2TVR";
  }
  protected:
  explicit msgTicketProvisionValidationReq_LTCA2TVR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrLTCAECPubKeyFieldNumber = 3,
    kStrHashedVehiLTCertFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 5,
    kTTimeStampFieldNumber = 6,
  };
  // required string strLTCAECPubKey = 3 [default = ""];
  bool has_strltcaecpubkey() const;
  private:
  bool _internal_has_strltcaecpubkey() const;
  public:
  void clear_strltcaecpubkey();
  const std::string& strltcaecpubkey() const;
  void set_strltcaecpubkey(const std::string& value);
  void set_strltcaecpubkey(std::string&& value);
  void set_strltcaecpubkey(const char* value);
  void set_strltcaecpubkey(const char* value, size_t size);
  std::string* mutable_strltcaecpubkey();
  std::string* release_strltcaecpubkey();
  void set_allocated_strltcaecpubkey(std::string* strltcaecpubkey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strltcaecpubkey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strltcaecpubkey(
      std::string* strltcaecpubkey);
  private:
  const std::string& _internal_strltcaecpubkey() const;
  void _internal_set_strltcaecpubkey(const std::string& value);
  std::string* _internal_mutable_strltcaecpubkey();
  public:

  // required string strHashedVehiLTCert = 4 [default = ""];
  bool has_strhashedvehiltcert() const;
  private:
  bool _internal_has_strhashedvehiltcert() const;
  public:
  void clear_strhashedvehiltcert();
  const std::string& strhashedvehiltcert() const;
  void set_strhashedvehiltcert(const std::string& value);
  void set_strhashedvehiltcert(std::string&& value);
  void set_strhashedvehiltcert(const char* value);
  void set_strhashedvehiltcert(const char* value, size_t size);
  std::string* mutable_strhashedvehiltcert();
  std::string* release_strhashedvehiltcert();
  void set_allocated_strhashedvehiltcert(std::string* strhashedvehiltcert);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strhashedvehiltcert();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strhashedvehiltcert(
      std::string* strhashedvehiltcert);
  private:
  const std::string& _internal_strhashedvehiltcert() const;
  void _internal_set_strhashedvehiltcert(const std::string& value);
  std::string* _internal_mutable_strhashedvehiltcert();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTicketProvisionValidationReq_LTCA2TVR)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strltcaecpubkey_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strhashedvehiltcert_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgTicketProvisionValidationRes_TVR2LTCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgTicketProvisionValidationRes_TVR2LTCA) */ {
 public:
  inline msgTicketProvisionValidationRes_TVR2LTCA() : msgTicketProvisionValidationRes_TVR2LTCA(nullptr) {};
  virtual ~msgTicketProvisionValidationRes_TVR2LTCA();

  msgTicketProvisionValidationRes_TVR2LTCA(const msgTicketProvisionValidationRes_TVR2LTCA& from);
  msgTicketProvisionValidationRes_TVR2LTCA(msgTicketProvisionValidationRes_TVR2LTCA&& from) noexcept
    : msgTicketProvisionValidationRes_TVR2LTCA() {
    *this = ::std::move(from);
  }

  inline msgTicketProvisionValidationRes_TVR2LTCA& operator=(const msgTicketProvisionValidationRes_TVR2LTCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgTicketProvisionValidationRes_TVR2LTCA& operator=(msgTicketProvisionValidationRes_TVR2LTCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgTicketProvisionValidationRes_TVR2LTCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgTicketProvisionValidationRes_TVR2LTCA* internal_default_instance() {
    return reinterpret_cast<const msgTicketProvisionValidationRes_TVR2LTCA*>(
               &_msgTicketProvisionValidationRes_TVR2LTCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(msgTicketProvisionValidationRes_TVR2LTCA& a, msgTicketProvisionValidationRes_TVR2LTCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgTicketProvisionValidationRes_TVR2LTCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgTicketProvisionValidationRes_TVR2LTCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgTicketProvisionValidationRes_TVR2LTCA* New() const final {
    return CreateMaybeMessage<msgTicketProvisionValidationRes_TVR2LTCA>(nullptr);
  }

  msgTicketProvisionValidationRes_TVR2LTCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgTicketProvisionValidationRes_TVR2LTCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgTicketProvisionValidationRes_TVR2LTCA& from);
  void MergeFrom(const msgTicketProvisionValidationRes_TVR2LTCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgTicketProvisionValidationRes_TVR2LTCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgTicketProvisionValidationRes_TVR2LTCA";
  }
  protected:
  explicit msgTicketProvisionValidationRes_TVR2LTCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 6,
    kStSignFieldNumber = 7,
    kChStatusFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 4,
    kTTimeStampFieldNumber = 5,
  };
  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 6;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 chStatus = 3 [default = 0];
  bool has_chstatus() const;
  private:
  bool _internal_has_chstatus() const;
  public:
  void clear_chstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 chstatus() const;
  void set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chstatus() const;
  void _internal_set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 4 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 5 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgTicketProvisionValidationRes_TVR2LTCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chstatus_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymProvisionValidationReq_PCA2PVR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymProvisionValidationReq_PCA2PVR) */ {
 public:
  inline msgPsnymProvisionValidationReq_PCA2PVR() : msgPsnymProvisionValidationReq_PCA2PVR(nullptr) {};
  virtual ~msgPsnymProvisionValidationReq_PCA2PVR();

  msgPsnymProvisionValidationReq_PCA2PVR(const msgPsnymProvisionValidationReq_PCA2PVR& from);
  msgPsnymProvisionValidationReq_PCA2PVR(msgPsnymProvisionValidationReq_PCA2PVR&& from) noexcept
    : msgPsnymProvisionValidationReq_PCA2PVR() {
    *this = ::std::move(from);
  }

  inline msgPsnymProvisionValidationReq_PCA2PVR& operator=(const msgPsnymProvisionValidationReq_PCA2PVR& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymProvisionValidationReq_PCA2PVR& operator=(msgPsnymProvisionValidationReq_PCA2PVR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymProvisionValidationReq_PCA2PVR& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymProvisionValidationReq_PCA2PVR* internal_default_instance() {
    return reinterpret_cast<const msgPsnymProvisionValidationReq_PCA2PVR*>(
               &_msgPsnymProvisionValidationReq_PCA2PVR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(msgPsnymProvisionValidationReq_PCA2PVR& a, msgPsnymProvisionValidationReq_PCA2PVR& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymProvisionValidationReq_PCA2PVR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymProvisionValidationReq_PCA2PVR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymProvisionValidationReq_PCA2PVR* New() const final {
    return CreateMaybeMessage<msgPsnymProvisionValidationReq_PCA2PVR>(nullptr);
  }

  msgPsnymProvisionValidationReq_PCA2PVR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymProvisionValidationReq_PCA2PVR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymProvisionValidationReq_PCA2PVR& from);
  void MergeFrom(const msgPsnymProvisionValidationReq_PCA2PVR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymProvisionValidationReq_PCA2PVR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymProvisionValidationReq_PCA2PVR";
  }
  protected:
  explicit msgPsnymProvisionValidationReq_PCA2PVR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrPCAECPubKeyFieldNumber = 3,
    kStrHashedTicketFieldNumber = 4,
    kStSignerFieldNumber = 2,
    kStSignFieldNumber = 7,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 5,
    kTTimeStampFieldNumber = 6,
  };
  // required string strPCAECPubKey = 3 [default = ""];
  bool has_strpcaecpubkey() const;
  private:
  bool _internal_has_strpcaecpubkey() const;
  public:
  void clear_strpcaecpubkey();
  const std::string& strpcaecpubkey() const;
  void set_strpcaecpubkey(const std::string& value);
  void set_strpcaecpubkey(std::string&& value);
  void set_strpcaecpubkey(const char* value);
  void set_strpcaecpubkey(const char* value, size_t size);
  std::string* mutable_strpcaecpubkey();
  std::string* release_strpcaecpubkey();
  void set_allocated_strpcaecpubkey(std::string* strpcaecpubkey);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strpcaecpubkey();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strpcaecpubkey(
      std::string* strpcaecpubkey);
  private:
  const std::string& _internal_strpcaecpubkey() const;
  void _internal_set_strpcaecpubkey(const std::string& value);
  std::string* _internal_mutable_strpcaecpubkey();
  public:

  // required string strHashedTicket = 4 [default = ""];
  bool has_strhashedticket() const;
  private:
  bool _internal_has_strhashedticket() const;
  public:
  void clear_strhashedticket();
  const std::string& strhashedticket() const;
  void set_strhashedticket(const std::string& value);
  void set_strhashedticket(std::string&& value);
  void set_strhashedticket(const char* value);
  void set_strhashedticket(const char* value, size_t size);
  std::string* mutable_strhashedticket();
  std::string* release_strhashedticket();
  void set_allocated_strhashedticket(std::string* strhashedticket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_strhashedticket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_strhashedticket(
      std::string* strhashedticket);
  private:
  const std::string& _internal_strhashedticket() const;
  void _internal_set_strhashedticket(const std::string& value);
  std::string* _internal_mutable_strhashedticket();
  public:

  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 5 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 6 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymProvisionValidationReq_PCA2PVR)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strpcaecpubkey_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strhashedticket_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// -------------------------------------------------------------------

class msgPsnymProvisionValidationRes_PVR2PCA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:interfaces.msgPsnymProvisionValidationRes_PVR2PCA) */ {
 public:
  inline msgPsnymProvisionValidationRes_PVR2PCA() : msgPsnymProvisionValidationRes_PVR2PCA(nullptr) {};
  virtual ~msgPsnymProvisionValidationRes_PVR2PCA();

  msgPsnymProvisionValidationRes_PVR2PCA(const msgPsnymProvisionValidationRes_PVR2PCA& from);
  msgPsnymProvisionValidationRes_PVR2PCA(msgPsnymProvisionValidationRes_PVR2PCA&& from) noexcept
    : msgPsnymProvisionValidationRes_PVR2PCA() {
    *this = ::std::move(from);
  }

  inline msgPsnymProvisionValidationRes_PVR2PCA& operator=(const msgPsnymProvisionValidationRes_PVR2PCA& from) {
    CopyFrom(from);
    return *this;
  }
  inline msgPsnymProvisionValidationRes_PVR2PCA& operator=(msgPsnymProvisionValidationRes_PVR2PCA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msgPsnymProvisionValidationRes_PVR2PCA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgPsnymProvisionValidationRes_PVR2PCA* internal_default_instance() {
    return reinterpret_cast<const msgPsnymProvisionValidationRes_PVR2PCA*>(
               &_msgPsnymProvisionValidationRes_PVR2PCA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(msgPsnymProvisionValidationRes_PVR2PCA& a, msgPsnymProvisionValidationRes_PVR2PCA& b) {
    a.Swap(&b);
  }
  inline void Swap(msgPsnymProvisionValidationRes_PVR2PCA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msgPsnymProvisionValidationRes_PVR2PCA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msgPsnymProvisionValidationRes_PVR2PCA* New() const final {
    return CreateMaybeMessage<msgPsnymProvisionValidationRes_PVR2PCA>(nullptr);
  }

  msgPsnymProvisionValidationRes_PVR2PCA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msgPsnymProvisionValidationRes_PVR2PCA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msgPsnymProvisionValidationRes_PVR2PCA& from);
  void MergeFrom(const msgPsnymProvisionValidationRes_PVR2PCA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgPsnymProvisionValidationRes_PVR2PCA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "interfaces.msgPsnymProvisionValidationRes_PVR2PCA";
  }
  protected:
  explicit msgPsnymProvisionValidationRes_PVR2PCA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Interfaces_2eproto);
    return ::descriptor_table_Interfaces_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStSignerFieldNumber = 2,
    kStErrInfoFieldNumber = 6,
    kStSignFieldNumber = 7,
    kChStatusFieldNumber = 3,
    kIReqTypeFieldNumber = 1,
    kINonceFieldNumber = 4,
    kTTimeStampFieldNumber = 5,
  };
  // optional .interfaces.msgSignerInfo stSigner = 2;
  bool has_stsigner() const;
  private:
  bool _internal_has_stsigner() const;
  public:
  void clear_stsigner();
  const ::interfaces::msgSignerInfo& stsigner() const;
  ::interfaces::msgSignerInfo* release_stsigner();
  ::interfaces::msgSignerInfo* mutable_stsigner();
  void set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner);
  private:
  const ::interfaces::msgSignerInfo& _internal_stsigner() const;
  ::interfaces::msgSignerInfo* _internal_mutable_stsigner();
  public:
  void unsafe_arena_set_allocated_stsigner(
      ::interfaces::msgSignerInfo* stsigner);
  ::interfaces::msgSignerInfo* unsafe_arena_release_stsigner();

  // required .interfaces.msgError stErrInfo = 6;
  bool has_sterrinfo() const;
  private:
  bool _internal_has_sterrinfo() const;
  public:
  void clear_sterrinfo();
  const ::interfaces::msgError& sterrinfo() const;
  ::interfaces::msgError* release_sterrinfo();
  ::interfaces::msgError* mutable_sterrinfo();
  void set_allocated_sterrinfo(::interfaces::msgError* sterrinfo);
  private:
  const ::interfaces::msgError& _internal_sterrinfo() const;
  ::interfaces::msgError* _internal_mutable_sterrinfo();
  public:
  void unsafe_arena_set_allocated_sterrinfo(
      ::interfaces::msgError* sterrinfo);
  ::interfaces::msgError* unsafe_arena_release_sterrinfo();

  // optional .interfaces.msgSignature stSign = 7;
  bool has_stsign() const;
  private:
  bool _internal_has_stsign() const;
  public:
  void clear_stsign();
  const ::interfaces::msgSignature& stsign() const;
  ::interfaces::msgSignature* release_stsign();
  ::interfaces::msgSignature* mutable_stsign();
  void set_allocated_stsign(::interfaces::msgSignature* stsign);
  private:
  const ::interfaces::msgSignature& _internal_stsign() const;
  ::interfaces::msgSignature* _internal_mutable_stsign();
  public:
  void unsafe_arena_set_allocated_stsign(
      ::interfaces::msgSignature* stsign);
  ::interfaces::msgSignature* unsafe_arena_release_stsign();

  // required uint32 chStatus = 3 [default = 0];
  bool has_chstatus() const;
  private:
  bool _internal_has_chstatus() const;
  public:
  void clear_chstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 chstatus() const;
  void set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chstatus() const;
  void _internal_set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int32 iReqType = 1 [default = -1];
  bool has_ireqtype() const;
  private:
  bool _internal_has_ireqtype() const;
  public:
  void clear_ireqtype();
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype() const;
  void set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ireqtype() const;
  void _internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 iNonce = 4 [default = -1];
  bool has_inonce() const;
  private:
  bool _internal_has_inonce() const;
  public:
  void clear_inonce();
  ::PROTOBUF_NAMESPACE_ID::int32 inonce() const;
  void set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inonce() const;
  void _internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 tTimeStamp = 5 [default = -1];
  bool has_ttimestamp() const;
  private:
  bool _internal_has_ttimestamp() const;
  public:
  void clear_ttimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp() const;
  void set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ttimestamp() const;
  void _internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:interfaces.msgPsnymProvisionValidationRes_PVR2PCA)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::interfaces::msgSignerInfo* stsigner_;
  ::interfaces::msgError* sterrinfo_;
  ::interfaces::msgSignature* stsign_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chstatus_;
  ::PROTOBUF_NAMESPACE_ID::int32 ireqtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 inonce_;
  ::PROTOBUF_NAMESPACE_ID::int64 ttimestamp_;
  friend struct ::TableStruct_Interfaces_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msgReqProfile

// required string strReqIdentification = 1 [default = ""];
inline bool msgReqProfile::_internal_has_strreqidentification() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReqProfile::has_strreqidentification() const {
  return _internal_has_strreqidentification();
}
inline void msgReqProfile::clear_strreqidentification() {
  strreqidentification_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReqProfile::strreqidentification() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReqProfile.strReqIdentification)
  return _internal_strreqidentification();
}
inline void msgReqProfile::set_strreqidentification(const std::string& value) {
  _internal_set_strreqidentification(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReqProfile.strReqIdentification)
}
inline std::string* msgReqProfile::mutable_strreqidentification() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReqProfile.strReqIdentification)
  return _internal_mutable_strreqidentification();
}
inline const std::string& msgReqProfile::_internal_strreqidentification() const {
  return strreqidentification_.Get();
}
inline void msgReqProfile::_internal_set_strreqidentification(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReqProfile::set_strreqidentification(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReqProfile.strReqIdentification)
}
inline void msgReqProfile::set_strreqidentification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReqProfile.strReqIdentification)
}
inline void msgReqProfile::set_strreqidentification(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReqProfile.strReqIdentification)
}
inline std::string* msgReqProfile::_internal_mutable_strreqidentification() {
  _has_bits_[0] |= 0x00000001u;
  return strreqidentification_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReqProfile::release_strreqidentification() {
  // @@protoc_insertion_point(field_release:interfaces.msgReqProfile.strReqIdentification)
  if (!_internal_has_strreqidentification()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReqProfile::set_allocated_strreqidentification(std::string* strreqidentification) {
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strreqidentification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReqProfile.strReqIdentification)
}
inline std::string* msgReqProfile::unsafe_arena_release_strreqidentification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReqProfile.strReqIdentification)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReqProfile::unsafe_arena_set_allocated_strreqidentification(
    std::string* strreqidentification) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strreqidentification, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReqProfile.strReqIdentification)
}

// required int32 iNonce = 2 [default = -1];
inline bool msgReqProfile::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgReqProfile::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReqProfile::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReqProfile::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReqProfile::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReqProfile.iNonce)
  return _internal_inonce();
}
inline void msgReqProfile::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  inonce_ = value;
}
inline void msgReqProfile::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReqProfile.iNonce)
}

// -------------------------------------------------------------------

// msgSignature

// optional uint32 uiCurveOrderOctets = 1 [default = 0];
inline bool msgSignature::_internal_has_uicurveorderoctets() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgSignature::has_uicurveorderoctets() const {
  return _internal_has_uicurveorderoctets();
}
inline void msgSignature::clear_uicurveorderoctets() {
  uicurveorderoctets_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgSignature::_internal_uicurveorderoctets() const {
  return uicurveorderoctets_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgSignature::uicurveorderoctets() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignature.uiCurveOrderOctets)
  return _internal_uicurveorderoctets();
}
inline void msgSignature::_internal_set_uicurveorderoctets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uicurveorderoctets_ = value;
}
inline void msgSignature::set_uicurveorderoctets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uicurveorderoctets(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignature.uiCurveOrderOctets)
}

// optional uint32 uiSignLen = 2 [default = 0];
inline bool msgSignature::_internal_has_uisignlen() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgSignature::has_uisignlen() const {
  return _internal_has_uisignlen();
}
inline void msgSignature::clear_uisignlen() {
  uisignlen_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgSignature::_internal_uisignlen() const {
  return uisignlen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgSignature::uisignlen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignature.uiSignLen)
  return _internal_uisignlen();
}
inline void msgSignature::_internal_set_uisignlen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uisignlen_ = value;
}
inline void msgSignature::set_uisignlen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uisignlen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignature.uiSignLen)
}

// optional string strSignature = 3 [default = ""];
inline bool msgSignature::_internal_has_strsignature() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgSignature::has_strsignature() const {
  return _internal_has_strsignature();
}
inline void msgSignature::clear_strsignature() {
  strsignature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgSignature::strsignature() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignature.strSignature)
  return _internal_strsignature();
}
inline void msgSignature::set_strsignature(const std::string& value) {
  _internal_set_strsignature(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignature.strSignature)
}
inline std::string* msgSignature::mutable_strsignature() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgSignature.strSignature)
  return _internal_mutable_strsignature();
}
inline const std::string& msgSignature::_internal_strsignature() const {
  return strsignature_.Get();
}
inline void msgSignature::_internal_set_strsignature(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strsignature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgSignature::set_strsignature(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strsignature_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgSignature.strSignature)
}
inline void msgSignature::set_strsignature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strsignature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgSignature.strSignature)
}
inline void msgSignature::set_strsignature(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strsignature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgSignature.strSignature)
}
inline std::string* msgSignature::_internal_mutable_strsignature() {
  _has_bits_[0] |= 0x00000001u;
  return strsignature_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgSignature::release_strsignature() {
  // @@protoc_insertion_point(field_release:interfaces.msgSignature.strSignature)
  if (!_internal_has_strsignature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strsignature_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgSignature::set_allocated_strsignature(std::string* strsignature) {
  if (strsignature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strsignature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strsignature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgSignature.strSignature)
}
inline std::string* msgSignature::unsafe_arena_release_strsignature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgSignature.strSignature)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strsignature_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgSignature::unsafe_arena_set_allocated_strsignature(
    std::string* strsignature) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strsignature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strsignature_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strsignature, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgSignature.strSignature)
}

// -------------------------------------------------------------------

// msgError

// required int32 iErrCode = 1 [default = 100];
inline bool msgError::_internal_has_ierrcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgError::has_ierrcode() const {
  return _internal_has_ierrcode();
}
inline void msgError::clear_ierrcode() {
  ierrcode_ = 100;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgError::_internal_ierrcode() const {
  return ierrcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgError::ierrcode() const {
  // @@protoc_insertion_point(field_get:interfaces.msgError.iErrCode)
  return _internal_ierrcode();
}
inline void msgError::_internal_set_ierrcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ierrcode_ = value;
}
inline void msgError::set_ierrcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ierrcode(value);
  // @@protoc_insertion_point(field_set:interfaces.msgError.iErrCode)
}

// required string strErrMsgDes = 2 [default = ""];
inline bool msgError::_internal_has_strerrmsgdes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgError::has_strerrmsgdes() const {
  return _internal_has_strerrmsgdes();
}
inline void msgError::clear_strerrmsgdes() {
  strerrmsgdes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgError::strerrmsgdes() const {
  // @@protoc_insertion_point(field_get:interfaces.msgError.strErrMsgDes)
  return _internal_strerrmsgdes();
}
inline void msgError::set_strerrmsgdes(const std::string& value) {
  _internal_set_strerrmsgdes(value);
  // @@protoc_insertion_point(field_set:interfaces.msgError.strErrMsgDes)
}
inline std::string* msgError::mutable_strerrmsgdes() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgError.strErrMsgDes)
  return _internal_mutable_strerrmsgdes();
}
inline const std::string& msgError::_internal_strerrmsgdes() const {
  return strerrmsgdes_.Get();
}
inline void msgError::_internal_set_strerrmsgdes(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strerrmsgdes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgError::set_strerrmsgdes(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strerrmsgdes_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgError.strErrMsgDes)
}
inline void msgError::set_strerrmsgdes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strerrmsgdes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgError.strErrMsgDes)
}
inline void msgError::set_strerrmsgdes(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strerrmsgdes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgError.strErrMsgDes)
}
inline std::string* msgError::_internal_mutable_strerrmsgdes() {
  _has_bits_[0] |= 0x00000001u;
  return strerrmsgdes_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgError::release_strerrmsgdes() {
  // @@protoc_insertion_point(field_release:interfaces.msgError.strErrMsgDes)
  if (!_internal_has_strerrmsgdes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strerrmsgdes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgError::set_allocated_strerrmsgdes(std::string* strerrmsgdes) {
  if (strerrmsgdes != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strerrmsgdes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strerrmsgdes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgError.strErrMsgDes)
}
inline std::string* msgError::unsafe_arena_release_strerrmsgdes() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgError.strErrMsgDes)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strerrmsgdes_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgError::unsafe_arena_set_allocated_strerrmsgdes(
    std::string* strerrmsgdes) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strerrmsgdes != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strerrmsgdes_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strerrmsgdes, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgError.strErrMsgDes)
}

// -------------------------------------------------------------------

// msgECPublicKey

// required uint32 uiPsnymPublicKeyLen = 1 [default = 0];
inline bool msgECPublicKey::_internal_has_uipsnympublickeylen() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgECPublicKey::has_uipsnympublickeylen() const {
  return _internal_has_uipsnympublickeylen();
}
inline void msgECPublicKey::clear_uipsnympublickeylen() {
  uipsnympublickeylen_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgECPublicKey::_internal_uipsnympublickeylen() const {
  return uipsnympublickeylen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgECPublicKey::uipsnympublickeylen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgECPublicKey.uiPsnymPublicKeyLen)
  return _internal_uipsnympublickeylen();
}
inline void msgECPublicKey::_internal_set_uipsnympublickeylen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uipsnympublickeylen_ = value;
}
inline void msgECPublicKey::set_uipsnympublickeylen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uipsnympublickeylen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgECPublicKey.uiPsnymPublicKeyLen)
}

// required string strPsnymPublicKey = 2 [default = ""];
inline bool msgECPublicKey::_internal_has_strpsnympublickey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgECPublicKey::has_strpsnympublickey() const {
  return _internal_has_strpsnympublickey();
}
inline void msgECPublicKey::clear_strpsnympublickey() {
  strpsnympublickey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgECPublicKey::strpsnympublickey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgECPublicKey.strPsnymPublicKey)
  return _internal_strpsnympublickey();
}
inline void msgECPublicKey::set_strpsnympublickey(const std::string& value) {
  _internal_set_strpsnympublickey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgECPublicKey.strPsnymPublicKey)
}
inline std::string* msgECPublicKey::mutable_strpsnympublickey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgECPublicKey.strPsnymPublicKey)
  return _internal_mutable_strpsnympublickey();
}
inline const std::string& msgECPublicKey::_internal_strpsnympublickey() const {
  return strpsnympublickey_.Get();
}
inline void msgECPublicKey::_internal_set_strpsnympublickey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnympublickey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgECPublicKey::set_strpsnympublickey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnympublickey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgECPublicKey.strPsnymPublicKey)
}
inline void msgECPublicKey::set_strpsnympublickey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnympublickey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgECPublicKey.strPsnymPublicKey)
}
inline void msgECPublicKey::set_strpsnympublickey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnympublickey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgECPublicKey.strPsnymPublicKey)
}
inline std::string* msgECPublicKey::_internal_mutable_strpsnympublickey() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnympublickey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgECPublicKey::release_strpsnympublickey() {
  // @@protoc_insertion_point(field_release:interfaces.msgECPublicKey.strPsnymPublicKey)
  if (!_internal_has_strpsnympublickey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnympublickey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgECPublicKey::set_allocated_strpsnympublickey(std::string* strpsnympublickey) {
  if (strpsnympublickey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnympublickey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnympublickey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgECPublicKey.strPsnymPublicKey)
}
inline std::string* msgECPublicKey::unsafe_arena_release_strpsnympublickey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgECPublicKey.strPsnymPublicKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnympublickey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgECPublicKey::unsafe_arena_set_allocated_strpsnympublickey(
    std::string* strpsnympublickey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnympublickey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnympublickey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnympublickey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgECPublicKey.strPsnymPublicKey)
}

// -------------------------------------------------------------------

// msgSignerIdentifierType

// -------------------------------------------------------------------

// msgSubType

// -------------------------------------------------------------------

// msgSubTypeFlags

// -------------------------------------------------------------------

// msgAIDType

// -------------------------------------------------------------------

// msgRegionType

// -------------------------------------------------------------------

// msgWSASignerScope

// -------------------------------------------------------------------

// msgRequestScopeType

// -------------------------------------------------------------------

// msgVoucherReq_V2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgVoucherReq_V2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgVoucherReq_V2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherReq_V2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherReq_V2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgVoucherReq_V2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgVoucherReq_V2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.iReqType)
}

// required string strUserName = 2 [default = ""];
inline bool msgVoucherReq_V2LTCA::_internal_has_strusername() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_strusername() const {
  return _internal_has_strusername();
}
inline void msgVoucherReq_V2LTCA::clear_strusername() {
  strusername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgVoucherReq_V2LTCA::strusername() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.strUserName)
  return _internal_strusername();
}
inline void msgVoucherReq_V2LTCA::set_strusername(const std::string& value) {
  _internal_set_strusername(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.strUserName)
}
inline std::string* msgVoucherReq_V2LTCA::mutable_strusername() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherReq_V2LTCA.strUserName)
  return _internal_mutable_strusername();
}
inline const std::string& msgVoucherReq_V2LTCA::_internal_strusername() const {
  return strusername_.Get();
}
inline void msgVoucherReq_V2LTCA::_internal_set_strusername(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVoucherReq_V2LTCA::set_strusername(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strusername_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVoucherReq_V2LTCA.strUserName)
}
inline void msgVoucherReq_V2LTCA::set_strusername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVoucherReq_V2LTCA.strUserName)
}
inline void msgVoucherReq_V2LTCA::set_strusername(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strusername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVoucherReq_V2LTCA.strUserName)
}
inline std::string* msgVoucherReq_V2LTCA::_internal_mutable_strusername() {
  _has_bits_[0] |= 0x00000001u;
  return strusername_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVoucherReq_V2LTCA::release_strusername() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherReq_V2LTCA.strUserName)
  if (!_internal_has_strusername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strusername_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVoucherReq_V2LTCA::set_allocated_strusername(std::string* strusername) {
  if (strusername != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strusername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strusername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherReq_V2LTCA.strUserName)
}
inline std::string* msgVoucherReq_V2LTCA::unsafe_arena_release_strusername() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVoucherReq_V2LTCA.strUserName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strusername_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVoucherReq_V2LTCA::unsafe_arena_set_allocated_strusername(
    std::string* strusername) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strusername != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strusername_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strusername, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherReq_V2LTCA.strUserName)
}

// required string strPwd = 3 [default = ""];
inline bool msgVoucherReq_V2LTCA::_internal_has_strpwd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_strpwd() const {
  return _internal_has_strpwd();
}
inline void msgVoucherReq_V2LTCA::clear_strpwd() {
  strpwd_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgVoucherReq_V2LTCA::strpwd() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.strPwd)
  return _internal_strpwd();
}
inline void msgVoucherReq_V2LTCA::set_strpwd(const std::string& value) {
  _internal_set_strpwd(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.strPwd)
}
inline std::string* msgVoucherReq_V2LTCA::mutable_strpwd() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherReq_V2LTCA.strPwd)
  return _internal_mutable_strpwd();
}
inline const std::string& msgVoucherReq_V2LTCA::_internal_strpwd() const {
  return strpwd_.Get();
}
inline void msgVoucherReq_V2LTCA::_internal_set_strpwd(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strpwd_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVoucherReq_V2LTCA::set_strpwd(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strpwd_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVoucherReq_V2LTCA.strPwd)
}
inline void msgVoucherReq_V2LTCA::set_strpwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strpwd_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVoucherReq_V2LTCA.strPwd)
}
inline void msgVoucherReq_V2LTCA::set_strpwd(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strpwd_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVoucherReq_V2LTCA.strPwd)
}
inline std::string* msgVoucherReq_V2LTCA::_internal_mutable_strpwd() {
  _has_bits_[0] |= 0x00000002u;
  return strpwd_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVoucherReq_V2LTCA::release_strpwd() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherReq_V2LTCA.strPwd)
  if (!_internal_has_strpwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strpwd_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVoucherReq_V2LTCA::set_allocated_strpwd(std::string* strpwd) {
  if (strpwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpwd_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpwd,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherReq_V2LTCA.strPwd)
}
inline std::string* msgVoucherReq_V2LTCA::unsafe_arena_release_strpwd() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVoucherReq_V2LTCA.strPwd)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strpwd_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVoucherReq_V2LTCA::unsafe_arena_set_allocated_strpwd(
    std::string* strpwd) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpwd_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpwd, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherReq_V2LTCA.strPwd)
}

// required string strEmailAddress = 4 [default = ""];
inline bool msgVoucherReq_V2LTCA::_internal_has_stremailaddress() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_stremailaddress() const {
  return _internal_has_stremailaddress();
}
inline void msgVoucherReq_V2LTCA::clear_stremailaddress() {
  stremailaddress_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgVoucherReq_V2LTCA::stremailaddress() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
  return _internal_stremailaddress();
}
inline void msgVoucherReq_V2LTCA::set_stremailaddress(const std::string& value) {
  _internal_set_stremailaddress(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}
inline std::string* msgVoucherReq_V2LTCA::mutable_stremailaddress() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
  return _internal_mutable_stremailaddress();
}
inline const std::string& msgVoucherReq_V2LTCA::_internal_stremailaddress() const {
  return stremailaddress_.Get();
}
inline void msgVoucherReq_V2LTCA::_internal_set_stremailaddress(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  stremailaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVoucherReq_V2LTCA::set_stremailaddress(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  stremailaddress_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}
inline void msgVoucherReq_V2LTCA::set_stremailaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  stremailaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}
inline void msgVoucherReq_V2LTCA::set_stremailaddress(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  stremailaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}
inline std::string* msgVoucherReq_V2LTCA::_internal_mutable_stremailaddress() {
  _has_bits_[0] |= 0x00000004u;
  return stremailaddress_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVoucherReq_V2LTCA::release_stremailaddress() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
  if (!_internal_has_stremailaddress()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return stremailaddress_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVoucherReq_V2LTCA::set_allocated_stremailaddress(std::string* stremailaddress) {
  if (stremailaddress != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stremailaddress_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stremailaddress,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}
inline std::string* msgVoucherReq_V2LTCA::unsafe_arena_release_stremailaddress() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return stremailaddress_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVoucherReq_V2LTCA::unsafe_arena_set_allocated_stremailaddress(
    std::string* stremailaddress) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stremailaddress != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stremailaddress_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stremailaddress, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherReq_V2LTCA.strEmailAddress)
}

// required string strCaptcha = 5 [default = ""];
inline bool msgVoucherReq_V2LTCA::_internal_has_strcaptcha() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_strcaptcha() const {
  return _internal_has_strcaptcha();
}
inline void msgVoucherReq_V2LTCA::clear_strcaptcha() {
  strcaptcha_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& msgVoucherReq_V2LTCA::strcaptcha() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
  return _internal_strcaptcha();
}
inline void msgVoucherReq_V2LTCA::set_strcaptcha(const std::string& value) {
  _internal_set_strcaptcha(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}
inline std::string* msgVoucherReq_V2LTCA::mutable_strcaptcha() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
  return _internal_mutable_strcaptcha();
}
inline const std::string& msgVoucherReq_V2LTCA::_internal_strcaptcha() const {
  return strcaptcha_.Get();
}
inline void msgVoucherReq_V2LTCA::_internal_set_strcaptcha(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  strcaptcha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVoucherReq_V2LTCA::set_strcaptcha(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  strcaptcha_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}
inline void msgVoucherReq_V2LTCA::set_strcaptcha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  strcaptcha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}
inline void msgVoucherReq_V2LTCA::set_strcaptcha(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  strcaptcha_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}
inline std::string* msgVoucherReq_V2LTCA::_internal_mutable_strcaptcha() {
  _has_bits_[0] |= 0x00000008u;
  return strcaptcha_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVoucherReq_V2LTCA::release_strcaptcha() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
  if (!_internal_has_strcaptcha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return strcaptcha_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVoucherReq_V2LTCA::set_allocated_strcaptcha(std::string* strcaptcha) {
  if (strcaptcha != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strcaptcha_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcaptcha,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}
inline std::string* msgVoucherReq_V2LTCA::unsafe_arena_release_strcaptcha() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return strcaptcha_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVoucherReq_V2LTCA::unsafe_arena_set_allocated_strcaptcha(
    std::string* strcaptcha) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strcaptcha != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strcaptcha_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strcaptcha, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherReq_V2LTCA.strCaptcha)
}

// required int32 iNonce = 6 [default = -1];
inline bool msgVoucherReq_V2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgVoucherReq_V2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherReq_V2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherReq_V2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgVoucherReq_V2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgVoucherReq_V2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.iNonce)
}

// required int64 tTimeStamp = 7 [default = -1];
inline bool msgVoucherReq_V2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVoucherReq_V2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgVoucherReq_V2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgVoucherReq_V2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgVoucherReq_V2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherReq_V2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgVoucherReq_V2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgVoucherReq_V2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherReq_V2LTCA.tTimeStamp)
}

// -------------------------------------------------------------------

// msgVoucherRes_LTCA2V

// required int32 iReqType = 1 [default = -1];
inline bool msgVoucherRes_LTCA2V::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgVoucherRes_LTCA2V::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherRes_LTCA2V::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherRes_LTCA2V::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.iReqType)
  return _internal_ireqtype();
}
inline void msgVoucherRes_LTCA2V::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgVoucherRes_LTCA2V::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherRes_LTCA2V.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgVoucherRes_LTCA2V::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgVoucherRes_LTCA2V::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgVoucherRes_LTCA2V::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgVoucherRes_LTCA2V::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.stSigner)
  return _internal_stsigner();
}
inline void msgVoucherRes_LTCA2V::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherRes_LTCA2V.stSigner)
}
inline ::interfaces::msgSignerInfo* msgVoucherRes_LTCA2V::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgVoucherRes_LTCA2V::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherRes_LTCA2V.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgVoucherRes_LTCA2V::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgVoucherRes_LTCA2V::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherRes_LTCA2V.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgVoucherRes_LTCA2V::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherRes_LTCA2V.stSigner)
}

// required string strVoucher = 3 [default = ""];
inline bool msgVoucherRes_LTCA2V::_internal_has_strvoucher() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_strvoucher() const {
  return _internal_has_strvoucher();
}
inline void msgVoucherRes_LTCA2V::clear_strvoucher() {
  strvoucher_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgVoucherRes_LTCA2V::strvoucher() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.strVoucher)
  return _internal_strvoucher();
}
inline void msgVoucherRes_LTCA2V::set_strvoucher(const std::string& value) {
  _internal_set_strvoucher(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}
inline std::string* msgVoucherRes_LTCA2V::mutable_strvoucher() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherRes_LTCA2V.strVoucher)
  return _internal_mutable_strvoucher();
}
inline const std::string& msgVoucherRes_LTCA2V::_internal_strvoucher() const {
  return strvoucher_.Get();
}
inline void msgVoucherRes_LTCA2V::_internal_set_strvoucher(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVoucherRes_LTCA2V::set_strvoucher(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strvoucher_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}
inline void msgVoucherRes_LTCA2V::set_strvoucher(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}
inline void msgVoucherRes_LTCA2V::set_strvoucher(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}
inline std::string* msgVoucherRes_LTCA2V::_internal_mutable_strvoucher() {
  _has_bits_[0] |= 0x00000001u;
  return strvoucher_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVoucherRes_LTCA2V::release_strvoucher() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherRes_LTCA2V.strVoucher)
  if (!_internal_has_strvoucher()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strvoucher_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVoucherRes_LTCA2V::set_allocated_strvoucher(std::string* strvoucher) {
  if (strvoucher != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strvoucher_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strvoucher,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}
inline std::string* msgVoucherRes_LTCA2V::unsafe_arena_release_strvoucher() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVoucherRes_LTCA2V.strVoucher)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strvoucher_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVoucherRes_LTCA2V::unsafe_arena_set_allocated_strvoucher(
    std::string* strvoucher) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strvoucher != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strvoucher_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strvoucher, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherRes_LTCA2V.strVoucher)
}

// required int32 iNonce = 4 [default = -1];
inline bool msgVoucherRes_LTCA2V::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgVoucherRes_LTCA2V::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherRes_LTCA2V::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVoucherRes_LTCA2V::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.iNonce)
  return _internal_inonce();
}
inline void msgVoucherRes_LTCA2V::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgVoucherRes_LTCA2V::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherRes_LTCA2V.iNonce)
}

// required int64 tTimeStamp = 5 [default = -1];
inline bool msgVoucherRes_LTCA2V::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgVoucherRes_LTCA2V::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgVoucherRes_LTCA2V::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgVoucherRes_LTCA2V::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgVoucherRes_LTCA2V::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgVoucherRes_LTCA2V::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVoucherRes_LTCA2V.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 6;
inline bool msgVoucherRes_LTCA2V::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgVoucherRes_LTCA2V::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgVoucherRes_LTCA2V::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgVoucherRes_LTCA2V::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgVoucherRes_LTCA2V::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherRes_LTCA2V.stErrInfo)
}
inline ::interfaces::msgError* msgVoucherRes_LTCA2V::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgVoucherRes_LTCA2V::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherRes_LTCA2V.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgVoucherRes_LTCA2V::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgVoucherRes_LTCA2V::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherRes_LTCA2V.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgVoucherRes_LTCA2V::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherRes_LTCA2V.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgVoucherRes_LTCA2V::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgVoucherRes_LTCA2V::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgVoucherRes_LTCA2V::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgVoucherRes_LTCA2V::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgVoucherRes_LTCA2V::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVoucherRes_LTCA2V.stSign)
  return _internal_stsign();
}
inline void msgVoucherRes_LTCA2V::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVoucherRes_LTCA2V.stSign)
}
inline ::interfaces::msgSignature* msgVoucherRes_LTCA2V::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgVoucherRes_LTCA2V::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgVoucherRes_LTCA2V.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgVoucherRes_LTCA2V::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgVoucherRes_LTCA2V::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVoucherRes_LTCA2V.stSign)
  return _internal_mutable_stsign();
}
inline void msgVoucherRes_LTCA2V::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVoucherRes_LTCA2V.stSign)
}

// -------------------------------------------------------------------

// msgX509CertReq_V2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgX509CertReq_V2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgX509CertReq_V2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgX509CertReq_V2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ireqtype_ = value;
}
inline void msgX509CertReq_V2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.iReqType)
}

// required int32 iLTCAIdRange = 2 [default = -1];
inline bool msgX509CertReq_V2LTCA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgX509CertReq_V2LTCA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgX509CertReq_V2LTCA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iltcaidrange_ = value;
}
inline void msgX509CertReq_V2LTCA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.iLTCAIdRange)
}

// required string strProofOfPossessionVoucher = 3 [default = ""];
inline bool msgX509CertReq_V2LTCA::_internal_has_strproofofpossessionvoucher() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_strproofofpossessionvoucher() const {
  return _internal_has_strproofofpossessionvoucher();
}
inline void msgX509CertReq_V2LTCA::clear_strproofofpossessionvoucher() {
  strproofofpossessionvoucher_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgX509CertReq_V2LTCA::strproofofpossessionvoucher() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
  return _internal_strproofofpossessionvoucher();
}
inline void msgX509CertReq_V2LTCA::set_strproofofpossessionvoucher(const std::string& value) {
  _internal_set_strproofofpossessionvoucher(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}
inline std::string* msgX509CertReq_V2LTCA::mutable_strproofofpossessionvoucher() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
  return _internal_mutable_strproofofpossessionvoucher();
}
inline const std::string& msgX509CertReq_V2LTCA::_internal_strproofofpossessionvoucher() const {
  return strproofofpossessionvoucher_.Get();
}
inline void msgX509CertReq_V2LTCA::_internal_set_strproofofpossessionvoucher(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strproofofpossessionvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertReq_V2LTCA::set_strproofofpossessionvoucher(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strproofofpossessionvoucher_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}
inline void msgX509CertReq_V2LTCA::set_strproofofpossessionvoucher(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strproofofpossessionvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}
inline void msgX509CertReq_V2LTCA::set_strproofofpossessionvoucher(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strproofofpossessionvoucher_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}
inline std::string* msgX509CertReq_V2LTCA::_internal_mutable_strproofofpossessionvoucher() {
  _has_bits_[0] |= 0x00000001u;
  return strproofofpossessionvoucher_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertReq_V2LTCA::release_strproofofpossessionvoucher() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
  if (!_internal_has_strproofofpossessionvoucher()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strproofofpossessionvoucher_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertReq_V2LTCA::set_allocated_strproofofpossessionvoucher(std::string* strproofofpossessionvoucher) {
  if (strproofofpossessionvoucher != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strproofofpossessionvoucher_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strproofofpossessionvoucher,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}
inline std::string* msgX509CertReq_V2LTCA::unsafe_arena_release_strproofofpossessionvoucher() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strproofofpossessionvoucher_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertReq_V2LTCA::unsafe_arena_set_allocated_strproofofpossessionvoucher(
    std::string* strproofofpossessionvoucher) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strproofofpossessionvoucher != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strproofofpossessionvoucher_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strproofofpossessionvoucher, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertReq_V2LTCA.strProofOfPossessionVoucher)
}

// required string strDNSExtension = 4 [default = ""];
inline bool msgX509CertReq_V2LTCA::_internal_has_strdnsextension() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_strdnsextension() const {
  return _internal_has_strdnsextension();
}
inline void msgX509CertReq_V2LTCA::clear_strdnsextension() {
  strdnsextension_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgX509CertReq_V2LTCA::strdnsextension() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
  return _internal_strdnsextension();
}
inline void msgX509CertReq_V2LTCA::set_strdnsextension(const std::string& value) {
  _internal_set_strdnsextension(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}
inline std::string* msgX509CertReq_V2LTCA::mutable_strdnsextension() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
  return _internal_mutable_strdnsextension();
}
inline const std::string& msgX509CertReq_V2LTCA::_internal_strdnsextension() const {
  return strdnsextension_.Get();
}
inline void msgX509CertReq_V2LTCA::_internal_set_strdnsextension(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strdnsextension_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertReq_V2LTCA::set_strdnsextension(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strdnsextension_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}
inline void msgX509CertReq_V2LTCA::set_strdnsextension(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strdnsextension_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}
inline void msgX509CertReq_V2LTCA::set_strdnsextension(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strdnsextension_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}
inline std::string* msgX509CertReq_V2LTCA::_internal_mutable_strdnsextension() {
  _has_bits_[0] |= 0x00000002u;
  return strdnsextension_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertReq_V2LTCA::release_strdnsextension() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
  if (!_internal_has_strdnsextension()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strdnsextension_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertReq_V2LTCA::set_allocated_strdnsextension(std::string* strdnsextension) {
  if (strdnsextension != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strdnsextension_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strdnsextension,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}
inline std::string* msgX509CertReq_V2LTCA::unsafe_arena_release_strdnsextension() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strdnsextension_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertReq_V2LTCA::unsafe_arena_set_allocated_strdnsextension(
    std::string* strdnsextension) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strdnsextension != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strdnsextension_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strdnsextension, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertReq_V2LTCA.strDNSExtension)
}

// optional string strKeyUsage = 5 [default = ""];
inline bool msgX509CertReq_V2LTCA::_internal_has_strkeyusage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_strkeyusage() const {
  return _internal_has_strkeyusage();
}
inline void msgX509CertReq_V2LTCA::clear_strkeyusage() {
  strkeyusage_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgX509CertReq_V2LTCA::strkeyusage() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
  return _internal_strkeyusage();
}
inline void msgX509CertReq_V2LTCA::set_strkeyusage(const std::string& value) {
  _internal_set_strkeyusage(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::mutable_strkeyusage() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
  return _internal_mutable_strkeyusage();
}
inline const std::string& msgX509CertReq_V2LTCA::_internal_strkeyusage() const {
  return strkeyusage_.Get();
}
inline void msgX509CertReq_V2LTCA::_internal_set_strkeyusage(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertReq_V2LTCA::set_strkeyusage(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strkeyusage_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}
inline void msgX509CertReq_V2LTCA::set_strkeyusage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}
inline void msgX509CertReq_V2LTCA::set_strkeyusage(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::_internal_mutable_strkeyusage() {
  _has_bits_[0] |= 0x00000004u;
  return strkeyusage_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertReq_V2LTCA::release_strkeyusage() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
  if (!_internal_has_strkeyusage()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strkeyusage_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertReq_V2LTCA::set_allocated_strkeyusage(std::string* strkeyusage) {
  if (strkeyusage != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strkeyusage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strkeyusage,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::unsafe_arena_release_strkeyusage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strkeyusage_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertReq_V2LTCA::unsafe_arena_set_allocated_strkeyusage(
    std::string* strkeyusage) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strkeyusage != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strkeyusage_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strkeyusage, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertReq_V2LTCA.strKeyUsage)
}

// optional string strExtendedKeyUsage = 6 [default = ""];
inline bool msgX509CertReq_V2LTCA::_internal_has_strextendedkeyusage() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_strextendedkeyusage() const {
  return _internal_has_strextendedkeyusage();
}
inline void msgX509CertReq_V2LTCA::clear_strextendedkeyusage() {
  strextendedkeyusage_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& msgX509CertReq_V2LTCA::strextendedkeyusage() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
  return _internal_strextendedkeyusage();
}
inline void msgX509CertReq_V2LTCA::set_strextendedkeyusage(const std::string& value) {
  _internal_set_strextendedkeyusage(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::mutable_strextendedkeyusage() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
  return _internal_mutable_strextendedkeyusage();
}
inline const std::string& msgX509CertReq_V2LTCA::_internal_strextendedkeyusage() const {
  return strextendedkeyusage_.Get();
}
inline void msgX509CertReq_V2LTCA::_internal_set_strextendedkeyusage(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  strextendedkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertReq_V2LTCA::set_strextendedkeyusage(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  strextendedkeyusage_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}
inline void msgX509CertReq_V2LTCA::set_strextendedkeyusage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  strextendedkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}
inline void msgX509CertReq_V2LTCA::set_strextendedkeyusage(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  strextendedkeyusage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::_internal_mutable_strextendedkeyusage() {
  _has_bits_[0] |= 0x00000008u;
  return strextendedkeyusage_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertReq_V2LTCA::release_strextendedkeyusage() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
  if (!_internal_has_strextendedkeyusage()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return strextendedkeyusage_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertReq_V2LTCA::set_allocated_strextendedkeyusage(std::string* strextendedkeyusage) {
  if (strextendedkeyusage != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strextendedkeyusage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strextendedkeyusage,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}
inline std::string* msgX509CertReq_V2LTCA::unsafe_arena_release_strextendedkeyusage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return strextendedkeyusage_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertReq_V2LTCA::unsafe_arena_set_allocated_strextendedkeyusage(
    std::string* strextendedkeyusage) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strextendedkeyusage != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strextendedkeyusage_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strextendedkeyusage, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertReq_V2LTCA.strExtendedKeyUsage)
}

// required string strX509CertReq = 7 [default = ""];
inline bool msgX509CertReq_V2LTCA::_internal_has_strx509certreq() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_strx509certreq() const {
  return _internal_has_strx509certreq();
}
inline void msgX509CertReq_V2LTCA::clear_strx509certreq() {
  strx509certreq_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& msgX509CertReq_V2LTCA::strx509certreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
  return _internal_strx509certreq();
}
inline void msgX509CertReq_V2LTCA::set_strx509certreq(const std::string& value) {
  _internal_set_strx509certreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}
inline std::string* msgX509CertReq_V2LTCA::mutable_strx509certreq() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
  return _internal_mutable_strx509certreq();
}
inline const std::string& msgX509CertReq_V2LTCA::_internal_strx509certreq() const {
  return strx509certreq_.Get();
}
inline void msgX509CertReq_V2LTCA::_internal_set_strx509certreq(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  strx509certreq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertReq_V2LTCA::set_strx509certreq(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  strx509certreq_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}
inline void msgX509CertReq_V2LTCA::set_strx509certreq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  strx509certreq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}
inline void msgX509CertReq_V2LTCA::set_strx509certreq(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  strx509certreq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}
inline std::string* msgX509CertReq_V2LTCA::_internal_mutable_strx509certreq() {
  _has_bits_[0] |= 0x00000010u;
  return strx509certreq_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertReq_V2LTCA::release_strx509certreq() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
  if (!_internal_has_strx509certreq()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return strx509certreq_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertReq_V2LTCA::set_allocated_strx509certreq(std::string* strx509certreq) {
  if (strx509certreq != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strx509certreq_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strx509certreq,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}
inline std::string* msgX509CertReq_V2LTCA::unsafe_arena_release_strx509certreq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000010u;
  return strx509certreq_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertReq_V2LTCA::unsafe_arena_set_allocated_strx509certreq(
    std::string* strx509certreq) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strx509certreq != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strx509certreq_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strx509certreq, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertReq_V2LTCA.strX509CertReq)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgX509CertReq_V2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgX509CertReq_V2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertReq_V2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgX509CertReq_V2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgX509CertReq_V2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgX509CertReq_V2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgX509CertReq_V2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgX509CertReq_V2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgX509CertReq_V2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgX509CertReq_V2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertReq_V2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgX509CertReq_V2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgX509CertReq_V2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertReq_V2LTCA.tTimeStamp)
}

// -------------------------------------------------------------------

// msgX509CertRes_LTCA2V

// required int32 iReqType = 1 [default = -1];
inline bool msgX509CertRes_LTCA2V::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgX509CertRes_LTCA2V::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertRes_LTCA2V::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertRes_LTCA2V::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.iReqType)
  return _internal_ireqtype();
}
inline void msgX509CertRes_LTCA2V::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgX509CertRes_LTCA2V::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertRes_LTCA2V.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgX509CertRes_LTCA2V::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgX509CertRes_LTCA2V::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignerInfo& msgX509CertRes_LTCA2V::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgX509CertRes_LTCA2V::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.stSigner)
  return _internal_stsigner();
}
inline void msgX509CertRes_LTCA2V::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertRes_LTCA2V.stSigner)
}
inline ::interfaces::msgSignerInfo* msgX509CertRes_LTCA2V::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgX509CertRes_LTCA2V::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertRes_LTCA2V.stSigner)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgX509CertRes_LTCA2V::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000004u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgX509CertRes_LTCA2V::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertRes_LTCA2V.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgX509CertRes_LTCA2V::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertRes_LTCA2V.stSigner)
}

// required string strReqIdentification = 3 [default = ""];
inline bool msgX509CertRes_LTCA2V::_internal_has_strreqidentification() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_strreqidentification() const {
  return _internal_has_strreqidentification();
}
inline void msgX509CertRes_LTCA2V::clear_strreqidentification() {
  strreqidentification_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgX509CertRes_LTCA2V::strreqidentification() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
  return _internal_strreqidentification();
}
inline void msgX509CertRes_LTCA2V::set_strreqidentification(const std::string& value) {
  _internal_set_strreqidentification(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}
inline std::string* msgX509CertRes_LTCA2V::mutable_strreqidentification() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
  return _internal_mutable_strreqidentification();
}
inline const std::string& msgX509CertRes_LTCA2V::_internal_strreqidentification() const {
  return strreqidentification_.Get();
}
inline void msgX509CertRes_LTCA2V::_internal_set_strreqidentification(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertRes_LTCA2V::set_strreqidentification(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}
inline void msgX509CertRes_LTCA2V::set_strreqidentification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}
inline void msgX509CertRes_LTCA2V::set_strreqidentification(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}
inline std::string* msgX509CertRes_LTCA2V::_internal_mutable_strreqidentification() {
  _has_bits_[0] |= 0x00000001u;
  return strreqidentification_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertRes_LTCA2V::release_strreqidentification() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
  if (!_internal_has_strreqidentification()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertRes_LTCA2V::set_allocated_strreqidentification(std::string* strreqidentification) {
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strreqidentification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}
inline std::string* msgX509CertRes_LTCA2V::unsafe_arena_release_strreqidentification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertRes_LTCA2V::unsafe_arena_set_allocated_strreqidentification(
    std::string* strreqidentification) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strreqidentification, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertRes_LTCA2V.strReqIdentification)
}

// required string strX509Cert = 4 [default = ""];
inline bool msgX509CertRes_LTCA2V::_internal_has_strx509cert() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_strx509cert() const {
  return _internal_has_strx509cert();
}
inline void msgX509CertRes_LTCA2V::clear_strx509cert() {
  strx509cert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgX509CertRes_LTCA2V::strx509cert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
  return _internal_strx509cert();
}
inline void msgX509CertRes_LTCA2V::set_strx509cert(const std::string& value) {
  _internal_set_strx509cert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}
inline std::string* msgX509CertRes_LTCA2V::mutable_strx509cert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
  return _internal_mutable_strx509cert();
}
inline const std::string& msgX509CertRes_LTCA2V::_internal_strx509cert() const {
  return strx509cert_.Get();
}
inline void msgX509CertRes_LTCA2V::_internal_set_strx509cert(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgX509CertRes_LTCA2V::set_strx509cert(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strx509cert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}
inline void msgX509CertRes_LTCA2V::set_strx509cert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}
inline void msgX509CertRes_LTCA2V::set_strx509cert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}
inline std::string* msgX509CertRes_LTCA2V::_internal_mutable_strx509cert() {
  _has_bits_[0] |= 0x00000002u;
  return strx509cert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgX509CertRes_LTCA2V::release_strx509cert() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
  if (!_internal_has_strx509cert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strx509cert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgX509CertRes_LTCA2V::set_allocated_strx509cert(std::string* strx509cert) {
  if (strx509cert != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strx509cert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strx509cert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}
inline std::string* msgX509CertRes_LTCA2V::unsafe_arena_release_strx509cert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strx509cert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgX509CertRes_LTCA2V::unsafe_arena_set_allocated_strx509cert(
    std::string* strx509cert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strx509cert != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strx509cert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strx509cert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertRes_LTCA2V.strX509Cert)
}

// required int32 iNonce = 5 [default = -1];
inline bool msgX509CertRes_LTCA2V::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgX509CertRes_LTCA2V::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertRes_LTCA2V::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgX509CertRes_LTCA2V::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.iNonce)
  return _internal_inonce();
}
inline void msgX509CertRes_LTCA2V::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  inonce_ = value;
}
inline void msgX509CertRes_LTCA2V::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertRes_LTCA2V.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgX509CertRes_LTCA2V::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgX509CertRes_LTCA2V::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgX509CertRes_LTCA2V::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgX509CertRes_LTCA2V::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgX509CertRes_LTCA2V::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgX509CertRes_LTCA2V::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgX509CertRes_LTCA2V.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 7;
inline bool msgX509CertRes_LTCA2V::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgX509CertRes_LTCA2V::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgError& msgX509CertRes_LTCA2V::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgX509CertRes_LTCA2V::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgX509CertRes_LTCA2V::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertRes_LTCA2V.stErrInfo)
}
inline ::interfaces::msgError* msgX509CertRes_LTCA2V::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgX509CertRes_LTCA2V::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertRes_LTCA2V.stErrInfo)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgX509CertRes_LTCA2V::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000008u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgX509CertRes_LTCA2V::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertRes_LTCA2V.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgX509CertRes_LTCA2V::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertRes_LTCA2V.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 8;
inline bool msgX509CertRes_LTCA2V::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgX509CertRes_LTCA2V::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgX509CertRes_LTCA2V::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::interfaces::msgSignature& msgX509CertRes_LTCA2V::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgX509CertRes_LTCA2V::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgX509CertRes_LTCA2V.stSign)
  return _internal_stsign();
}
inline void msgX509CertRes_LTCA2V::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgX509CertRes_LTCA2V.stSign)
}
inline ::interfaces::msgSignature* msgX509CertRes_LTCA2V::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgX509CertRes_LTCA2V::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgX509CertRes_LTCA2V.stSign)
  _has_bits_[0] &= ~0x00000010u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgX509CertRes_LTCA2V::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000010u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgX509CertRes_LTCA2V::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgX509CertRes_LTCA2V.stSign)
  return _internal_mutable_stsign();
}
inline void msgX509CertRes_LTCA2V::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgX509CertRes_LTCA2V.stSign)
}

// -------------------------------------------------------------------

// msgCRLType

// -------------------------------------------------------------------

// msgTwoDLocation

// required int32 latitude = 1 [default = -1];
inline bool msgTwoDLocation::_internal_has_latitude() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgTwoDLocation::has_latitude() const {
  return _internal_has_latitude();
}
inline void msgTwoDLocation::clear_latitude() {
  latitude_ = -1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTwoDLocation::_internal_latitude() const {
  return latitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTwoDLocation::latitude() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTwoDLocation.latitude)
  return _internal_latitude();
}
inline void msgTwoDLocation::_internal_set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  latitude_ = value;
}
inline void msgTwoDLocation::set_latitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTwoDLocation.latitude)
}

// required int32 longitude = 2 [default = -1];
inline bool msgTwoDLocation::_internal_has_longitude() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgTwoDLocation::has_longitude() const {
  return _internal_has_longitude();
}
inline void msgTwoDLocation::clear_longitude() {
  longitude_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTwoDLocation::_internal_longitude() const {
  return longitude_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTwoDLocation::longitude() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTwoDLocation.longitude)
  return _internal_longitude();
}
inline void msgTwoDLocation::_internal_set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  longitude_ = value;
}
inline void msgTwoDLocation::set_longitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTwoDLocation.longitude)
}

// -------------------------------------------------------------------

// msgCircularRegion

// required .interfaces.msgTwoDLocation stCenter = 1;
inline bool msgCircularRegion::_internal_has_stcenter() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stcenter_ != nullptr);
  return value;
}
inline bool msgCircularRegion::has_stcenter() const {
  return _internal_has_stcenter();
}
inline void msgCircularRegion::clear_stcenter() {
  if (stcenter_ != nullptr) stcenter_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgTwoDLocation& msgCircularRegion::_internal_stcenter() const {
  const ::interfaces::msgTwoDLocation* p = stcenter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgTwoDLocation*>(
      &::interfaces::_msgTwoDLocation_default_instance_);
}
inline const ::interfaces::msgTwoDLocation& msgCircularRegion::stcenter() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCircularRegion.stCenter)
  return _internal_stcenter();
}
inline void msgCircularRegion::unsafe_arena_set_allocated_stcenter(
    ::interfaces::msgTwoDLocation* stcenter) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stcenter_);
  }
  stcenter_ = stcenter;
  if (stcenter) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCircularRegion.stCenter)
}
inline ::interfaces::msgTwoDLocation* msgCircularRegion::release_stcenter() {
  auto temp = unsafe_arena_release_stcenter();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgCircularRegion::unsafe_arena_release_stcenter() {
  // @@protoc_insertion_point(field_release:interfaces.msgCircularRegion.stCenter)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgTwoDLocation* temp = stcenter_;
  stcenter_ = nullptr;
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgCircularRegion::_internal_mutable_stcenter() {
  _has_bits_[0] |= 0x00000001u;
  if (stcenter_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgTwoDLocation>(GetArena());
    stcenter_ = p;
  }
  return stcenter_;
}
inline ::interfaces::msgTwoDLocation* msgCircularRegion::mutable_stcenter() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCircularRegion.stCenter)
  return _internal_mutable_stcenter();
}
inline void msgCircularRegion::set_allocated_stcenter(::interfaces::msgTwoDLocation* stcenter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stcenter_;
  }
  if (stcenter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stcenter);
    if (message_arena != submessage_arena) {
      stcenter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stcenter, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stcenter_ = stcenter;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCircularRegion.stCenter)
}

// required uint32 radius = 2 [default = 0];
inline bool msgCircularRegion::_internal_has_radius() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgCircularRegion::has_radius() const {
  return _internal_has_radius();
}
inline void msgCircularRegion::clear_radius() {
  radius_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgCircularRegion::_internal_radius() const {
  return radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgCircularRegion::radius() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCircularRegion.radius)
  return _internal_radius();
}
inline void msgCircularRegion::_internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  radius_ = value;
}
inline void msgCircularRegion::set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:interfaces.msgCircularRegion.radius)
}

// -------------------------------------------------------------------

// msgRectangularRegion

// required .interfaces.msgTwoDLocation stUpperLeft = 1;
inline bool msgRectangularRegion::_internal_has_stupperleft() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stupperleft_ != nullptr);
  return value;
}
inline bool msgRectangularRegion::has_stupperleft() const {
  return _internal_has_stupperleft();
}
inline void msgRectangularRegion::clear_stupperleft() {
  if (stupperleft_ != nullptr) stupperleft_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgTwoDLocation& msgRectangularRegion::_internal_stupperleft() const {
  const ::interfaces::msgTwoDLocation* p = stupperleft_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgTwoDLocation*>(
      &::interfaces::_msgTwoDLocation_default_instance_);
}
inline const ::interfaces::msgTwoDLocation& msgRectangularRegion::stupperleft() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRectangularRegion.stUpperLeft)
  return _internal_stupperleft();
}
inline void msgRectangularRegion::unsafe_arena_set_allocated_stupperleft(
    ::interfaces::msgTwoDLocation* stupperleft) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stupperleft_);
  }
  stupperleft_ = stupperleft;
  if (stupperleft) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRectangularRegion.stUpperLeft)
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::release_stupperleft() {
  auto temp = unsafe_arena_release_stupperleft();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::unsafe_arena_release_stupperleft() {
  // @@protoc_insertion_point(field_release:interfaces.msgRectangularRegion.stUpperLeft)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgTwoDLocation* temp = stupperleft_;
  stupperleft_ = nullptr;
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::_internal_mutable_stupperleft() {
  _has_bits_[0] |= 0x00000001u;
  if (stupperleft_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgTwoDLocation>(GetArena());
    stupperleft_ = p;
  }
  return stupperleft_;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::mutable_stupperleft() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRectangularRegion.stUpperLeft)
  return _internal_mutable_stupperleft();
}
inline void msgRectangularRegion::set_allocated_stupperleft(::interfaces::msgTwoDLocation* stupperleft) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stupperleft_;
  }
  if (stupperleft) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stupperleft);
    if (message_arena != submessage_arena) {
      stupperleft = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stupperleft, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stupperleft_ = stupperleft;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRectangularRegion.stUpperLeft)
}

// required .interfaces.msgTwoDLocation stLowerRight = 2;
inline bool msgRectangularRegion::_internal_has_stlowerright() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stlowerright_ != nullptr);
  return value;
}
inline bool msgRectangularRegion::has_stlowerright() const {
  return _internal_has_stlowerright();
}
inline void msgRectangularRegion::clear_stlowerright() {
  if (stlowerright_ != nullptr) stlowerright_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgTwoDLocation& msgRectangularRegion::_internal_stlowerright() const {
  const ::interfaces::msgTwoDLocation* p = stlowerright_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgTwoDLocation*>(
      &::interfaces::_msgTwoDLocation_default_instance_);
}
inline const ::interfaces::msgTwoDLocation& msgRectangularRegion::stlowerright() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRectangularRegion.stLowerRight)
  return _internal_stlowerright();
}
inline void msgRectangularRegion::unsafe_arena_set_allocated_stlowerright(
    ::interfaces::msgTwoDLocation* stlowerright) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stlowerright_);
  }
  stlowerright_ = stlowerright;
  if (stlowerright) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRectangularRegion.stLowerRight)
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::release_stlowerright() {
  auto temp = unsafe_arena_release_stlowerright();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::unsafe_arena_release_stlowerright() {
  // @@protoc_insertion_point(field_release:interfaces.msgRectangularRegion.stLowerRight)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgTwoDLocation* temp = stlowerright_;
  stlowerright_ = nullptr;
  return temp;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::_internal_mutable_stlowerright() {
  _has_bits_[0] |= 0x00000002u;
  if (stlowerright_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgTwoDLocation>(GetArena());
    stlowerright_ = p;
  }
  return stlowerright_;
}
inline ::interfaces::msgTwoDLocation* msgRectangularRegion::mutable_stlowerright() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRectangularRegion.stLowerRight)
  return _internal_mutable_stlowerright();
}
inline void msgRectangularRegion::set_allocated_stlowerright(::interfaces::msgTwoDLocation* stlowerright) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stlowerright_;
  }
  if (stlowerright) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stlowerright);
    if (message_arena != submessage_arena) {
      stlowerright = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stlowerright, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stlowerright_ = stlowerright;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRectangularRegion.stLowerRight)
}

// -------------------------------------------------------------------

// msgApplicationID

// required .interfaces.msgAIDType.AIDType type = 1 [default = fullySpecified];
inline bool msgApplicationID::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgApplicationID::has_type() const {
  return _internal_has_type();
}
inline void msgApplicationID::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::interfaces::msgAIDType_AIDType msgApplicationID::_internal_type() const {
  return static_cast< ::interfaces::msgAIDType_AIDType >(type_);
}
inline ::interfaces::msgAIDType_AIDType msgApplicationID::type() const {
  // @@protoc_insertion_point(field_get:interfaces.msgApplicationID.type)
  return _internal_type();
}
inline void msgApplicationID::_internal_set_type(::interfaces::msgAIDType_AIDType value) {
  assert(::interfaces::msgAIDType_AIDType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void msgApplicationID::set_type(::interfaces::msgAIDType_AIDType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:interfaces.msgApplicationID.type)
}

// required uint32 acid = 2 [default = 0];
inline bool msgApplicationID::_internal_has_acid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgApplicationID::has_acid() const {
  return _internal_has_acid();
}
inline void msgApplicationID::clear_acid() {
  acid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgApplicationID::_internal_acid() const {
  return acid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgApplicationID::acid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgApplicationID.acid)
  return _internal_acid();
}
inline void msgApplicationID::_internal_set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  acid_ = value;
}
inline void msgApplicationID::set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_acid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgApplicationID.acid)
}

// required uint32 acm = 3 [default = 0];
inline bool msgApplicationID::_internal_has_acm() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgApplicationID::has_acm() const {
  return _internal_has_acm();
}
inline void msgApplicationID::clear_acm() {
  acm_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgApplicationID::_internal_acm() const {
  return acm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgApplicationID::acm() const {
  // @@protoc_insertion_point(field_get:interfaces.msgApplicationID.acm)
  return _internal_acm();
}
inline void msgApplicationID::_internal_set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  acm_ = value;
}
inline void msgApplicationID::set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_acm(value);
  // @@protoc_insertion_point(field_set:interfaces.msgApplicationID.acm)
}

// -------------------------------------------------------------------

// msgOBUIdentifiedScope

// required uint32 certSpecificData = 1 [default = 0];
inline bool msgOBUIdentifiedScope::_internal_has_certspecificdata() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgOBUIdentifiedScope::has_certspecificdata() const {
  return _internal_has_certspecificdata();
}
inline void msgOBUIdentifiedScope::clear_certspecificdata() {
  certspecificdata_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgOBUIdentifiedScope::_internal_certspecificdata() const {
  return certspecificdata_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgOBUIdentifiedScope::certspecificdata() const {
  // @@protoc_insertion_point(field_get:interfaces.msgOBUIdentifiedScope.certSpecificData)
  return _internal_certspecificdata();
}
inline void msgOBUIdentifiedScope::_internal_set_certspecificdata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  certspecificdata_ = value;
}
inline void msgOBUIdentifiedScope::set_certspecificdata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_certspecificdata(value);
  // @@protoc_insertion_point(field_set:interfaces.msgOBUIdentifiedScope.certSpecificData)
}

// required .interfaces.msgApplicationID stAppID = 2;
inline bool msgOBUIdentifiedScope::_internal_has_stappid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stappid_ != nullptr);
  return value;
}
inline bool msgOBUIdentifiedScope::has_stappid() const {
  return _internal_has_stappid();
}
inline void msgOBUIdentifiedScope::clear_stappid() {
  if (stappid_ != nullptr) stappid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgApplicationID& msgOBUIdentifiedScope::_internal_stappid() const {
  const ::interfaces::msgApplicationID* p = stappid_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgApplicationID*>(
      &::interfaces::_msgApplicationID_default_instance_);
}
inline const ::interfaces::msgApplicationID& msgOBUIdentifiedScope::stappid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgOBUIdentifiedScope.stAppID)
  return _internal_stappid();
}
inline void msgOBUIdentifiedScope::unsafe_arena_set_allocated_stappid(
    ::interfaces::msgApplicationID* stappid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stappid_);
  }
  stappid_ = stappid;
  if (stappid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgOBUIdentifiedScope.stAppID)
}
inline ::interfaces::msgApplicationID* msgOBUIdentifiedScope::release_stappid() {
  auto temp = unsafe_arena_release_stappid();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgApplicationID* msgOBUIdentifiedScope::unsafe_arena_release_stappid() {
  // @@protoc_insertion_point(field_release:interfaces.msgOBUIdentifiedScope.stAppID)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgApplicationID* temp = stappid_;
  stappid_ = nullptr;
  return temp;
}
inline ::interfaces::msgApplicationID* msgOBUIdentifiedScope::_internal_mutable_stappid() {
  _has_bits_[0] |= 0x00000001u;
  if (stappid_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgApplicationID>(GetArena());
    stappid_ = p;
  }
  return stappid_;
}
inline ::interfaces::msgApplicationID* msgOBUIdentifiedScope::mutable_stappid() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgOBUIdentifiedScope.stAppID)
  return _internal_mutable_stappid();
}
inline void msgOBUIdentifiedScope::set_allocated_stappid(::interfaces::msgApplicationID* stappid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stappid_;
  }
  if (stappid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stappid);
    if (message_arena != submessage_arena) {
      stappid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stappid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stappid_ = stappid;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgOBUIdentifiedScope.stAppID)
}

// -------------------------------------------------------------------

// msgGeographicRegion

// required .interfaces.msgRegionType.RegionType regionType = 1 [default = none];
inline bool msgGeographicRegion::_internal_has_regiontype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgGeographicRegion::has_regiontype() const {
  return _internal_has_regiontype();
}
inline void msgGeographicRegion::clear_regiontype() {
  regiontype_ = 4;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::interfaces::msgRegionType_RegionType msgGeographicRegion::_internal_regiontype() const {
  return static_cast< ::interfaces::msgRegionType_RegionType >(regiontype_);
}
inline ::interfaces::msgRegionType_RegionType msgGeographicRegion::regiontype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgGeographicRegion.regionType)
  return _internal_regiontype();
}
inline void msgGeographicRegion::_internal_set_regiontype(::interfaces::msgRegionType_RegionType value) {
  assert(::interfaces::msgRegionType_RegionType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  regiontype_ = value;
}
inline void msgGeographicRegion::set_regiontype(::interfaces::msgRegionType_RegionType value) {
  _internal_set_regiontype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgGeographicRegion.regionType)
}

// -------------------------------------------------------------------

// msgIdentifiedScope

// required uint32 subjectName = 1 [default = 0];
inline bool msgIdentifiedScope::_internal_has_subjectname() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgIdentifiedScope::has_subjectname() const {
  return _internal_has_subjectname();
}
inline void msgIdentifiedScope::clear_subjectname() {
  subjectname_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgIdentifiedScope::_internal_subjectname() const {
  return subjectname_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgIdentifiedScope::subjectname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgIdentifiedScope.subjectName)
  return _internal_subjectname();
}
inline void msgIdentifiedScope::_internal_set_subjectname(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  subjectname_ = value;
}
inline void msgIdentifiedScope::set_subjectname(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subjectname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgIdentifiedScope.subjectName)
}

// required .interfaces.msgApplicationID stAppID = 2;
inline bool msgIdentifiedScope::_internal_has_stappid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stappid_ != nullptr);
  return value;
}
inline bool msgIdentifiedScope::has_stappid() const {
  return _internal_has_stappid();
}
inline void msgIdentifiedScope::clear_stappid() {
  if (stappid_ != nullptr) stappid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgApplicationID& msgIdentifiedScope::_internal_stappid() const {
  const ::interfaces::msgApplicationID* p = stappid_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgApplicationID*>(
      &::interfaces::_msgApplicationID_default_instance_);
}
inline const ::interfaces::msgApplicationID& msgIdentifiedScope::stappid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgIdentifiedScope.stAppID)
  return _internal_stappid();
}
inline void msgIdentifiedScope::unsafe_arena_set_allocated_stappid(
    ::interfaces::msgApplicationID* stappid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stappid_);
  }
  stappid_ = stappid;
  if (stappid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgIdentifiedScope.stAppID)
}
inline ::interfaces::msgApplicationID* msgIdentifiedScope::release_stappid() {
  auto temp = unsafe_arena_release_stappid();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgApplicationID* msgIdentifiedScope::unsafe_arena_release_stappid() {
  // @@protoc_insertion_point(field_release:interfaces.msgIdentifiedScope.stAppID)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgApplicationID* temp = stappid_;
  stappid_ = nullptr;
  return temp;
}
inline ::interfaces::msgApplicationID* msgIdentifiedScope::_internal_mutable_stappid() {
  _has_bits_[0] |= 0x00000001u;
  if (stappid_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgApplicationID>(GetArena());
    stappid_ = p;
  }
  return stappid_;
}
inline ::interfaces::msgApplicationID* msgIdentifiedScope::mutable_stappid() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgIdentifiedScope.stAppID)
  return _internal_mutable_stappid();
}
inline void msgIdentifiedScope::set_allocated_stappid(::interfaces::msgApplicationID* stappid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stappid_;
  }
  if (stappid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stappid);
    if (message_arena != submessage_arena) {
      stappid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stappid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stappid_ = stappid;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgIdentifiedScope.stAppID)
}

// required .interfaces.msgGeographicRegion stGeoRegion = 3;
inline bool msgIdentifiedScope::_internal_has_stgeoregion() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stgeoregion_ != nullptr);
  return value;
}
inline bool msgIdentifiedScope::has_stgeoregion() const {
  return _internal_has_stgeoregion();
}
inline void msgIdentifiedScope::clear_stgeoregion() {
  if (stgeoregion_ != nullptr) stgeoregion_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgGeographicRegion& msgIdentifiedScope::_internal_stgeoregion() const {
  const ::interfaces::msgGeographicRegion* p = stgeoregion_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgGeographicRegion*>(
      &::interfaces::_msgGeographicRegion_default_instance_);
}
inline const ::interfaces::msgGeographicRegion& msgIdentifiedScope::stgeoregion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgIdentifiedScope.stGeoRegion)
  return _internal_stgeoregion();
}
inline void msgIdentifiedScope::unsafe_arena_set_allocated_stgeoregion(
    ::interfaces::msgGeographicRegion* stgeoregion) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stgeoregion_);
  }
  stgeoregion_ = stgeoregion;
  if (stgeoregion) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgIdentifiedScope.stGeoRegion)
}
inline ::interfaces::msgGeographicRegion* msgIdentifiedScope::release_stgeoregion() {
  auto temp = unsafe_arena_release_stgeoregion();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgGeographicRegion* msgIdentifiedScope::unsafe_arena_release_stgeoregion() {
  // @@protoc_insertion_point(field_release:interfaces.msgIdentifiedScope.stGeoRegion)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgGeographicRegion* temp = stgeoregion_;
  stgeoregion_ = nullptr;
  return temp;
}
inline ::interfaces::msgGeographicRegion* msgIdentifiedScope::_internal_mutable_stgeoregion() {
  _has_bits_[0] |= 0x00000002u;
  if (stgeoregion_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgGeographicRegion>(GetArena());
    stgeoregion_ = p;
  }
  return stgeoregion_;
}
inline ::interfaces::msgGeographicRegion* msgIdentifiedScope::mutable_stgeoregion() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgIdentifiedScope.stGeoRegion)
  return _internal_mutable_stgeoregion();
}
inline void msgIdentifiedScope::set_allocated_stgeoregion(::interfaces::msgGeographicRegion* stgeoregion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stgeoregion_;
  }
  if (stgeoregion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stgeoregion);
    if (message_arena != submessage_arena) {
      stgeoregion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stgeoregion, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stgeoregion_ = stgeoregion;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgIdentifiedScope.stGeoRegion)
}

// -------------------------------------------------------------------

// msgAppIDAndPriority

// required .interfaces.msgAIDType.AIDType type = 1 [default = fullySpecified];
inline bool msgAppIDAndPriority::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgAppIDAndPriority::has_type() const {
  return _internal_has_type();
}
inline void msgAppIDAndPriority::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::interfaces::msgAIDType_AIDType msgAppIDAndPriority::_internal_type() const {
  return static_cast< ::interfaces::msgAIDType_AIDType >(type_);
}
inline ::interfaces::msgAIDType_AIDType msgAppIDAndPriority::type() const {
  // @@protoc_insertion_point(field_get:interfaces.msgAppIDAndPriority.type)
  return _internal_type();
}
inline void msgAppIDAndPriority::_internal_set_type(::interfaces::msgAIDType_AIDType value) {
  assert(::interfaces::msgAIDType_AIDType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void msgAppIDAndPriority::set_type(::interfaces::msgAIDType_AIDType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:interfaces.msgAppIDAndPriority.type)
}

// required uint32 acid = 2 [default = 0];
inline bool msgAppIDAndPriority::_internal_has_acid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgAppIDAndPriority::has_acid() const {
  return _internal_has_acid();
}
inline void msgAppIDAndPriority::clear_acid() {
  acid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::_internal_acid() const {
  return acid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::acid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgAppIDAndPriority.acid)
  return _internal_acid();
}
inline void msgAppIDAndPriority::_internal_set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  acid_ = value;
}
inline void msgAppIDAndPriority::set_acid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_acid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgAppIDAndPriority.acid)
}

// required uint32 acm = 3 [default = 0];
inline bool msgAppIDAndPriority::_internal_has_acm() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgAppIDAndPriority::has_acm() const {
  return _internal_has_acm();
}
inline void msgAppIDAndPriority::clear_acm() {
  acm_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::_internal_acm() const {
  return acm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::acm() const {
  // @@protoc_insertion_point(field_get:interfaces.msgAppIDAndPriority.acm)
  return _internal_acm();
}
inline void msgAppIDAndPriority::_internal_set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  acm_ = value;
}
inline void msgAppIDAndPriority::set_acm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_acm(value);
  // @@protoc_insertion_point(field_set:interfaces.msgAppIDAndPriority.acm)
}

// required uint32 maxPriority = 4 [default = 0];
inline bool msgAppIDAndPriority::_internal_has_maxpriority() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgAppIDAndPriority::has_maxpriority() const {
  return _internal_has_maxpriority();
}
inline void msgAppIDAndPriority::clear_maxpriority() {
  maxpriority_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::_internal_maxpriority() const {
  return maxpriority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgAppIDAndPriority::maxpriority() const {
  // @@protoc_insertion_point(field_get:interfaces.msgAppIDAndPriority.maxPriority)
  return _internal_maxpriority();
}
inline void msgAppIDAndPriority::_internal_set_maxpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  maxpriority_ = value;
}
inline void msgAppIDAndPriority::set_maxpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxpriority(value);
  // @@protoc_insertion_point(field_set:interfaces.msgAppIDAndPriority.maxPriority)
}

// -------------------------------------------------------------------

// msgCAScope

// required .interfaces.msgSubTypeFlags.SubjectTypeFlags TF = 1 [default = wsa_ca];
inline bool msgCAScope::_internal_has_tf() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgCAScope::has_tf() const {
  return _internal_has_tf();
}
inline void msgCAScope::clear_tf() {
  tf_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::interfaces::msgSubTypeFlags_SubjectTypeFlags msgCAScope::_internal_tf() const {
  return static_cast< ::interfaces::msgSubTypeFlags_SubjectTypeFlags >(tf_);
}
inline ::interfaces::msgSubTypeFlags_SubjectTypeFlags msgCAScope::tf() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCAScope.TF)
  return _internal_tf();
}
inline void msgCAScope::_internal_set_tf(::interfaces::msgSubTypeFlags_SubjectTypeFlags value) {
  assert(::interfaces::msgSubTypeFlags_SubjectTypeFlags_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  tf_ = value;
}
inline void msgCAScope::set_tf(::interfaces::msgSubTypeFlags_SubjectTypeFlags value) {
  _internal_set_tf(value);
  // @@protoc_insertion_point(field_set:interfaces.msgCAScope.TF)
}

// required .interfaces.msgApplicationID stAppID = 2;
inline bool msgCAScope::_internal_has_stappid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stappid_ != nullptr);
  return value;
}
inline bool msgCAScope::has_stappid() const {
  return _internal_has_stappid();
}
inline void msgCAScope::clear_stappid() {
  if (stappid_ != nullptr) stappid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgApplicationID& msgCAScope::_internal_stappid() const {
  const ::interfaces::msgApplicationID* p = stappid_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgApplicationID*>(
      &::interfaces::_msgApplicationID_default_instance_);
}
inline const ::interfaces::msgApplicationID& msgCAScope::stappid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCAScope.stAppID)
  return _internal_stappid();
}
inline void msgCAScope::unsafe_arena_set_allocated_stappid(
    ::interfaces::msgApplicationID* stappid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stappid_);
  }
  stappid_ = stappid;
  if (stappid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCAScope.stAppID)
}
inline ::interfaces::msgApplicationID* msgCAScope::release_stappid() {
  auto temp = unsafe_arena_release_stappid();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgApplicationID* msgCAScope::unsafe_arena_release_stappid() {
  // @@protoc_insertion_point(field_release:interfaces.msgCAScope.stAppID)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgApplicationID* temp = stappid_;
  stappid_ = nullptr;
  return temp;
}
inline ::interfaces::msgApplicationID* msgCAScope::_internal_mutable_stappid() {
  _has_bits_[0] |= 0x00000001u;
  if (stappid_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgApplicationID>(GetArena());
    stappid_ = p;
  }
  return stappid_;
}
inline ::interfaces::msgApplicationID* msgCAScope::mutable_stappid() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCAScope.stAppID)
  return _internal_mutable_stappid();
}
inline void msgCAScope::set_allocated_stappid(::interfaces::msgApplicationID* stappid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stappid_;
  }
  if (stappid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stappid);
    if (message_arena != submessage_arena) {
      stappid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stappid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stappid_ = stappid;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCAScope.stAppID)
}

// required .interfaces.msgAppIDAndPriority stAppsAndPriorities = 3;
inline bool msgCAScope::_internal_has_stappsandpriorities() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stappsandpriorities_ != nullptr);
  return value;
}
inline bool msgCAScope::has_stappsandpriorities() const {
  return _internal_has_stappsandpriorities();
}
inline void msgCAScope::clear_stappsandpriorities() {
  if (stappsandpriorities_ != nullptr) stappsandpriorities_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgAppIDAndPriority& msgCAScope::_internal_stappsandpriorities() const {
  const ::interfaces::msgAppIDAndPriority* p = stappsandpriorities_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgAppIDAndPriority*>(
      &::interfaces::_msgAppIDAndPriority_default_instance_);
}
inline const ::interfaces::msgAppIDAndPriority& msgCAScope::stappsandpriorities() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCAScope.stAppsAndPriorities)
  return _internal_stappsandpriorities();
}
inline void msgCAScope::unsafe_arena_set_allocated_stappsandpriorities(
    ::interfaces::msgAppIDAndPriority* stappsandpriorities) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stappsandpriorities_);
  }
  stappsandpriorities_ = stappsandpriorities;
  if (stappsandpriorities) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCAScope.stAppsAndPriorities)
}
inline ::interfaces::msgAppIDAndPriority* msgCAScope::release_stappsandpriorities() {
  auto temp = unsafe_arena_release_stappsandpriorities();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgAppIDAndPriority* msgCAScope::unsafe_arena_release_stappsandpriorities() {
  // @@protoc_insertion_point(field_release:interfaces.msgCAScope.stAppsAndPriorities)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgAppIDAndPriority* temp = stappsandpriorities_;
  stappsandpriorities_ = nullptr;
  return temp;
}
inline ::interfaces::msgAppIDAndPriority* msgCAScope::_internal_mutable_stappsandpriorities() {
  _has_bits_[0] |= 0x00000002u;
  if (stappsandpriorities_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgAppIDAndPriority>(GetArena());
    stappsandpriorities_ = p;
  }
  return stappsandpriorities_;
}
inline ::interfaces::msgAppIDAndPriority* msgCAScope::mutable_stappsandpriorities() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCAScope.stAppsAndPriorities)
  return _internal_mutable_stappsandpriorities();
}
inline void msgCAScope::set_allocated_stappsandpriorities(::interfaces::msgAppIDAndPriority* stappsandpriorities) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stappsandpriorities_;
  }
  if (stappsandpriorities) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stappsandpriorities);
    if (message_arena != submessage_arena) {
      stappsandpriorities = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stappsandpriorities, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stappsandpriorities_ = stappsandpriorities;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCAScope.stAppsAndPriorities)
}

// required .interfaces.msgGeographicRegion stGeoRegion = 4;
inline bool msgCAScope::_internal_has_stgeoregion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stgeoregion_ != nullptr);
  return value;
}
inline bool msgCAScope::has_stgeoregion() const {
  return _internal_has_stgeoregion();
}
inline void msgCAScope::clear_stgeoregion() {
  if (stgeoregion_ != nullptr) stgeoregion_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgGeographicRegion& msgCAScope::_internal_stgeoregion() const {
  const ::interfaces::msgGeographicRegion* p = stgeoregion_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgGeographicRegion*>(
      &::interfaces::_msgGeographicRegion_default_instance_);
}
inline const ::interfaces::msgGeographicRegion& msgCAScope::stgeoregion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCAScope.stGeoRegion)
  return _internal_stgeoregion();
}
inline void msgCAScope::unsafe_arena_set_allocated_stgeoregion(
    ::interfaces::msgGeographicRegion* stgeoregion) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stgeoregion_);
  }
  stgeoregion_ = stgeoregion;
  if (stgeoregion) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCAScope.stGeoRegion)
}
inline ::interfaces::msgGeographicRegion* msgCAScope::release_stgeoregion() {
  auto temp = unsafe_arena_release_stgeoregion();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgGeographicRegion* msgCAScope::unsafe_arena_release_stgeoregion() {
  // @@protoc_insertion_point(field_release:interfaces.msgCAScope.stGeoRegion)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgGeographicRegion* temp = stgeoregion_;
  stgeoregion_ = nullptr;
  return temp;
}
inline ::interfaces::msgGeographicRegion* msgCAScope::_internal_mutable_stgeoregion() {
  _has_bits_[0] |= 0x00000004u;
  if (stgeoregion_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgGeographicRegion>(GetArena());
    stgeoregion_ = p;
  }
  return stgeoregion_;
}
inline ::interfaces::msgGeographicRegion* msgCAScope::mutable_stgeoregion() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCAScope.stGeoRegion)
  return _internal_mutable_stgeoregion();
}
inline void msgCAScope::set_allocated_stgeoregion(::interfaces::msgGeographicRegion* stgeoregion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stgeoregion_;
  }
  if (stgeoregion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stgeoregion);
    if (message_arena != submessage_arena) {
      stgeoregion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stgeoregion, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stgeoregion_ = stgeoregion;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCAScope.stGeoRegion)
}

// -------------------------------------------------------------------

// msgCertSpecificData

// required .interfaces.msgSubType.SubjectType subjectType = 1 [default = wsa_ca1];
inline bool msgCertSpecificData::_internal_has_subjecttype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgCertSpecificData::has_subjecttype() const {
  return _internal_has_subjecttype();
}
inline void msgCertSpecificData::clear_subjecttype() {
  subjecttype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::interfaces::msgSubType_SubjectType msgCertSpecificData::_internal_subjecttype() const {
  return static_cast< ::interfaces::msgSubType_SubjectType >(subjecttype_);
}
inline ::interfaces::msgSubType_SubjectType msgCertSpecificData::subjecttype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.subjectType)
  return _internal_subjecttype();
}
inline void msgCertSpecificData::_internal_set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  assert(::interfaces::msgSubType_SubjectType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  subjecttype_ = value;
}
inline void msgCertSpecificData::set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  _internal_set_subjecttype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgCertSpecificData.subjectType)
}

// required .interfaces.msgCAScope scopeCA = 2;
inline bool msgCertSpecificData::_internal_has_scopeca() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || scopeca_ != nullptr);
  return value;
}
inline bool msgCertSpecificData::has_scopeca() const {
  return _internal_has_scopeca();
}
inline void msgCertSpecificData::clear_scopeca() {
  if (scopeca_ != nullptr) scopeca_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgCAScope& msgCertSpecificData::_internal_scopeca() const {
  const ::interfaces::msgCAScope* p = scopeca_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgCAScope*>(
      &::interfaces::_msgCAScope_default_instance_);
}
inline const ::interfaces::msgCAScope& msgCertSpecificData::scopeca() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.scopeCA)
  return _internal_scopeca();
}
inline void msgCertSpecificData::unsafe_arena_set_allocated_scopeca(
    ::interfaces::msgCAScope* scopeca) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scopeca_);
  }
  scopeca_ = scopeca;
  if (scopeca) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCertSpecificData.scopeCA)
}
inline ::interfaces::msgCAScope* msgCertSpecificData::release_scopeca() {
  auto temp = unsafe_arena_release_scopeca();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgCAScope* msgCertSpecificData::unsafe_arena_release_scopeca() {
  // @@protoc_insertion_point(field_release:interfaces.msgCertSpecificData.scopeCA)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgCAScope* temp = scopeca_;
  scopeca_ = nullptr;
  return temp;
}
inline ::interfaces::msgCAScope* msgCertSpecificData::_internal_mutable_scopeca() {
  _has_bits_[0] |= 0x00000001u;
  if (scopeca_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgCAScope>(GetArena());
    scopeca_ = p;
  }
  return scopeca_;
}
inline ::interfaces::msgCAScope* msgCertSpecificData::mutable_scopeca() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCertSpecificData.scopeCA)
  return _internal_mutable_scopeca();
}
inline void msgCertSpecificData::set_allocated_scopeca(::interfaces::msgCAScope* scopeca) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scopeca_;
  }
  if (scopeca) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scopeca);
    if (message_arena != submessage_arena) {
      scopeca = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scopeca, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  scopeca_ = scopeca;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCertSpecificData.scopeCA)
}

// required uint32 responsibleCrlSeries = 3 [default = 0];
inline bool msgCertSpecificData::_internal_has_responsiblecrlseries() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgCertSpecificData::has_responsiblecrlseries() const {
  return _internal_has_responsiblecrlseries();
}
inline void msgCertSpecificData::clear_responsiblecrlseries() {
  responsiblecrlseries_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgCertSpecificData::_internal_responsiblecrlseries() const {
  return responsiblecrlseries_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgCertSpecificData::responsiblecrlseries() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.responsibleCrlSeries)
  return _internal_responsiblecrlseries();
}
inline void msgCertSpecificData::_internal_set_responsiblecrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  responsiblecrlseries_ = value;
}
inline void msgCertSpecificData::set_responsiblecrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_responsiblecrlseries(value);
  // @@protoc_insertion_point(field_set:interfaces.msgCertSpecificData.responsibleCrlSeries)
}

// required .interfaces.msgWSASignerScope.WSASignerScope wsaScope = 4 [default = wsaSignerAdvertisingSpecificApplications];
inline bool msgCertSpecificData::_internal_has_wsascope() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgCertSpecificData::has_wsascope() const {
  return _internal_has_wsascope();
}
inline void msgCertSpecificData::clear_wsascope() {
  wsascope_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::interfaces::msgWSASignerScope_WSASignerScope msgCertSpecificData::_internal_wsascope() const {
  return static_cast< ::interfaces::msgWSASignerScope_WSASignerScope >(wsascope_);
}
inline ::interfaces::msgWSASignerScope_WSASignerScope msgCertSpecificData::wsascope() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.wsaScope)
  return _internal_wsascope();
}
inline void msgCertSpecificData::_internal_set_wsascope(::interfaces::msgWSASignerScope_WSASignerScope value) {
  assert(::interfaces::msgWSASignerScope_WSASignerScope_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  wsascope_ = value;
}
inline void msgCertSpecificData::set_wsascope(::interfaces::msgWSASignerScope_WSASignerScope value) {
  _internal_set_wsascope(value);
  // @@protoc_insertion_point(field_set:interfaces.msgCertSpecificData.wsaScope)
}

// required .interfaces.msgIdentifiedScope scopeId = 5;
inline bool msgCertSpecificData::_internal_has_scopeid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || scopeid_ != nullptr);
  return value;
}
inline bool msgCertSpecificData::has_scopeid() const {
  return _internal_has_scopeid();
}
inline void msgCertSpecificData::clear_scopeid() {
  if (scopeid_ != nullptr) scopeid_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgIdentifiedScope& msgCertSpecificData::_internal_scopeid() const {
  const ::interfaces::msgIdentifiedScope* p = scopeid_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgIdentifiedScope*>(
      &::interfaces::_msgIdentifiedScope_default_instance_);
}
inline const ::interfaces::msgIdentifiedScope& msgCertSpecificData::scopeid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.scopeId)
  return _internal_scopeid();
}
inline void msgCertSpecificData::unsafe_arena_set_allocated_scopeid(
    ::interfaces::msgIdentifiedScope* scopeid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scopeid_);
  }
  scopeid_ = scopeid;
  if (scopeid) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCertSpecificData.scopeId)
}
inline ::interfaces::msgIdentifiedScope* msgCertSpecificData::release_scopeid() {
  auto temp = unsafe_arena_release_scopeid();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgIdentifiedScope* msgCertSpecificData::unsafe_arena_release_scopeid() {
  // @@protoc_insertion_point(field_release:interfaces.msgCertSpecificData.scopeId)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgIdentifiedScope* temp = scopeid_;
  scopeid_ = nullptr;
  return temp;
}
inline ::interfaces::msgIdentifiedScope* msgCertSpecificData::_internal_mutable_scopeid() {
  _has_bits_[0] |= 0x00000002u;
  if (scopeid_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgIdentifiedScope>(GetArena());
    scopeid_ = p;
  }
  return scopeid_;
}
inline ::interfaces::msgIdentifiedScope* msgCertSpecificData::mutable_scopeid() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCertSpecificData.scopeId)
  return _internal_mutable_scopeid();
}
inline void msgCertSpecificData::set_allocated_scopeid(::interfaces::msgIdentifiedScope* scopeid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scopeid_;
  }
  if (scopeid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scopeid);
    if (message_arena != submessage_arena) {
      scopeid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scopeid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  scopeid_ = scopeid;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCertSpecificData.scopeId)
}

// required .interfaces.msgOBUIdentifiedScope scopeOBU = 6;
inline bool msgCertSpecificData::_internal_has_scopeobu() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || scopeobu_ != nullptr);
  return value;
}
inline bool msgCertSpecificData::has_scopeobu() const {
  return _internal_has_scopeobu();
}
inline void msgCertSpecificData::clear_scopeobu() {
  if (scopeobu_ != nullptr) scopeobu_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgOBUIdentifiedScope& msgCertSpecificData::_internal_scopeobu() const {
  const ::interfaces::msgOBUIdentifiedScope* p = scopeobu_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgOBUIdentifiedScope*>(
      &::interfaces::_msgOBUIdentifiedScope_default_instance_);
}
inline const ::interfaces::msgOBUIdentifiedScope& msgCertSpecificData::scopeobu() const {
  // @@protoc_insertion_point(field_get:interfaces.msgCertSpecificData.scopeOBU)
  return _internal_scopeobu();
}
inline void msgCertSpecificData::unsafe_arena_set_allocated_scopeobu(
    ::interfaces::msgOBUIdentifiedScope* scopeobu) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scopeobu_);
  }
  scopeobu_ = scopeobu;
  if (scopeobu) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgCertSpecificData.scopeOBU)
}
inline ::interfaces::msgOBUIdentifiedScope* msgCertSpecificData::release_scopeobu() {
  auto temp = unsafe_arena_release_scopeobu();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgOBUIdentifiedScope* msgCertSpecificData::unsafe_arena_release_scopeobu() {
  // @@protoc_insertion_point(field_release:interfaces.msgCertSpecificData.scopeOBU)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgOBUIdentifiedScope* temp = scopeobu_;
  scopeobu_ = nullptr;
  return temp;
}
inline ::interfaces::msgOBUIdentifiedScope* msgCertSpecificData::_internal_mutable_scopeobu() {
  _has_bits_[0] |= 0x00000004u;
  if (scopeobu_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgOBUIdentifiedScope>(GetArena());
    scopeobu_ = p;
  }
  return scopeobu_;
}
inline ::interfaces::msgOBUIdentifiedScope* msgCertSpecificData::mutable_scopeobu() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgCertSpecificData.scopeOBU)
  return _internal_mutable_scopeobu();
}
inline void msgCertSpecificData::set_allocated_scopeobu(::interfaces::msgOBUIdentifiedScope* scopeobu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scopeobu_;
  }
  if (scopeobu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scopeobu);
    if (message_arena != submessage_arena) {
      scopeobu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scopeobu, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  scopeobu_ = scopeobu;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgCertSpecificData.scopeOBU)
}

// -------------------------------------------------------------------

// msgToBeSignedWAVECertificate

// required uint32 uiCertificateVersion = 1 [default = 0];
inline bool msgToBeSignedWAVECertificate::_internal_has_uicertificateversion() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_uicertificateversion() const {
  return _internal_has_uicertificateversion();
}
inline void msgToBeSignedWAVECertificate::clear_uicertificateversion() {
  uicertificateversion_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedWAVECertificate::_internal_uicertificateversion() const {
  return uicertificateversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedWAVECertificate::uicertificateversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.uiCertificateVersion)
  return _internal_uicertificateversion();
}
inline void msgToBeSignedWAVECertificate::_internal_set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uicertificateversion_ = value;
}
inline void msgToBeSignedWAVECertificate::set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uicertificateversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.uiCertificateVersion)
}

// required .interfaces.msgSubType.SubjectType subjectType = 2 [default = wsa_ca1];
inline bool msgToBeSignedWAVECertificate::_internal_has_subjecttype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_subjecttype() const {
  return _internal_has_subjecttype();
}
inline void msgToBeSignedWAVECertificate::clear_subjecttype() {
  subjecttype_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::interfaces::msgSubType_SubjectType msgToBeSignedWAVECertificate::_internal_subjecttype() const {
  return static_cast< ::interfaces::msgSubType_SubjectType >(subjecttype_);
}
inline ::interfaces::msgSubType_SubjectType msgToBeSignedWAVECertificate::subjecttype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.subjectType)
  return _internal_subjecttype();
}
inline void msgToBeSignedWAVECertificate::_internal_set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  assert(::interfaces::msgSubType_SubjectType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  subjecttype_ = value;
}
inline void msgToBeSignedWAVECertificate::set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  _internal_set_subjecttype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.subjectType)
}

// required int32 iSignerId = 3 [default = -1];
inline bool msgToBeSignedWAVECertificate::_internal_has_isignerid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_isignerid() const {
  return _internal_has_isignerid();
}
inline void msgToBeSignedWAVECertificate::clear_isignerid() {
  isignerid_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgToBeSignedWAVECertificate::_internal_isignerid() const {
  return isignerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgToBeSignedWAVECertificate::isignerid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.iSignerId)
  return _internal_isignerid();
}
inline void msgToBeSignedWAVECertificate::_internal_set_isignerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  isignerid_ = value;
}
inline void msgToBeSignedWAVECertificate::set_isignerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_isignerid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.iSignerId)
}

// required .interfaces.msgCertSpecificData stCertScope = 4;
inline bool msgToBeSignedWAVECertificate::_internal_has_stcertscope() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stcertscope_ != nullptr);
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_stcertscope() const {
  return _internal_has_stcertscope();
}
inline void msgToBeSignedWAVECertificate::clear_stcertscope() {
  if (stcertscope_ != nullptr) stcertscope_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgCertSpecificData& msgToBeSignedWAVECertificate::_internal_stcertscope() const {
  const ::interfaces::msgCertSpecificData* p = stcertscope_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgCertSpecificData*>(
      &::interfaces::_msgCertSpecificData_default_instance_);
}
inline const ::interfaces::msgCertSpecificData& msgToBeSignedWAVECertificate::stcertscope() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.stCertScope)
  return _internal_stcertscope();
}
inline void msgToBeSignedWAVECertificate::unsafe_arena_set_allocated_stcertscope(
    ::interfaces::msgCertSpecificData* stcertscope) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stcertscope_);
  }
  stcertscope_ = stcertscope;
  if (stcertscope) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedWAVECertificate.stCertScope)
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedWAVECertificate::release_stcertscope() {
  auto temp = unsafe_arena_release_stcertscope();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedWAVECertificate::unsafe_arena_release_stcertscope() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedWAVECertificate.stCertScope)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgCertSpecificData* temp = stcertscope_;
  stcertscope_ = nullptr;
  return temp;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedWAVECertificate::_internal_mutable_stcertscope() {
  _has_bits_[0] |= 0x00000004u;
  if (stcertscope_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgCertSpecificData>(GetArena());
    stcertscope_ = p;
  }
  return stcertscope_;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedWAVECertificate::mutable_stcertscope() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedWAVECertificate.stCertScope)
  return _internal_mutable_stcertscope();
}
inline void msgToBeSignedWAVECertificate::set_allocated_stcertscope(::interfaces::msgCertSpecificData* stcertscope) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stcertscope_;
  }
  if (stcertscope) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stcertscope);
    if (message_arena != submessage_arena) {
      stcertscope = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stcertscope, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stcertscope_ = stcertscope;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedWAVECertificate.stCertScope)
}

// required uint32 uiCrlSeries = 5 [default = 0];
inline bool msgToBeSignedWAVECertificate::_internal_has_uicrlseries() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_uicrlseries() const {
  return _internal_has_uicrlseries();
}
inline void msgToBeSignedWAVECertificate::clear_uicrlseries() {
  uicrlseries_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedWAVECertificate::_internal_uicrlseries() const {
  return uicrlseries_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedWAVECertificate::uicrlseries() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.uiCrlSeries)
  return _internal_uicrlseries();
}
inline void msgToBeSignedWAVECertificate::_internal_set_uicrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  uicrlseries_ = value;
}
inline void msgToBeSignedWAVECertificate::set_uicrlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uicrlseries(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.uiCrlSeries)
}

// required string strPsnymCertSerialNo = 6 [default = ""];
inline bool msgToBeSignedWAVECertificate::_internal_has_strpsnymcertserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_strpsnymcertserialno() const {
  return _internal_has_strpsnymcertserialno();
}
inline void msgToBeSignedWAVECertificate::clear_strpsnymcertserialno() {
  strpsnymcertserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgToBeSignedWAVECertificate::strpsnymcertserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
  return _internal_strpsnymcertserialno();
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertserialno(const std::string& value) {
  _internal_set_strpsnymcertserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}
inline std::string* msgToBeSignedWAVECertificate::mutable_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
  return _internal_mutable_strpsnymcertserialno();
}
inline const std::string& msgToBeSignedWAVECertificate::_internal_strpsnymcertserialno() const {
  return strpsnymcertserialno_.Get();
}
inline void msgToBeSignedWAVECertificate::_internal_set_strpsnymcertserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}
inline std::string* msgToBeSignedWAVECertificate::_internal_mutable_strpsnymcertserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcertserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgToBeSignedWAVECertificate::release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
  if (!_internal_has_strpsnymcertserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgToBeSignedWAVECertificate::set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno) {
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcertserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}
inline std::string* msgToBeSignedWAVECertificate::unsafe_arena_release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgToBeSignedWAVECertificate::unsafe_arena_set_allocated_strpsnymcertserialno(
    std::string* strpsnymcertserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcertserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedWAVECertificate.strPsnymCertSerialNo)
}

// required string strPsnymCertIdentifiableKey = 7 [default = ""];
inline bool msgToBeSignedWAVECertificate::_internal_has_strpsnymcertidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_strpsnymcertidentifiablekey() const {
  return _internal_has_strpsnymcertidentifiablekey();
}
inline void msgToBeSignedWAVECertificate::clear_strpsnymcertidentifiablekey() {
  strpsnymcertidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgToBeSignedWAVECertificate::strpsnymcertidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
  return _internal_strpsnymcertidentifiablekey();
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertidentifiablekey(const std::string& value) {
  _internal_set_strpsnymcertidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}
inline std::string* msgToBeSignedWAVECertificate::mutable_strpsnymcertidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
  return _internal_mutable_strpsnymcertidentifiablekey();
}
inline const std::string& msgToBeSignedWAVECertificate::_internal_strpsnymcertidentifiablekey() const {
  return strpsnymcertidentifiablekey_.Get();
}
inline void msgToBeSignedWAVECertificate::_internal_set_strpsnymcertidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymcertidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymcertidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strpsnymcertidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}
inline void msgToBeSignedWAVECertificate::set_strpsnymcertidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymcertidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}
inline std::string* msgToBeSignedWAVECertificate::_internal_mutable_strpsnymcertidentifiablekey() {
  _has_bits_[0] |= 0x00000002u;
  return strpsnymcertidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgToBeSignedWAVECertificate::release_strpsnymcertidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
  if (!_internal_has_strpsnymcertidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strpsnymcertidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgToBeSignedWAVECertificate::set_allocated_strpsnymcertidentifiablekey(std::string* strpsnymcertidentifiablekey) {
  if (strpsnymcertidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpsnymcertidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcertidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}
inline std::string* msgToBeSignedWAVECertificate::unsafe_arena_release_strpsnymcertidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strpsnymcertidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgToBeSignedWAVECertificate::unsafe_arena_set_allocated_strpsnymcertidentifiablekey(
    std::string* strpsnymcertidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcertidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpsnymcertidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcertidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedWAVECertificate.strPsnymCertIdentifiableKey)
}

// required int64 tIsValidFrom = 8 [default = -1];
inline bool msgToBeSignedWAVECertificate::_internal_has_tisvalidfrom() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_tisvalidfrom() const {
  return _internal_has_tisvalidfrom();
}
inline void msgToBeSignedWAVECertificate::clear_tisvalidfrom() {
  tisvalidfrom_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgToBeSignedWAVECertificate::_internal_tisvalidfrom() const {
  return tisvalidfrom_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgToBeSignedWAVECertificate::tisvalidfrom() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.tIsValidFrom)
  return _internal_tisvalidfrom();
}
inline void msgToBeSignedWAVECertificate::_internal_set_tisvalidfrom(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  tisvalidfrom_ = value;
}
inline void msgToBeSignedWAVECertificate::set_tisvalidfrom(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tisvalidfrom(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.tIsValidFrom)
}

// required int64 tIsValidTo = 9 [default = -1];
inline bool msgToBeSignedWAVECertificate::_internal_has_tisvalidto() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_tisvalidto() const {
  return _internal_has_tisvalidto();
}
inline void msgToBeSignedWAVECertificate::clear_tisvalidto() {
  tisvalidto_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgToBeSignedWAVECertificate::_internal_tisvalidto() const {
  return tisvalidto_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgToBeSignedWAVECertificate::tisvalidto() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.tIsValidTo)
  return _internal_tisvalidto();
}
inline void msgToBeSignedWAVECertificate::_internal_set_tisvalidto(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  tisvalidto_ = value;
}
inline void msgToBeSignedWAVECertificate::set_tisvalidto(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tisvalidto(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedWAVECertificate.tIsValidTo)
}

// required .interfaces.msgECPublicKey stPsnymPublicKey = 10;
inline bool msgToBeSignedWAVECertificate::_internal_has_stpsnympublickey() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stpsnympublickey_ != nullptr);
  return value;
}
inline bool msgToBeSignedWAVECertificate::has_stpsnympublickey() const {
  return _internal_has_stpsnympublickey();
}
inline void msgToBeSignedWAVECertificate::clear_stpsnympublickey() {
  if (stpsnympublickey_ != nullptr) stpsnympublickey_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgECPublicKey& msgToBeSignedWAVECertificate::_internal_stpsnympublickey() const {
  const ::interfaces::msgECPublicKey* p = stpsnympublickey_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgECPublicKey*>(
      &::interfaces::_msgECPublicKey_default_instance_);
}
inline const ::interfaces::msgECPublicKey& msgToBeSignedWAVECertificate::stpsnympublickey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedWAVECertificate.stPsnymPublicKey)
  return _internal_stpsnympublickey();
}
inline void msgToBeSignedWAVECertificate::unsafe_arena_set_allocated_stpsnympublickey(
    ::interfaces::msgECPublicKey* stpsnympublickey) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stpsnympublickey_);
  }
  stpsnympublickey_ = stpsnympublickey;
  if (stpsnympublickey) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedWAVECertificate.stPsnymPublicKey)
}
inline ::interfaces::msgECPublicKey* msgToBeSignedWAVECertificate::release_stpsnympublickey() {
  auto temp = unsafe_arena_release_stpsnympublickey();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedWAVECertificate::unsafe_arena_release_stpsnympublickey() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedWAVECertificate.stPsnymPublicKey)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgECPublicKey* temp = stpsnympublickey_;
  stpsnympublickey_ = nullptr;
  return temp;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedWAVECertificate::_internal_mutable_stpsnympublickey() {
  _has_bits_[0] |= 0x00000008u;
  if (stpsnympublickey_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgECPublicKey>(GetArena());
    stpsnympublickey_ = p;
  }
  return stpsnympublickey_;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedWAVECertificate::mutable_stpsnympublickey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedWAVECertificate.stPsnymPublicKey)
  return _internal_mutable_stpsnympublickey();
}
inline void msgToBeSignedWAVECertificate::set_allocated_stpsnympublickey(::interfaces::msgECPublicKey* stpsnympublickey) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stpsnympublickey_;
  }
  if (stpsnympublickey) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stpsnympublickey);
    if (message_arena != submessage_arena) {
      stpsnympublickey = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stpsnympublickey, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stpsnympublickey_ = stpsnympublickey;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedWAVECertificate.stPsnymPublicKey)
}

// -------------------------------------------------------------------

// msgPsnymCertFormat

// required uint32 uiCertificateVersion = 1 [default = 0];
inline bool msgPsnymCertFormat::_internal_has_uicertificateversion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymCertFormat::has_uicertificateversion() const {
  return _internal_has_uicertificateversion();
}
inline void msgPsnymCertFormat::clear_uicertificateversion() {
  uicertificateversion_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertFormat::_internal_uicertificateversion() const {
  return uicertificateversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertFormat::uicertificateversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertFormat.uiCertificateVersion)
  return _internal_uicertificateversion();
}
inline void msgPsnymCertFormat::_internal_set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uicertificateversion_ = value;
}
inline void msgPsnymCertFormat::set_uicertificateversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uicertificateversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertFormat.uiCertificateVersion)
}

// required .interfaces.msgToBeSignedWAVECertificate stCertificate = 2;
inline bool msgPsnymCertFormat::_internal_has_stcertificate() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stcertificate_ != nullptr);
  return value;
}
inline bool msgPsnymCertFormat::has_stcertificate() const {
  return _internal_has_stcertificate();
}
inline void msgPsnymCertFormat::clear_stcertificate() {
  if (stcertificate_ != nullptr) stcertificate_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgToBeSignedWAVECertificate& msgPsnymCertFormat::_internal_stcertificate() const {
  const ::interfaces::msgToBeSignedWAVECertificate* p = stcertificate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgToBeSignedWAVECertificate*>(
      &::interfaces::_msgToBeSignedWAVECertificate_default_instance_);
}
inline const ::interfaces::msgToBeSignedWAVECertificate& msgPsnymCertFormat::stcertificate() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertFormat.stCertificate)
  return _internal_stcertificate();
}
inline void msgPsnymCertFormat::unsafe_arena_set_allocated_stcertificate(
    ::interfaces::msgToBeSignedWAVECertificate* stcertificate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stcertificate_);
  }
  stcertificate_ = stcertificate;
  if (stcertificate) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertFormat.stCertificate)
}
inline ::interfaces::msgToBeSignedWAVECertificate* msgPsnymCertFormat::release_stcertificate() {
  auto temp = unsafe_arena_release_stcertificate();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgToBeSignedWAVECertificate* msgPsnymCertFormat::unsafe_arena_release_stcertificate() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertFormat.stCertificate)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgToBeSignedWAVECertificate* temp = stcertificate_;
  stcertificate_ = nullptr;
  return temp;
}
inline ::interfaces::msgToBeSignedWAVECertificate* msgPsnymCertFormat::_internal_mutable_stcertificate() {
  _has_bits_[0] |= 0x00000001u;
  if (stcertificate_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgToBeSignedWAVECertificate>(GetArena());
    stcertificate_ = p;
  }
  return stcertificate_;
}
inline ::interfaces::msgToBeSignedWAVECertificate* msgPsnymCertFormat::mutable_stcertificate() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertFormat.stCertificate)
  return _internal_mutable_stcertificate();
}
inline void msgPsnymCertFormat::set_allocated_stcertificate(::interfaces::msgToBeSignedWAVECertificate* stcertificate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stcertificate_;
  }
  if (stcertificate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stcertificate);
    if (message_arena != submessage_arena) {
      stcertificate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stcertificate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stcertificate_ = stcertificate;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertFormat.stCertificate)
}

// optional .interfaces.msgSignature stSign = 3;
inline bool msgPsnymCertFormat::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymCertFormat::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymCertFormat::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgPsnymCertFormat::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymCertFormat::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertFormat.stSign)
  return _internal_stsign();
}
inline void msgPsnymCertFormat::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertFormat.stSign)
}
inline ::interfaces::msgSignature* msgPsnymCertFormat::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCertFormat::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertFormat.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCertFormat::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymCertFormat::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertFormat.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymCertFormat::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertFormat.stSign)
}

// -------------------------------------------------------------------

// msgSignerInfo

// required .interfaces.msgSignerIdentifierType.SignerIdentifierType type = 1 [default = self];
inline bool msgSignerInfo::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgSignerInfo::has_type() const {
  return _internal_has_type();
}
inline void msgSignerInfo::clear_type() {
  type_ = 4;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::interfaces::msgSignerIdentifierType_SignerIdentifierType msgSignerInfo::_internal_type() const {
  return static_cast< ::interfaces::msgSignerIdentifierType_SignerIdentifierType >(type_);
}
inline ::interfaces::msgSignerIdentifierType_SignerIdentifierType msgSignerInfo::type() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignerInfo.type)
  return _internal_type();
}
inline void msgSignerInfo::_internal_set_type(::interfaces::msgSignerIdentifierType_SignerIdentifierType value) {
  assert(::interfaces::msgSignerIdentifierType_SignerIdentifierType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  type_ = value;
}
inline void msgSignerInfo::set_type(::interfaces::msgSignerIdentifierType_SignerIdentifierType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignerInfo.type)
}

// required string strCertificate = 2 [default = ""];
inline bool msgSignerInfo::_internal_has_strcertificate() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgSignerInfo::has_strcertificate() const {
  return _internal_has_strcertificate();
}
inline void msgSignerInfo::clear_strcertificate() {
  strcertificate_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgSignerInfo::strcertificate() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignerInfo.strCertificate)
  return _internal_strcertificate();
}
inline void msgSignerInfo::set_strcertificate(const std::string& value) {
  _internal_set_strcertificate(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignerInfo.strCertificate)
}
inline std::string* msgSignerInfo::mutable_strcertificate() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgSignerInfo.strCertificate)
  return _internal_mutable_strcertificate();
}
inline const std::string& msgSignerInfo::_internal_strcertificate() const {
  return strcertificate_.Get();
}
inline void msgSignerInfo::_internal_set_strcertificate(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strcertificate_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgSignerInfo::set_strcertificate(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strcertificate_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgSignerInfo.strCertificate)
}
inline void msgSignerInfo::set_strcertificate(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strcertificate_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgSignerInfo.strCertificate)
}
inline void msgSignerInfo::set_strcertificate(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strcertificate_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgSignerInfo.strCertificate)
}
inline std::string* msgSignerInfo::_internal_mutable_strcertificate() {
  _has_bits_[0] |= 0x00000001u;
  return strcertificate_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgSignerInfo::release_strcertificate() {
  // @@protoc_insertion_point(field_release:interfaces.msgSignerInfo.strCertificate)
  if (!_internal_has_strcertificate()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strcertificate_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgSignerInfo::set_allocated_strcertificate(std::string* strcertificate) {
  if (strcertificate != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strcertificate_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcertificate,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgSignerInfo.strCertificate)
}
inline std::string* msgSignerInfo::unsafe_arena_release_strcertificate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgSignerInfo.strCertificate)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strcertificate_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgSignerInfo::unsafe_arena_set_allocated_strcertificate(
    std::string* strcertificate) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strcertificate != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strcertificate_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strcertificate, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgSignerInfo.strCertificate)
}

// optional string strDigest = 3 [default = ""];
inline bool msgSignerInfo::_internal_has_strdigest() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgSignerInfo::has_strdigest() const {
  return _internal_has_strdigest();
}
inline void msgSignerInfo::clear_strdigest() {
  strdigest_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgSignerInfo::strdigest() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignerInfo.strDigest)
  return _internal_strdigest();
}
inline void msgSignerInfo::set_strdigest(const std::string& value) {
  _internal_set_strdigest(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignerInfo.strDigest)
}
inline std::string* msgSignerInfo::mutable_strdigest() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgSignerInfo.strDigest)
  return _internal_mutable_strdigest();
}
inline const std::string& msgSignerInfo::_internal_strdigest() const {
  return strdigest_.Get();
}
inline void msgSignerInfo::_internal_set_strdigest(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strdigest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgSignerInfo::set_strdigest(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strdigest_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgSignerInfo.strDigest)
}
inline void msgSignerInfo::set_strdigest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strdigest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgSignerInfo.strDigest)
}
inline void msgSignerInfo::set_strdigest(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strdigest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgSignerInfo.strDigest)
}
inline std::string* msgSignerInfo::_internal_mutable_strdigest() {
  _has_bits_[0] |= 0x00000002u;
  return strdigest_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgSignerInfo::release_strdigest() {
  // @@protoc_insertion_point(field_release:interfaces.msgSignerInfo.strDigest)
  if (!_internal_has_strdigest()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strdigest_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgSignerInfo::set_allocated_strdigest(std::string* strdigest) {
  if (strdigest != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strdigest_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strdigest,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgSignerInfo.strDigest)
}
inline std::string* msgSignerInfo::unsafe_arena_release_strdigest() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgSignerInfo.strDigest)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strdigest_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgSignerInfo::unsafe_arena_set_allocated_strdigest(
    std::string* strdigest) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strdigest != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strdigest_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strdigest, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgSignerInfo.strDigest)
}

// optional string strCertificatesChain = 4 [default = ""];
inline bool msgSignerInfo::_internal_has_strcertificateschain() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgSignerInfo::has_strcertificateschain() const {
  return _internal_has_strcertificateschain();
}
inline void msgSignerInfo::clear_strcertificateschain() {
  strcertificateschain_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgSignerInfo::strcertificateschain() const {
  // @@protoc_insertion_point(field_get:interfaces.msgSignerInfo.strCertificatesChain)
  return _internal_strcertificateschain();
}
inline void msgSignerInfo::set_strcertificateschain(const std::string& value) {
  _internal_set_strcertificateschain(value);
  // @@protoc_insertion_point(field_set:interfaces.msgSignerInfo.strCertificatesChain)
}
inline std::string* msgSignerInfo::mutable_strcertificateschain() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgSignerInfo.strCertificatesChain)
  return _internal_mutable_strcertificateschain();
}
inline const std::string& msgSignerInfo::_internal_strcertificateschain() const {
  return strcertificateschain_.Get();
}
inline void msgSignerInfo::_internal_set_strcertificateschain(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strcertificateschain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgSignerInfo::set_strcertificateschain(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strcertificateschain_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgSignerInfo.strCertificatesChain)
}
inline void msgSignerInfo::set_strcertificateschain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strcertificateschain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgSignerInfo.strCertificatesChain)
}
inline void msgSignerInfo::set_strcertificateschain(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strcertificateschain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgSignerInfo.strCertificatesChain)
}
inline std::string* msgSignerInfo::_internal_mutable_strcertificateschain() {
  _has_bits_[0] |= 0x00000004u;
  return strcertificateschain_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgSignerInfo::release_strcertificateschain() {
  // @@protoc_insertion_point(field_release:interfaces.msgSignerInfo.strCertificatesChain)
  if (!_internal_has_strcertificateschain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strcertificateschain_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgSignerInfo::set_allocated_strcertificateschain(std::string* strcertificateschain) {
  if (strcertificateschain != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strcertificateschain_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcertificateschain,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgSignerInfo.strCertificatesChain)
}
inline std::string* msgSignerInfo::unsafe_arena_release_strcertificateschain() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgSignerInfo.strCertificatesChain)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strcertificateschain_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgSignerInfo::unsafe_arena_set_allocated_strcertificateschain(
    std::string* strcertificateschain) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strcertificateschain != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strcertificateschain_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strcertificateschain, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgSignerInfo.strCertificatesChain)
}

// -------------------------------------------------------------------

// msgPsnymKeysStorage

// required int32 iPsnymPrivateKeyLen = 1 [default = -1];
inline bool msgPsnymKeysStorage::_internal_has_ipsnymprivatekeylen() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymKeysStorage::has_ipsnymprivatekeylen() const {
  return _internal_has_ipsnymprivatekeylen();
}
inline void msgPsnymKeysStorage::clear_ipsnymprivatekeylen() {
  ipsnymprivatekeylen_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymKeysStorage::_internal_ipsnymprivatekeylen() const {
  return ipsnymprivatekeylen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymKeysStorage::ipsnymprivatekeylen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymKeysStorage.iPsnymPrivateKeyLen)
  return _internal_ipsnymprivatekeylen();
}
inline void msgPsnymKeysStorage::_internal_set_ipsnymprivatekeylen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ipsnymprivatekeylen_ = value;
}
inline void msgPsnymKeysStorage::set_ipsnymprivatekeylen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipsnymprivatekeylen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymKeysStorage.iPsnymPrivateKeyLen)
}

// required string strPsnymPrivateKey = 2 [default = ""];
inline bool msgPsnymKeysStorage::_internal_has_strpsnymprivatekey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymKeysStorage::has_strpsnymprivatekey() const {
  return _internal_has_strpsnymprivatekey();
}
inline void msgPsnymKeysStorage::clear_strpsnymprivatekey() {
  strpsnymprivatekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymKeysStorage::strpsnymprivatekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
  return _internal_strpsnymprivatekey();
}
inline void msgPsnymKeysStorage::set_strpsnymprivatekey(const std::string& value) {
  _internal_set_strpsnymprivatekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}
inline std::string* msgPsnymKeysStorage::mutable_strpsnymprivatekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
  return _internal_mutable_strpsnymprivatekey();
}
inline const std::string& msgPsnymKeysStorage::_internal_strpsnymprivatekey() const {
  return strpsnymprivatekey_.Get();
}
inline void msgPsnymKeysStorage::_internal_set_strpsnymprivatekey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymprivatekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymKeysStorage::set_strpsnymprivatekey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymprivatekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}
inline void msgPsnymKeysStorage::set_strpsnymprivatekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymprivatekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}
inline void msgPsnymKeysStorage::set_strpsnymprivatekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymprivatekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}
inline std::string* msgPsnymKeysStorage::_internal_mutable_strpsnymprivatekey() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymprivatekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymKeysStorage::release_strpsnymprivatekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
  if (!_internal_has_strpsnymprivatekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymprivatekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymKeysStorage::set_allocated_strpsnymprivatekey(std::string* strpsnymprivatekey) {
  if (strpsnymprivatekey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymprivatekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymprivatekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}
inline std::string* msgPsnymKeysStorage::unsafe_arena_release_strpsnymprivatekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymprivatekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymKeysStorage::unsafe_arena_set_allocated_strpsnymprivatekey(
    std::string* strpsnymprivatekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymprivatekey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymprivatekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymprivatekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymKeysStorage.strPsnymPrivateKey)
}

// required .interfaces.msgPsnymCertFormat stPsnymCert = 3;
inline bool msgPsnymKeysStorage::_internal_has_stpsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stpsnymcert_ != nullptr);
  return value;
}
inline bool msgPsnymKeysStorage::has_stpsnymcert() const {
  return _internal_has_stpsnymcert();
}
inline void msgPsnymKeysStorage::clear_stpsnymcert() {
  if (stpsnymcert_ != nullptr) stpsnymcert_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgPsnymCertFormat& msgPsnymKeysStorage::_internal_stpsnymcert() const {
  const ::interfaces::msgPsnymCertFormat* p = stpsnymcert_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgPsnymCertFormat*>(
      &::interfaces::_msgPsnymCertFormat_default_instance_);
}
inline const ::interfaces::msgPsnymCertFormat& msgPsnymKeysStorage::stpsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymKeysStorage.stPsnymCert)
  return _internal_stpsnymcert();
}
inline void msgPsnymKeysStorage::unsafe_arena_set_allocated_stpsnymcert(
    ::interfaces::msgPsnymCertFormat* stpsnymcert) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stpsnymcert_);
  }
  stpsnymcert_ = stpsnymcert;
  if (stpsnymcert) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymKeysStorage.stPsnymCert)
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymKeysStorage::release_stpsnymcert() {
  auto temp = unsafe_arena_release_stpsnymcert();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymKeysStorage::unsafe_arena_release_stpsnymcert() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymKeysStorage.stPsnymCert)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgPsnymCertFormat* temp = stpsnymcert_;
  stpsnymcert_ = nullptr;
  return temp;
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymKeysStorage::_internal_mutable_stpsnymcert() {
  _has_bits_[0] |= 0x00000002u;
  if (stpsnymcert_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgPsnymCertFormat>(GetArena());
    stpsnymcert_ = p;
  }
  return stpsnymcert_;
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymKeysStorage::mutable_stpsnymcert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymKeysStorage.stPsnymCert)
  return _internal_mutable_stpsnymcert();
}
inline void msgPsnymKeysStorage::set_allocated_stpsnymcert(::interfaces::msgPsnymCertFormat* stpsnymcert) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stpsnymcert_;
  }
  if (stpsnymcert) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stpsnymcert);
    if (message_arena != submessage_arena) {
      stpsnymcert = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stpsnymcert, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stpsnymcert_ = stpsnymcert;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymKeysStorage.stPsnymCert)
}

// -------------------------------------------------------------------

// msgTicketReq

// required int32 iReqType = 1 [default = -1];
inline bool msgTicketReq::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgTicketReq::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgTicketReq::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.iReqType)
  return _internal_ireqtype();
}
inline void msgTicketReq::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgTicketReq::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgTicketReq::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgTicketReq::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgTicketReq::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgTicketReq::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgTicketReq::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.stSigner)
  return _internal_stsigner();
}
inline void msgTicketReq::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketReq.stSigner)
}
inline ::interfaces::msgSignerInfo* msgTicketReq::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketReq::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketReq.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketReq::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgTicketReq::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketReq.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgTicketReq::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketReq.stSigner)
}

// required uint32 uiServices = 3 [default = 0];
inline bool msgTicketReq::_internal_has_uiservices() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgTicketReq::has_uiservices() const {
  return _internal_has_uiservices();
}
inline void msgTicketReq::clear_uiservices() {
  uiservices_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketReq::_internal_uiservices() const {
  return uiservices_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketReq::uiservices() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.uiServices)
  return _internal_uiservices();
}
inline void msgTicketReq::_internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uiservices_ = value;
}
inline void msgTicketReq::set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiservices(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.uiServices)
}

// required uint32 uiPsnymCertNoRequest = 4 [default = 0];
inline bool msgTicketReq::_internal_has_uipsnymcertnorequest() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgTicketReq::has_uipsnymcertnorequest() const {
  return _internal_has_uipsnymcertnorequest();
}
inline void msgTicketReq::clear_uipsnymcertnorequest() {
  uipsnymcertnorequest_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketReq::_internal_uipsnymcertnorequest() const {
  return uipsnymcertnorequest_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketReq::uipsnymcertnorequest() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.uiPsnymCertNoRequest)
  return _internal_uipsnymcertnorequest();
}
inline void msgTicketReq::_internal_set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uipsnymcertnorequest_ = value;
}
inline void msgTicketReq::set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uipsnymcertnorequest(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.uiPsnymCertNoRequest)
}

// required int32 iLTCAIdRange = 5 [default = -1];
inline bool msgTicketReq::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgTicketReq::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgTicketReq::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgTicketReq::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iltcaidrange_ = value;
}
inline void msgTicketReq::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.iLTCAIdRange)
}

// required int32 iPCAIdRange = 6 [default = -1];
inline bool msgTicketReq::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgTicketReq::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgTicketReq::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgTicketReq::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipcaidrange_ = value;
}
inline void msgTicketReq::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.iPCAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgTicketReq::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgTicketReq::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgTicketReq::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketReq::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.iNonce)
  return _internal_inonce();
}
inline void msgTicketReq::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  inonce_ = value;
}
inline void msgTicketReq::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgTicketReq::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgTicketReq::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgTicketReq::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgTicketReq::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  ttimestamp_ = value;
}
inline void msgTicketReq::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.tTimeStamp)
}

// required int64 tPsnymStartTime = 9 [default = -1];
inline bool msgTicketReq::_internal_has_tpsnymstarttime() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgTicketReq::has_tpsnymstarttime() const {
  return _internal_has_tpsnymstarttime();
}
inline void msgTicketReq::clear_tpsnymstarttime() {
  tpsnymstarttime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::_internal_tpsnymstarttime() const {
  return tpsnymstarttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::tpsnymstarttime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.tPsnymStartTime)
  return _internal_tpsnymstarttime();
}
inline void msgTicketReq::_internal_set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  tpsnymstarttime_ = value;
}
inline void msgTicketReq::set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tpsnymstarttime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.tPsnymStartTime)
}

// required int64 tPsnymEndTime = 10 [default = -1];
inline bool msgTicketReq::_internal_has_tpsnymendtime() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool msgTicketReq::has_tpsnymendtime() const {
  return _internal_has_tpsnymendtime();
}
inline void msgTicketReq::clear_tpsnymendtime() {
  tpsnymendtime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::_internal_tpsnymendtime() const {
  return tpsnymendtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketReq::tpsnymendtime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.tPsnymEndTime)
  return _internal_tpsnymendtime();
}
inline void msgTicketReq::_internal_set_tpsnymendtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  tpsnymendtime_ = value;
}
inline void msgTicketReq::set_tpsnymendtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tpsnymendtime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.tPsnymEndTime)
}

// required string strX509Cert = 11 [default = ""];
inline bool msgTicketReq::_internal_has_strx509cert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgTicketReq::has_strx509cert() const {
  return _internal_has_strx509cert();
}
inline void msgTicketReq::clear_strx509cert() {
  strx509cert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgTicketReq::strx509cert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.strX509Cert)
  return _internal_strx509cert();
}
inline void msgTicketReq::set_strx509cert(const std::string& value) {
  _internal_set_strx509cert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketReq.strX509Cert)
}
inline std::string* msgTicketReq::mutable_strx509cert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketReq.strX509Cert)
  return _internal_mutable_strx509cert();
}
inline const std::string& msgTicketReq::_internal_strx509cert() const {
  return strx509cert_.Get();
}
inline void msgTicketReq::_internal_set_strx509cert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketReq::set_strx509cert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strx509cert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketReq.strX509Cert)
}
inline void msgTicketReq::set_strx509cert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketReq.strX509Cert)
}
inline void msgTicketReq::set_strx509cert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strx509cert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketReq.strX509Cert)
}
inline std::string* msgTicketReq::_internal_mutable_strx509cert() {
  _has_bits_[0] |= 0x00000001u;
  return strx509cert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketReq::release_strx509cert() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketReq.strX509Cert)
  if (!_internal_has_strx509cert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strx509cert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketReq::set_allocated_strx509cert(std::string* strx509cert) {
  if (strx509cert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strx509cert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strx509cert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketReq.strX509Cert)
}
inline std::string* msgTicketReq::unsafe_arena_release_strx509cert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketReq.strX509Cert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strx509cert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketReq::unsafe_arena_set_allocated_strx509cert(
    std::string* strx509cert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strx509cert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strx509cert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strx509cert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketReq.strX509Cert)
}

// optional .interfaces.msgSignature stSign = 12;
inline bool msgTicketReq::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgTicketReq::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgTicketReq::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgTicketReq::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgTicketReq::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketReq.stSign)
  return _internal_stsign();
}
inline void msgTicketReq::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketReq.stSign)
}
inline ::interfaces::msgSignature* msgTicketReq::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgTicketReq::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketReq.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgTicketReq::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgTicketReq::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketReq.stSign)
  return _internal_mutable_stsign();
}
inline void msgTicketReq::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketReq.stSign)
}

// -------------------------------------------------------------------

// msgForeignTicketReq

// required int32 iReqType = 1 [default = -1];
inline bool msgForeignTicketReq::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgForeignTicketReq::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.iReqType)
  return _internal_ireqtype();
}
inline void msgForeignTicketReq::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ireqtype_ = value;
}
inline void msgForeignTicketReq::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgForeignTicketReq::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgForeignTicketReq::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgForeignTicketReq::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignerInfo& msgForeignTicketReq::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgForeignTicketReq::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.stSigner)
  return _internal_stsigner();
}
inline void msgForeignTicketReq::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgForeignTicketReq.stSigner)
}
inline ::interfaces::msgSignerInfo* msgForeignTicketReq::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgForeignTicketReq::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgForeignTicketReq.stSigner)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgForeignTicketReq::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000004u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgForeignTicketReq::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgForeignTicketReq.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgForeignTicketReq::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgForeignTicketReq.stSigner)
}

// required uint32 uiServices = 3 [default = 0];
inline bool msgForeignTicketReq::_internal_has_uiservices() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_uiservices() const {
  return _internal_has_uiservices();
}
inline void msgForeignTicketReq::clear_uiservices() {
  uiservices_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgForeignTicketReq::_internal_uiservices() const {
  return uiservices_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgForeignTicketReq::uiservices() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.uiServices)
  return _internal_uiservices();
}
inline void msgForeignTicketReq::_internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uiservices_ = value;
}
inline void msgForeignTicketReq::set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiservices(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.uiServices)
}

// required int32 iNativeLTCACertLength = 6 [default = -1];
inline bool msgForeignTicketReq::_internal_has_inativeltcacertlength() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_inativeltcacertlength() const {
  return _internal_has_inativeltcacertlength();
}
inline void msgForeignTicketReq::clear_inativeltcacertlength() {
  inativeltcacertlength_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::_internal_inativeltcacertlength() const {
  return inativeltcacertlength_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::inativeltcacertlength() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.iNativeLTCACertLength)
  return _internal_inativeltcacertlength();
}
inline void msgForeignTicketReq::_internal_set_inativeltcacertlength(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inativeltcacertlength_ = value;
}
inline void msgForeignTicketReq::set_inativeltcacertlength(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inativeltcacertlength(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.iNativeLTCACertLength)
}

// required string strNativeLTCACert = 7 [default = ""];
inline bool msgForeignTicketReq::_internal_has_strnativeltcacert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_strnativeltcacert() const {
  return _internal_has_strnativeltcacert();
}
inline void msgForeignTicketReq::clear_strnativeltcacert() {
  strnativeltcacert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgForeignTicketReq::strnativeltcacert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.strNativeLTCACert)
  return _internal_strnativeltcacert();
}
inline void msgForeignTicketReq::set_strnativeltcacert(const std::string& value) {
  _internal_set_strnativeltcacert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.strNativeLTCACert)
}
inline std::string* msgForeignTicketReq::mutable_strnativeltcacert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgForeignTicketReq.strNativeLTCACert)
  return _internal_mutable_strnativeltcacert();
}
inline const std::string& msgForeignTicketReq::_internal_strnativeltcacert() const {
  return strnativeltcacert_.Get();
}
inline void msgForeignTicketReq::_internal_set_strnativeltcacert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strnativeltcacert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgForeignTicketReq::set_strnativeltcacert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strnativeltcacert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgForeignTicketReq.strNativeLTCACert)
}
inline void msgForeignTicketReq::set_strnativeltcacert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strnativeltcacert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgForeignTicketReq.strNativeLTCACert)
}
inline void msgForeignTicketReq::set_strnativeltcacert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strnativeltcacert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgForeignTicketReq.strNativeLTCACert)
}
inline std::string* msgForeignTicketReq::_internal_mutable_strnativeltcacert() {
  _has_bits_[0] |= 0x00000001u;
  return strnativeltcacert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgForeignTicketReq::release_strnativeltcacert() {
  // @@protoc_insertion_point(field_release:interfaces.msgForeignTicketReq.strNativeLTCACert)
  if (!_internal_has_strnativeltcacert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strnativeltcacert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgForeignTicketReq::set_allocated_strnativeltcacert(std::string* strnativeltcacert) {
  if (strnativeltcacert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strnativeltcacert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strnativeltcacert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgForeignTicketReq.strNativeLTCACert)
}
inline std::string* msgForeignTicketReq::unsafe_arena_release_strnativeltcacert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgForeignTicketReq.strNativeLTCACert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strnativeltcacert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgForeignTicketReq::unsafe_arena_set_allocated_strnativeltcacert(
    std::string* strnativeltcacert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strnativeltcacert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strnativeltcacert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strnativeltcacert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgForeignTicketReq.strNativeLTCACert)
}

// required int32 iNativeTicketLength = 8 [default = -1];
inline bool msgForeignTicketReq::_internal_has_inativeticketlength() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_inativeticketlength() const {
  return _internal_has_inativeticketlength();
}
inline void msgForeignTicketReq::clear_inativeticketlength() {
  inativeticketlength_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::_internal_inativeticketlength() const {
  return inativeticketlength_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::inativeticketlength() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.iNativeTicketLength)
  return _internal_inativeticketlength();
}
inline void msgForeignTicketReq::_internal_set_inativeticketlength(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  inativeticketlength_ = value;
}
inline void msgForeignTicketReq::set_inativeticketlength(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inativeticketlength(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.iNativeTicketLength)
}

// required string strNativeTicket = 9 [default = ""];
inline bool msgForeignTicketReq::_internal_has_strnativeticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_strnativeticket() const {
  return _internal_has_strnativeticket();
}
inline void msgForeignTicketReq::clear_strnativeticket() {
  strnativeticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgForeignTicketReq::strnativeticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.strNativeTicket)
  return _internal_strnativeticket();
}
inline void msgForeignTicketReq::set_strnativeticket(const std::string& value) {
  _internal_set_strnativeticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.strNativeTicket)
}
inline std::string* msgForeignTicketReq::mutable_strnativeticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgForeignTicketReq.strNativeTicket)
  return _internal_mutable_strnativeticket();
}
inline const std::string& msgForeignTicketReq::_internal_strnativeticket() const {
  return strnativeticket_.Get();
}
inline void msgForeignTicketReq::_internal_set_strnativeticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strnativeticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgForeignTicketReq::set_strnativeticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strnativeticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgForeignTicketReq.strNativeTicket)
}
inline void msgForeignTicketReq::set_strnativeticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strnativeticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgForeignTicketReq.strNativeTicket)
}
inline void msgForeignTicketReq::set_strnativeticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strnativeticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgForeignTicketReq.strNativeTicket)
}
inline std::string* msgForeignTicketReq::_internal_mutable_strnativeticket() {
  _has_bits_[0] |= 0x00000002u;
  return strnativeticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgForeignTicketReq::release_strnativeticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgForeignTicketReq.strNativeTicket)
  if (!_internal_has_strnativeticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strnativeticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgForeignTicketReq::set_allocated_strnativeticket(std::string* strnativeticket) {
  if (strnativeticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strnativeticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strnativeticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgForeignTicketReq.strNativeTicket)
}
inline std::string* msgForeignTicketReq::unsafe_arena_release_strnativeticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgForeignTicketReq.strNativeTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strnativeticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgForeignTicketReq::unsafe_arena_set_allocated_strnativeticket(
    std::string* strnativeticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strnativeticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strnativeticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strnativeticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgForeignTicketReq.strNativeTicket)
}

// required uint32 uiPsnymCertNoRequest = 10 [default = 0];
inline bool msgForeignTicketReq::_internal_has_uipsnymcertnorequest() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_uipsnymcertnorequest() const {
  return _internal_has_uipsnymcertnorequest();
}
inline void msgForeignTicketReq::clear_uipsnymcertnorequest() {
  uipsnymcertnorequest_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgForeignTicketReq::_internal_uipsnymcertnorequest() const {
  return uipsnymcertnorequest_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgForeignTicketReq::uipsnymcertnorequest() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.uiPsnymCertNoRequest)
  return _internal_uipsnymcertnorequest();
}
inline void msgForeignTicketReq::_internal_set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uipsnymcertnorequest_ = value;
}
inline void msgForeignTicketReq::set_uipsnymcertnorequest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uipsnymcertnorequest(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.uiPsnymCertNoRequest)
}

// required int32 iNonce = 11 [default = -1];
inline bool msgForeignTicketReq::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgForeignTicketReq::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgForeignTicketReq::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.iNonce)
  return _internal_inonce();
}
inline void msgForeignTicketReq::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  inonce_ = value;
}
inline void msgForeignTicketReq::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.iNonce)
}

// required int64 tTimeStamp = 12 [default = -1];
inline bool msgForeignTicketReq::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgForeignTicketReq::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgForeignTicketReq::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgForeignTicketReq::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgForeignTicketReq::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgForeignTicketReq::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  ttimestamp_ = value;
}
inline void msgForeignTicketReq::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgForeignTicketReq.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 13;
inline bool msgForeignTicketReq::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgForeignTicketReq::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgForeignTicketReq::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgForeignTicketReq::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgForeignTicketReq::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgForeignTicketReq.stSign)
  return _internal_stsign();
}
inline void msgForeignTicketReq::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgForeignTicketReq.stSign)
}
inline ::interfaces::msgSignature* msgForeignTicketReq::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgForeignTicketReq::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgForeignTicketReq.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgForeignTicketReq::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgForeignTicketReq::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgForeignTicketReq.stSign)
  return _internal_mutable_stsign();
}
inline void msgForeignTicketReq::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgForeignTicketReq.stSign)
}

// -------------------------------------------------------------------

// msgVehicleAttributes

// required uint32 chRole = 1 [default = 0];
inline bool msgVehicleAttributes::_internal_has_chrole() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVehicleAttributes::has_chrole() const {
  return _internal_has_chrole();
}
inline void msgVehicleAttributes::clear_chrole() {
  chrole_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::_internal_chrole() const {
  return chrole_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::chrole() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleAttributes.chRole)
  return _internal_chrole();
}
inline void msgVehicleAttributes::_internal_set_chrole(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  chrole_ = value;
}
inline void msgVehicleAttributes::set_chrole(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chrole(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleAttributes.chRole)
}

// required uint32 uiServices = 2 [default = 0];
inline bool msgVehicleAttributes::_internal_has_uiservices() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVehicleAttributes::has_uiservices() const {
  return _internal_has_uiservices();
}
inline void msgVehicleAttributes::clear_uiservices() {
  uiservices_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::_internal_uiservices() const {
  return uiservices_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::uiservices() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleAttributes.uiServices)
  return _internal_uiservices();
}
inline void msgVehicleAttributes::_internal_set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uiservices_ = value;
}
inline void msgVehicleAttributes::set_uiservices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiservices(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleAttributes.uiServices)
}

// required uint32 chTypeOfVehicle = 3 [default = 0];
inline bool msgVehicleAttributes::_internal_has_chtypeofvehicle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVehicleAttributes::has_chtypeofvehicle() const {
  return _internal_has_chtypeofvehicle();
}
inline void msgVehicleAttributes::clear_chtypeofvehicle() {
  chtypeofvehicle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::_internal_chtypeofvehicle() const {
  return chtypeofvehicle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::chtypeofvehicle() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleAttributes.chTypeOfVehicle)
  return _internal_chtypeofvehicle();
}
inline void msgVehicleAttributes::_internal_set_chtypeofvehicle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  chtypeofvehicle_ = value;
}
inline void msgVehicleAttributes::set_chtypeofvehicle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chtypeofvehicle(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleAttributes.chTypeOfVehicle)
}

// required uint32 chPolicyId = 4 [default = 0];
inline bool msgVehicleAttributes::_internal_has_chpolicyid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVehicleAttributes::has_chpolicyid() const {
  return _internal_has_chpolicyid();
}
inline void msgVehicleAttributes::clear_chpolicyid() {
  chpolicyid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::_internal_chpolicyid() const {
  return chpolicyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVehicleAttributes::chpolicyid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleAttributes.chPolicyId)
  return _internal_chpolicyid();
}
inline void msgVehicleAttributes::_internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  chpolicyid_ = value;
}
inline void msgVehicleAttributes::set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chpolicyid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleAttributes.chPolicyId)
}

// -------------------------------------------------------------------

// msgTicketFormat

// required int32 iTicketType = 1 [default = -1];
inline bool msgTicketFormat::_internal_has_itickettype() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgTicketFormat::has_itickettype() const {
  return _internal_has_itickettype();
}
inline void msgTicketFormat::clear_itickettype() {
  itickettype_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::_internal_itickettype() const {
  return itickettype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::itickettype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.iTicketType)
  return _internal_itickettype();
}
inline void msgTicketFormat::_internal_set_itickettype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  itickettype_ = value;
}
inline void msgTicketFormat::set_itickettype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_itickettype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.iTicketType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgTicketFormat::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgTicketFormat::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgTicketFormat::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignerInfo& msgTicketFormat::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgTicketFormat::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.stSigner)
  return _internal_stsigner();
}
inline void msgTicketFormat::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketFormat.stSigner)
}
inline ::interfaces::msgSignerInfo* msgTicketFormat::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketFormat::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketFormat.stSigner)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketFormat::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000004u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgTicketFormat::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketFormat.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgTicketFormat::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketFormat.stSigner)
}

// required string strTicketSerialNo = 3 [default = ""];
inline bool msgTicketFormat::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgTicketFormat::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgTicketFormat::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgTicketFormat::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgTicketFormat::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.strTicketSerialNo)
}
inline std::string* msgTicketFormat::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketFormat.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgTicketFormat::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgTicketFormat::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketFormat::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketFormat.strTicketSerialNo)
}
inline void msgTicketFormat::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketFormat.strTicketSerialNo)
}
inline void msgTicketFormat::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketFormat.strTicketSerialNo)
}
inline std::string* msgTicketFormat::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketFormat::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketFormat.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketFormat::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketFormat.strTicketSerialNo)
}
inline std::string* msgTicketFormat::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketFormat.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketFormat::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketFormat.strTicketSerialNo)
}

// required string strTicketIdentifiableKey = 4 [default = ""];
inline bool msgTicketFormat::_internal_has_strticketidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgTicketFormat::has_strticketidentifiablekey() const {
  return _internal_has_strticketidentifiablekey();
}
inline void msgTicketFormat::clear_strticketidentifiablekey() {
  strticketidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgTicketFormat::strticketidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.strTicketIdentifiableKey)
  return _internal_strticketidentifiablekey();
}
inline void msgTicketFormat::set_strticketidentifiablekey(const std::string& value) {
  _internal_set_strticketidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}
inline std::string* msgTicketFormat::mutable_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketFormat.strTicketIdentifiableKey)
  return _internal_mutable_strticketidentifiablekey();
}
inline const std::string& msgTicketFormat::_internal_strticketidentifiablekey() const {
  return strticketidentifiablekey_.Get();
}
inline void msgTicketFormat::_internal_set_strticketidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketFormat::set_strticketidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}
inline void msgTicketFormat::set_strticketidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}
inline void msgTicketFormat::set_strticketidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}
inline std::string* msgTicketFormat::_internal_mutable_strticketidentifiablekey() {
  _has_bits_[0] |= 0x00000002u;
  return strticketidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketFormat::release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketFormat.strTicketIdentifiableKey)
  if (!_internal_has_strticketidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticketidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketFormat::set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey) {
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}
inline std::string* msgTicketFormat::unsafe_arena_release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketFormat.strTicketIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticketidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketFormat::unsafe_arena_set_allocated_strticketidentifiablekey(
    std::string* strticketidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketFormat.strTicketIdentifiableKey)
}

// required int32 iLTCAIdRange = 5 [default = -1];
inline bool msgTicketFormat::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgTicketFormat::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgTicketFormat::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgTicketFormat::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  iltcaidrange_ = value;
}
inline void msgTicketFormat::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.iLTCAIdRange)
}

// required int32 iPCAIdRange = 6 [default = -1];
inline bool msgTicketFormat::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgTicketFormat::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgTicketFormat::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketFormat::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgTicketFormat::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipcaidrange_ = value;
}
inline void msgTicketFormat::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.iPCAIdRange)
}

// required uint32 uiMaxNoPsnymCert = 7 [default = 0];
inline bool msgTicketFormat::_internal_has_uimaxnopsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgTicketFormat::has_uimaxnopsnymcert() const {
  return _internal_has_uimaxnopsnymcert();
}
inline void msgTicketFormat::clear_uimaxnopsnymcert() {
  uimaxnopsnymcert_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketFormat::_internal_uimaxnopsnymcert() const {
  return uimaxnopsnymcert_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketFormat::uimaxnopsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.uiMaxNoPsnymCert)
  return _internal_uimaxnopsnymcert();
}
inline void msgTicketFormat::_internal_set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uimaxnopsnymcert_ = value;
}
inline void msgTicketFormat::set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnopsnymcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.uiMaxNoPsnymCert)
}

// required .interfaces.msgVehicleAttributes stVehicleRole = 8;
inline bool msgTicketFormat::_internal_has_stvehiclerole() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stvehiclerole_ != nullptr);
  return value;
}
inline bool msgTicketFormat::has_stvehiclerole() const {
  return _internal_has_stvehiclerole();
}
inline void msgTicketFormat::clear_stvehiclerole() {
  if (stvehiclerole_ != nullptr) stvehiclerole_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgVehicleAttributes& msgTicketFormat::_internal_stvehiclerole() const {
  const ::interfaces::msgVehicleAttributes* p = stvehiclerole_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgVehicleAttributes*>(
      &::interfaces::_msgVehicleAttributes_default_instance_);
}
inline const ::interfaces::msgVehicleAttributes& msgTicketFormat::stvehiclerole() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.stVehicleRole)
  return _internal_stvehiclerole();
}
inline void msgTicketFormat::unsafe_arena_set_allocated_stvehiclerole(
    ::interfaces::msgVehicleAttributes* stvehiclerole) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stvehiclerole_);
  }
  stvehiclerole_ = stvehiclerole;
  if (stvehiclerole) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketFormat.stVehicleRole)
}
inline ::interfaces::msgVehicleAttributes* msgTicketFormat::release_stvehiclerole() {
  auto temp = unsafe_arena_release_stvehiclerole();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgVehicleAttributes* msgTicketFormat::unsafe_arena_release_stvehiclerole() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketFormat.stVehicleRole)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgVehicleAttributes* temp = stvehiclerole_;
  stvehiclerole_ = nullptr;
  return temp;
}
inline ::interfaces::msgVehicleAttributes* msgTicketFormat::_internal_mutable_stvehiclerole() {
  _has_bits_[0] |= 0x00000008u;
  if (stvehiclerole_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgVehicleAttributes>(GetArena());
    stvehiclerole_ = p;
  }
  return stvehiclerole_;
}
inline ::interfaces::msgVehicleAttributes* msgTicketFormat::mutable_stvehiclerole() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketFormat.stVehicleRole)
  return _internal_mutable_stvehiclerole();
}
inline void msgTicketFormat::set_allocated_stvehiclerole(::interfaces::msgVehicleAttributes* stvehiclerole) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stvehiclerole_;
  }
  if (stvehiclerole) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stvehiclerole);
    if (message_arena != submessage_arena) {
      stvehiclerole = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stvehiclerole, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stvehiclerole_ = stvehiclerole;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketFormat.stVehicleRole)
}

// required bool bIsForeignTicket = 9 [default = false];
inline bool msgTicketFormat::_internal_has_bisforeignticket() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgTicketFormat::has_bisforeignticket() const {
  return _internal_has_bisforeignticket();
}
inline void msgTicketFormat::clear_bisforeignticket() {
  bisforeignticket_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool msgTicketFormat::_internal_bisforeignticket() const {
  return bisforeignticket_;
}
inline bool msgTicketFormat::bisforeignticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.bIsForeignTicket)
  return _internal_bisforeignticket();
}
inline void msgTicketFormat::_internal_set_bisforeignticket(bool value) {
  _has_bits_[0] |= 0x00000040u;
  bisforeignticket_ = value;
}
inline void msgTicketFormat::set_bisforeignticket(bool value) {
  _internal_set_bisforeignticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.bIsForeignTicket)
}

// required int64 tTicketStartTime = 10 [default = -1];
inline bool msgTicketFormat::_internal_has_tticketstarttime() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgTicketFormat::has_tticketstarttime() const {
  return _internal_has_tticketstarttime();
}
inline void msgTicketFormat::clear_tticketstarttime() {
  tticketstarttime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::_internal_tticketstarttime() const {
  return tticketstarttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::tticketstarttime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.tTicketStartTime)
  return _internal_tticketstarttime();
}
inline void msgTicketFormat::_internal_set_tticketstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  tticketstarttime_ = value;
}
inline void msgTicketFormat::set_tticketstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tticketstarttime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.tTicketStartTime)
}

// required int64 tTicketLifeTime = 11 [default = -1];
inline bool msgTicketFormat::_internal_has_tticketlifetime() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool msgTicketFormat::has_tticketlifetime() const {
  return _internal_has_tticketlifetime();
}
inline void msgTicketFormat::clear_tticketlifetime() {
  tticketlifetime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::_internal_tticketlifetime() const {
  return tticketlifetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::tticketlifetime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.tTicketLifeTime)
  return _internal_tticketlifetime();
}
inline void msgTicketFormat::_internal_set_tticketlifetime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  tticketlifetime_ = value;
}
inline void msgTicketFormat::set_tticketlifetime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tticketlifetime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.tTicketLifeTime)
}

// required int64 tPsnymStartTime = 12 [default = -1];
inline bool msgTicketFormat::_internal_has_tpsnymstarttime() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool msgTicketFormat::has_tpsnymstarttime() const {
  return _internal_has_tpsnymstarttime();
}
inline void msgTicketFormat::clear_tpsnymstarttime() {
  tpsnymstarttime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::_internal_tpsnymstarttime() const {
  return tpsnymstarttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::tpsnymstarttime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.tPsnymStartTime)
  return _internal_tpsnymstarttime();
}
inline void msgTicketFormat::_internal_set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  tpsnymstarttime_ = value;
}
inline void msgTicketFormat::set_tpsnymstarttime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tpsnymstarttime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.tPsnymStartTime)
}

// required int64 tPsnymExpiryTime = 13 [default = -1];
inline bool msgTicketFormat::_internal_has_tpsnymexpirytime() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool msgTicketFormat::has_tpsnymexpirytime() const {
  return _internal_has_tpsnymexpirytime();
}
inline void msgTicketFormat::clear_tpsnymexpirytime() {
  tpsnymexpirytime_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::_internal_tpsnymexpirytime() const {
  return tpsnymexpirytime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketFormat::tpsnymexpirytime() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.tPsnymExpiryTime)
  return _internal_tpsnymexpirytime();
}
inline void msgTicketFormat::_internal_set_tpsnymexpirytime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00002000u;
  tpsnymexpirytime_ = value;
}
inline void msgTicketFormat::set_tpsnymexpirytime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tpsnymexpirytime(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketFormat.tPsnymExpiryTime)
}

// optional .interfaces.msgSignature stSign = 14;
inline bool msgTicketFormat::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgTicketFormat::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgTicketFormat::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::interfaces::msgSignature& msgTicketFormat::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgTicketFormat::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketFormat.stSign)
  return _internal_stsign();
}
inline void msgTicketFormat::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketFormat.stSign)
}
inline ::interfaces::msgSignature* msgTicketFormat::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgTicketFormat::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketFormat.stSign)
  _has_bits_[0] &= ~0x00000010u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgTicketFormat::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000010u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgTicketFormat::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketFormat.stSign)
  return _internal_mutable_stsign();
}
inline void msgTicketFormat::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketFormat.stSign)
}

// -------------------------------------------------------------------

// msgTicketRes

// required int32 iReqType = 1 [default = -1];
inline bool msgTicketRes::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgTicketRes::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgTicketRes::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.iReqType)
  return _internal_ireqtype();
}
inline void msgTicketRes::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ireqtype_ = value;
}
inline void msgTicketRes::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgTicketRes::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgTicketRes::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgTicketRes::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgTicketRes::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgTicketRes::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.stSigner)
  return _internal_stsigner();
}
inline void msgTicketRes::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketRes.stSigner)
}
inline ::interfaces::msgSignerInfo* msgTicketRes::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketRes::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketRes.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketRes::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgTicketRes::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketRes.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgTicketRes::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketRes.stSigner)
}

// required int32 iTicketSize = 3 [default = -1];
inline bool msgTicketRes::_internal_has_iticketsize() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgTicketRes::has_iticketsize() const {
  return _internal_has_iticketsize();
}
inline void msgTicketRes::clear_iticketsize() {
  iticketsize_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::_internal_iticketsize() const {
  return iticketsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::iticketsize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.iTicketSize)
  return _internal_iticketsize();
}
inline void msgTicketRes::_internal_set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iticketsize_ = value;
}
inline void msgTicketRes::set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iticketsize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.iTicketSize)
}

// required string strTicket = 4 [default = ""];
inline bool msgTicketRes::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgTicketRes::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgTicketRes::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgTicketRes::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.strTicket)
  return _internal_strticket();
}
inline void msgTicketRes::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.strTicket)
}
inline std::string* msgTicketRes::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketRes.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgTicketRes::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgTicketRes::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketRes::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketRes.strTicket)
}
inline void msgTicketRes::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketRes.strTicket)
}
inline void msgTicketRes::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketRes.strTicket)
}
inline std::string* msgTicketRes::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000001u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketRes::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketRes.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketRes::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketRes.strTicket)
}
inline std::string* msgTicketRes::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketRes.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketRes::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketRes.strTicket)
}

// required uint32 uiMaxNoPsnymCert = 5 [default = 0];
inline bool msgTicketRes::_internal_has_uimaxnopsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgTicketRes::has_uimaxnopsnymcert() const {
  return _internal_has_uimaxnopsnymcert();
}
inline void msgTicketRes::clear_uimaxnopsnymcert() {
  uimaxnopsnymcert_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketRes::_internal_uimaxnopsnymcert() const {
  return uimaxnopsnymcert_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketRes::uimaxnopsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.uiMaxNoPsnymCert)
  return _internal_uimaxnopsnymcert();
}
inline void msgTicketRes::_internal_set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uimaxnopsnymcert_ = value;
}
inline void msgTicketRes::set_uimaxnopsnymcert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnopsnymcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.uiMaxNoPsnymCert)
}

// required int32 iLTCAIdRange = 6 [default = -1];
inline bool msgTicketRes::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgTicketRes::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgTicketRes::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgTicketRes::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  iltcaidrange_ = value;
}
inline void msgTicketRes::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.iLTCAIdRange)
}

// required int32 iPCAIdRange = 7 [default = -1];
inline bool msgTicketRes::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgTicketRes::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgTicketRes::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgTicketRes::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  ipcaidrange_ = value;
}
inline void msgTicketRes::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.iPCAIdRange)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgTicketRes::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgTicketRes::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgTicketRes::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketRes::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.iNonce)
  return _internal_inonce();
}
inline void msgTicketRes::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgTicketRes::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgTicketRes::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgTicketRes::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgTicketRes::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketRes::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketRes::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgTicketRes::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  ttimestamp_ = value;
}
inline void msgTicketRes::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketRes.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 10;
inline bool msgTicketRes::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgTicketRes::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgTicketRes::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgTicketRes::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgTicketRes::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgTicketRes::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketRes.stErrInfo)
}
inline ::interfaces::msgError* msgTicketRes::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgTicketRes::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketRes.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgTicketRes::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgTicketRes::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketRes.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgTicketRes::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketRes.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 11;
inline bool msgTicketRes::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgTicketRes::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgTicketRes::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgTicketRes::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgTicketRes::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketRes.stSign)
  return _internal_stsign();
}
inline void msgTicketRes::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketRes.stSign)
}
inline ::interfaces::msgSignature* msgTicketRes::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgTicketRes::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketRes.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgTicketRes::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgTicketRes::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketRes.stSign)
  return _internal_mutable_stsign();
}
inline void msgTicketRes::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketRes.stSign)
}

// -------------------------------------------------------------------

// msgToBeSignedCSR

// required uint32 csrVersion = 1 [default = 0];
inline bool msgToBeSignedCSR::_internal_has_csrversion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgToBeSignedCSR::has_csrversion() const {
  return _internal_has_csrversion();
}
inline void msgToBeSignedCSR::clear_csrversion() {
  csrversion_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCSR::_internal_csrversion() const {
  return csrversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCSR::csrversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCSR.csrVersion)
  return _internal_csrversion();
}
inline void msgToBeSignedCSR::_internal_set_csrversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  csrversion_ = value;
}
inline void msgToBeSignedCSR::set_csrversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_csrversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCSR.csrVersion)
}

// required .interfaces.msgSubType.SubjectType subjectType = 2 [default = wsa_ca1];
inline bool msgToBeSignedCSR::_internal_has_subjecttype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgToBeSignedCSR::has_subjecttype() const {
  return _internal_has_subjecttype();
}
inline void msgToBeSignedCSR::clear_subjecttype() {
  subjecttype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::interfaces::msgSubType_SubjectType msgToBeSignedCSR::_internal_subjecttype() const {
  return static_cast< ::interfaces::msgSubType_SubjectType >(subjecttype_);
}
inline ::interfaces::msgSubType_SubjectType msgToBeSignedCSR::subjecttype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCSR.subjectType)
  return _internal_subjecttype();
}
inline void msgToBeSignedCSR::_internal_set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  assert(::interfaces::msgSubType_SubjectType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  subjecttype_ = value;
}
inline void msgToBeSignedCSR::set_subjecttype(::interfaces::msgSubType_SubjectType value) {
  _internal_set_subjecttype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCSR.subjectType)
}

// required .interfaces.msgRequestScopeType.RequestScopeType requestType = 3 [default = specifiedInRequest];
inline bool msgToBeSignedCSR::_internal_has_requesttype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgToBeSignedCSR::has_requesttype() const {
  return _internal_has_requesttype();
}
inline void msgToBeSignedCSR::clear_requesttype() {
  requesttype_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::interfaces::msgRequestScopeType_RequestScopeType msgToBeSignedCSR::_internal_requesttype() const {
  return static_cast< ::interfaces::msgRequestScopeType_RequestScopeType >(requesttype_);
}
inline ::interfaces::msgRequestScopeType_RequestScopeType msgToBeSignedCSR::requesttype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCSR.requestType)
  return _internal_requesttype();
}
inline void msgToBeSignedCSR::_internal_set_requesttype(::interfaces::msgRequestScopeType_RequestScopeType value) {
  assert(::interfaces::msgRequestScopeType_RequestScopeType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  requesttype_ = value;
}
inline void msgToBeSignedCSR::set_requesttype(::interfaces::msgRequestScopeType_RequestScopeType value) {
  _internal_set_requesttype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCSR.requestType)
}

// optional .interfaces.msgCertSpecificData typeSpecificData = 4;
inline bool msgToBeSignedCSR::_internal_has_typespecificdata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || typespecificdata_ != nullptr);
  return value;
}
inline bool msgToBeSignedCSR::has_typespecificdata() const {
  return _internal_has_typespecificdata();
}
inline void msgToBeSignedCSR::clear_typespecificdata() {
  if (typespecificdata_ != nullptr) typespecificdata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgCertSpecificData& msgToBeSignedCSR::_internal_typespecificdata() const {
  const ::interfaces::msgCertSpecificData* p = typespecificdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgCertSpecificData*>(
      &::interfaces::_msgCertSpecificData_default_instance_);
}
inline const ::interfaces::msgCertSpecificData& msgToBeSignedCSR::typespecificdata() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCSR.typeSpecificData)
  return _internal_typespecificdata();
}
inline void msgToBeSignedCSR::unsafe_arena_set_allocated_typespecificdata(
    ::interfaces::msgCertSpecificData* typespecificdata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(typespecificdata_);
  }
  typespecificdata_ = typespecificdata;
  if (typespecificdata) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedCSR.typeSpecificData)
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedCSR::release_typespecificdata() {
  auto temp = unsafe_arena_release_typespecificdata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedCSR::unsafe_arena_release_typespecificdata() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedCSR.typeSpecificData)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgCertSpecificData* temp = typespecificdata_;
  typespecificdata_ = nullptr;
  return temp;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedCSR::_internal_mutable_typespecificdata() {
  _has_bits_[0] |= 0x00000001u;
  if (typespecificdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgCertSpecificData>(GetArena());
    typespecificdata_ = p;
  }
  return typespecificdata_;
}
inline ::interfaces::msgCertSpecificData* msgToBeSignedCSR::mutable_typespecificdata() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedCSR.typeSpecificData)
  return _internal_mutable_typespecificdata();
}
inline void msgToBeSignedCSR::set_allocated_typespecificdata(::interfaces::msgCertSpecificData* typespecificdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete typespecificdata_;
  }
  if (typespecificdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(typespecificdata);
    if (message_arena != submessage_arena) {
      typespecificdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, typespecificdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  typespecificdata_ = typespecificdata;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedCSR.typeSpecificData)
}

// required .interfaces.msgECPublicKey stECPsnymPublicKey = 5;
inline bool msgToBeSignedCSR::_internal_has_stecpsnympublickey() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stecpsnympublickey_ != nullptr);
  return value;
}
inline bool msgToBeSignedCSR::has_stecpsnympublickey() const {
  return _internal_has_stecpsnympublickey();
}
inline void msgToBeSignedCSR::clear_stecpsnympublickey() {
  if (stecpsnympublickey_ != nullptr) stecpsnympublickey_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgECPublicKey& msgToBeSignedCSR::_internal_stecpsnympublickey() const {
  const ::interfaces::msgECPublicKey* p = stecpsnympublickey_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgECPublicKey*>(
      &::interfaces::_msgECPublicKey_default_instance_);
}
inline const ::interfaces::msgECPublicKey& msgToBeSignedCSR::stecpsnympublickey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCSR.stECPsnymPublicKey)
  return _internal_stecpsnympublickey();
}
inline void msgToBeSignedCSR::unsafe_arena_set_allocated_stecpsnympublickey(
    ::interfaces::msgECPublicKey* stecpsnympublickey) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stecpsnympublickey_);
  }
  stecpsnympublickey_ = stecpsnympublickey;
  if (stecpsnympublickey) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedCSR.stECPsnymPublicKey)
}
inline ::interfaces::msgECPublicKey* msgToBeSignedCSR::release_stecpsnympublickey() {
  auto temp = unsafe_arena_release_stecpsnympublickey();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedCSR::unsafe_arena_release_stecpsnympublickey() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedCSR.stECPsnymPublicKey)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgECPublicKey* temp = stecpsnympublickey_;
  stecpsnympublickey_ = nullptr;
  return temp;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedCSR::_internal_mutable_stecpsnympublickey() {
  _has_bits_[0] |= 0x00000002u;
  if (stecpsnympublickey_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgECPublicKey>(GetArena());
    stecpsnympublickey_ = p;
  }
  return stecpsnympublickey_;
}
inline ::interfaces::msgECPublicKey* msgToBeSignedCSR::mutable_stecpsnympublickey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedCSR.stECPsnymPublicKey)
  return _internal_mutable_stecpsnympublickey();
}
inline void msgToBeSignedCSR::set_allocated_stecpsnympublickey(::interfaces::msgECPublicKey* stecpsnympublickey) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stecpsnympublickey_;
  }
  if (stecpsnympublickey) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stecpsnympublickey);
    if (message_arena != submessage_arena) {
      stecpsnympublickey = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stecpsnympublickey, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stecpsnympublickey_ = stecpsnympublickey;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedCSR.stECPsnymPublicKey)
}

// -------------------------------------------------------------------

// msgWAVECertificateRequest

// optional .interfaces.msgSignerInfo stSigner = 1;
inline bool msgWAVECertificateRequest::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgWAVECertificateRequest::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgWAVECertificateRequest::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgWAVECertificateRequest::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgWAVECertificateRequest::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECertificateRequest.stSigner)
  return _internal_stsigner();
}
inline void msgWAVECertificateRequest::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECertificateRequest.stSigner)
}
inline ::interfaces::msgSignerInfo* msgWAVECertificateRequest::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgWAVECertificateRequest::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECertificateRequest.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgWAVECertificateRequest::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgWAVECertificateRequest::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECertificateRequest.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgWAVECertificateRequest::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECertificateRequest.stSigner)
}

// required .interfaces.msgToBeSignedCSR unsignedCsr = 2;
inline bool msgWAVECertificateRequest::_internal_has_unsignedcsr() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || unsignedcsr_ != nullptr);
  return value;
}
inline bool msgWAVECertificateRequest::has_unsignedcsr() const {
  return _internal_has_unsignedcsr();
}
inline void msgWAVECertificateRequest::clear_unsignedcsr() {
  if (unsignedcsr_ != nullptr) unsignedcsr_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgToBeSignedCSR& msgWAVECertificateRequest::_internal_unsignedcsr() const {
  const ::interfaces::msgToBeSignedCSR* p = unsignedcsr_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgToBeSignedCSR*>(
      &::interfaces::_msgToBeSignedCSR_default_instance_);
}
inline const ::interfaces::msgToBeSignedCSR& msgWAVECertificateRequest::unsignedcsr() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECertificateRequest.unsignedCsr)
  return _internal_unsignedcsr();
}
inline void msgWAVECertificateRequest::unsafe_arena_set_allocated_unsignedcsr(
    ::interfaces::msgToBeSignedCSR* unsignedcsr) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unsignedcsr_);
  }
  unsignedcsr_ = unsignedcsr;
  if (unsignedcsr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECertificateRequest.unsignedCsr)
}
inline ::interfaces::msgToBeSignedCSR* msgWAVECertificateRequest::release_unsignedcsr() {
  auto temp = unsafe_arena_release_unsignedcsr();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgToBeSignedCSR* msgWAVECertificateRequest::unsafe_arena_release_unsignedcsr() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECertificateRequest.unsignedCsr)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgToBeSignedCSR* temp = unsignedcsr_;
  unsignedcsr_ = nullptr;
  return temp;
}
inline ::interfaces::msgToBeSignedCSR* msgWAVECertificateRequest::_internal_mutable_unsignedcsr() {
  _has_bits_[0] |= 0x00000002u;
  if (unsignedcsr_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgToBeSignedCSR>(GetArena());
    unsignedcsr_ = p;
  }
  return unsignedcsr_;
}
inline ::interfaces::msgToBeSignedCSR* msgWAVECertificateRequest::mutable_unsignedcsr() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECertificateRequest.unsignedCsr)
  return _internal_mutable_unsignedcsr();
}
inline void msgWAVECertificateRequest::set_allocated_unsignedcsr(::interfaces::msgToBeSignedCSR* unsignedcsr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete unsignedcsr_;
  }
  if (unsignedcsr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(unsignedcsr);
    if (message_arena != submessage_arena) {
      unsignedcsr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unsignedcsr, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  unsignedcsr_ = unsignedcsr;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECertificateRequest.unsignedCsr)
}

// optional .interfaces.msgSignature stSign = 3;
inline bool msgWAVECertificateRequest::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgWAVECertificateRequest::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgWAVECertificateRequest::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgWAVECertificateRequest::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgWAVECertificateRequest::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECertificateRequest.stSign)
  return _internal_stsign();
}
inline void msgWAVECertificateRequest::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECertificateRequest.stSign)
}
inline ::interfaces::msgSignature* msgWAVECertificateRequest::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgWAVECertificateRequest::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECertificateRequest.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgWAVECertificateRequest::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgWAVECertificateRequest::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECertificateRequest.stSign)
  return _internal_mutable_stsign();
}
inline void msgWAVECertificateRequest::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECertificateRequest.stSign)
}

// -------------------------------------------------------------------

// msgPsnymCertReq_V2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymCertReq_V2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ireqtype_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iReqType)
}

// required int32 iTicketSize = 2 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_iticketsize() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_iticketsize() const {
  return _internal_has_iticketsize();
}
inline void msgPsnymCertReq_V2PCA::clear_iticketsize() {
  iticketsize_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_iticketsize() const {
  return iticketsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::iticketsize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iTicketSize)
  return _internal_iticketsize();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  iticketsize_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_iticketsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iticketsize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iTicketSize)
}

// required string strTicket = 3 [default = ""];
inline bool msgPsnymCertReq_V2PCA::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgPsnymCertReq_V2PCA::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymCertReq_V2PCA::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.strTicket)
  return _internal_strticket();
}
inline void msgPsnymCertReq_V2PCA::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}
inline std::string* msgPsnymCertReq_V2PCA::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertReq_V2PCA.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgPsnymCertReq_V2PCA::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymCertReq_V2PCA::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}
inline void msgPsnymCertReq_V2PCA::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}
inline void msgPsnymCertReq_V2PCA::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}
inline std::string* msgPsnymCertReq_V2PCA::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000001u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymCertReq_V2PCA::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertReq_V2PCA.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymCertReq_V2PCA::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}
inline std::string* msgPsnymCertReq_V2PCA::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymCertReq_V2PCA.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymCertReq_V2PCA::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertReq_V2PCA.strTicket)
}

// required int32 iLTCAIdRange = 4 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgPsnymCertReq_V2PCA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  iltcaidrange_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iLTCAIdRange)
}

// required int32 iPCAIdRange = 5 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymCertReq_V2PCA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ipcaidrange_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iPCAIdRange)
}

// required int32 iLocation = 6 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_ilocation() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_ilocation() const {
  return _internal_has_ilocation();
}
inline void msgPsnymCertReq_V2PCA::clear_ilocation() {
  ilocation_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_ilocation() const {
  return ilocation_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::ilocation() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iLocation)
  return _internal_ilocation();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_ilocation(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ilocation_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_ilocation(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ilocation(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iLocation)
}

// required uint32 uiPsnymCertNo = 7 [default = 0];
inline bool msgPsnymCertReq_V2PCA::_internal_has_uipsnymcertno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_uipsnymcertno() const {
  return _internal_has_uipsnymcertno();
}
inline void msgPsnymCertReq_V2PCA::clear_uipsnymcertno() {
  uipsnymcertno_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertReq_V2PCA::_internal_uipsnymcertno() const {
  return uipsnymcertno_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertReq_V2PCA::uipsnymcertno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.uiPsnymCertNo)
  return _internal_uipsnymcertno();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uipsnymcertno_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uipsnymcertno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.uiPsnymCertNo)
}

// repeated .interfaces.msgWAVECertificateRequest pstPsnymCertReq = 8;
inline int msgPsnymCertReq_V2PCA::_internal_pstpsnymcertreq_size() const {
  return pstpsnymcertreq_.size();
}
inline int msgPsnymCertReq_V2PCA::pstpsnymcertreq_size() const {
  return _internal_pstpsnymcertreq_size();
}
inline void msgPsnymCertReq_V2PCA::clear_pstpsnymcertreq() {
  pstpsnymcertreq_.Clear();
}
inline ::interfaces::msgWAVECertificateRequest* msgPsnymCertReq_V2PCA::mutable_pstpsnymcertreq(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertReq_V2PCA.pstPsnymCertReq)
  return pstpsnymcertreq_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgWAVECertificateRequest >*
msgPsnymCertReq_V2PCA::mutable_pstpsnymcertreq() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymCertReq_V2PCA.pstPsnymCertReq)
  return &pstpsnymcertreq_;
}
inline const ::interfaces::msgWAVECertificateRequest& msgPsnymCertReq_V2PCA::_internal_pstpsnymcertreq(int index) const {
  return pstpsnymcertreq_.Get(index);
}
inline const ::interfaces::msgWAVECertificateRequest& msgPsnymCertReq_V2PCA::pstpsnymcertreq(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.pstPsnymCertReq)
  return _internal_pstpsnymcertreq(index);
}
inline ::interfaces::msgWAVECertificateRequest* msgPsnymCertReq_V2PCA::_internal_add_pstpsnymcertreq() {
  return pstpsnymcertreq_.Add();
}
inline ::interfaces::msgWAVECertificateRequest* msgPsnymCertReq_V2PCA::add_pstpsnymcertreq() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymCertReq_V2PCA.pstPsnymCertReq)
  return _internal_add_pstpsnymcertreq();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgWAVECertificateRequest >&
msgPsnymCertReq_V2PCA::pstpsnymcertreq() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymCertReq_V2PCA.pstPsnymCertReq)
  return pstpsnymcertreq_;
}

// required int32 iNonce = 9 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymCertReq_V2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertReq_V2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.iNonce)
}

// required int64 tTimeStamp = 10 [default = -1];
inline bool msgPsnymCertReq_V2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymCertReq_V2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCertReq_V2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertReq_V2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertReq_V2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertReq_V2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCertReq_V2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgPsnymCertReq_V2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertReq_V2PCA.tTimeStamp)
}

// -------------------------------------------------------------------

// msgPsnymCertRes_PCA2V

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymCertRes_PCA2V::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymCertRes_PCA2V::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymCertRes_PCA2V::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymCertRes_PCA2V::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymCertRes_PCA2V::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymCertRes_PCA2V::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymCertRes_PCA2V::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymCertRes_PCA2V::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCertRes_PCA2V::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertRes_PCA2V.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCertRes_PCA2V::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymCertRes_PCA2V::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertRes_PCA2V.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymCertRes_PCA2V::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stSigner)
}

// required string strReqIdentification = 3 [default = ""];
inline bool msgPsnymCertRes_PCA2V::_internal_has_strreqidentification() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_strreqidentification() const {
  return _internal_has_strreqidentification();
}
inline void msgPsnymCertRes_PCA2V::clear_strreqidentification() {
  strreqidentification_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymCertRes_PCA2V::strreqidentification() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
  return _internal_strreqidentification();
}
inline void msgPsnymCertRes_PCA2V::set_strreqidentification(const std::string& value) {
  _internal_set_strreqidentification(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}
inline std::string* msgPsnymCertRes_PCA2V::mutable_strreqidentification() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
  return _internal_mutable_strreqidentification();
}
inline const std::string& msgPsnymCertRes_PCA2V::_internal_strreqidentification() const {
  return strreqidentification_.Get();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_strreqidentification(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymCertRes_PCA2V::set_strreqidentification(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}
inline void msgPsnymCertRes_PCA2V::set_strreqidentification(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}
inline void msgPsnymCertRes_PCA2V::set_strreqidentification(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strreqidentification_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}
inline std::string* msgPsnymCertRes_PCA2V::_internal_mutable_strreqidentification() {
  _has_bits_[0] |= 0x00000001u;
  return strreqidentification_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymCertRes_PCA2V::release_strreqidentification() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
  if (!_internal_has_strreqidentification()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymCertRes_PCA2V::set_allocated_strreqidentification(std::string* strreqidentification) {
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strreqidentification,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}
inline std::string* msgPsnymCertRes_PCA2V::unsafe_arena_release_strreqidentification() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strreqidentification_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymCertRes_PCA2V::unsafe_arena_set_allocated_strreqidentification(
    std::string* strreqidentification) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strreqidentification != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strreqidentification_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strreqidentification, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertRes_PCA2V.strReqIdentification)
}

// required int32 iLTCAIdRange = 4 [default = -1];
inline bool msgPsnymCertRes_PCA2V::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgPsnymCertRes_PCA2V::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iltcaidrange_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.iLTCAIdRange)
}

// required int32 iPCAIdRange = 5 [default = -1];
inline bool msgPsnymCertRes_PCA2V::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymCertRes_PCA2V::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipcaidrange_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.iPCAIdRange)
}

// required uint32 uiPsnymCertNo = 6 [default = 0];
inline bool msgPsnymCertRes_PCA2V::_internal_has_uipsnymcertno() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_uipsnymcertno() const {
  return _internal_has_uipsnymcertno();
}
inline void msgPsnymCertRes_PCA2V::clear_uipsnymcertno() {
  uipsnymcertno_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertRes_PCA2V::_internal_uipsnymcertno() const {
  return uipsnymcertno_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCertRes_PCA2V::uipsnymcertno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.uiPsnymCertNo)
  return _internal_uipsnymcertno();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uipsnymcertno_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_uipsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uipsnymcertno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.uiPsnymCertNo)
}

// repeated .interfaces.msgPsnymCertFormat stPsnymCert = 7;
inline int msgPsnymCertRes_PCA2V::_internal_stpsnymcert_size() const {
  return stpsnymcert_.size();
}
inline int msgPsnymCertRes_PCA2V::stpsnymcert_size() const {
  return _internal_stpsnymcert_size();
}
inline void msgPsnymCertRes_PCA2V::clear_stpsnymcert() {
  stpsnymcert_.Clear();
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymCertRes_PCA2V::mutable_stpsnymcert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertRes_PCA2V.stPsnymCert)
  return stpsnymcert_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymCertFormat >*
msgPsnymCertRes_PCA2V::mutable_stpsnymcert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymCertRes_PCA2V.stPsnymCert)
  return &stpsnymcert_;
}
inline const ::interfaces::msgPsnymCertFormat& msgPsnymCertRes_PCA2V::_internal_stpsnymcert(int index) const {
  return stpsnymcert_.Get(index);
}
inline const ::interfaces::msgPsnymCertFormat& msgPsnymCertRes_PCA2V::stpsnymcert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.stPsnymCert)
  return _internal_stpsnymcert(index);
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymCertRes_PCA2V::_internal_add_stpsnymcert() {
  return stpsnymcert_.Add();
}
inline ::interfaces::msgPsnymCertFormat* msgPsnymCertRes_PCA2V::add_stpsnymcert() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymCertRes_PCA2V.stPsnymCert)
  return _internal_add_stpsnymcert();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymCertFormat >&
msgPsnymCertRes_PCA2V::stpsnymcert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymCertRes_PCA2V.stPsnymCert)
  return stpsnymcert_;
}

// required int32 iNonce = 8 [default = -1];
inline bool msgPsnymCertRes_PCA2V::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymCertRes_PCA2V::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertRes_PCA2V::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.iNonce)
  return _internal_inonce();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  inonce_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgPsnymCertRes_PCA2V::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCertRes_PCA2V::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertRes_PCA2V::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertRes_PCA2V::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCertRes_PCA2V::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  ttimestamp_ = value;
}
inline void msgPsnymCertRes_PCA2V::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertRes_PCA2V.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 10;
inline bool msgPsnymCertRes_PCA2V::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymCertRes_PCA2V::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgPsnymCertRes_PCA2V::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymCertRes_PCA2V::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymCertRes_PCA2V::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymCertRes_PCA2V::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymCertRes_PCA2V::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertRes_PCA2V.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymCertRes_PCA2V::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymCertRes_PCA2V::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertRes_PCA2V.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymCertRes_PCA2V::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 11;
inline bool msgPsnymCertRes_PCA2V::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymCertRes_PCA2V::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymCertRes_PCA2V::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgPsnymCertRes_PCA2V::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymCertRes_PCA2V::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertRes_PCA2V.stSign)
  return _internal_stsign();
}
inline void msgPsnymCertRes_PCA2V::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stSign)
}
inline ::interfaces::msgSignature* msgPsnymCertRes_PCA2V::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCertRes_PCA2V::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertRes_PCA2V.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCertRes_PCA2V::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymCertRes_PCA2V::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertRes_PCA2V.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymCertRes_PCA2V::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertRes_PCA2V.stSign)
}

// -------------------------------------------------------------------

// msgPsnymCertAck_V2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymCertAck_V2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymCertAck_V2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymCertAck_V2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertAck_V2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertAck_V2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertAck_V2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymCertAck_V2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ireqtype_ = value;
}
inline void msgPsnymCertAck_V2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertAck_V2PCA.iReqType)
}

// required int32 iNonce = 2 [default = -1];
inline bool msgPsnymCertAck_V2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymCertAck_V2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymCertAck_V2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertAck_V2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCertAck_V2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertAck_V2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymCertAck_V2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inonce_ = value;
}
inline void msgPsnymCertAck_V2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertAck_V2PCA.iNonce)
}

// required int64 tTimeStamp = 3 [default = -1];
inline bool msgPsnymCertAck_V2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymCertAck_V2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCertAck_V2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertAck_V2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCertAck_V2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertAck_V2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCertAck_V2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  ttimestamp_ = value;
}
inline void msgPsnymCertAck_V2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCertAck_V2PCA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 4;
inline bool msgPsnymCertAck_V2PCA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymCertAck_V2PCA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymCertAck_V2PCA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgError& msgPsnymCertAck_V2PCA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymCertAck_V2PCA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCertAck_V2PCA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymCertAck_V2PCA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCertAck_V2PCA.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymCertAck_V2PCA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymCertAck_V2PCA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCertAck_V2PCA.stErrInfo)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymCertAck_V2PCA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymCertAck_V2PCA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCertAck_V2PCA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymCertAck_V2PCA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCertAck_V2PCA.stErrInfo)
}

// -------------------------------------------------------------------

// msgPsnymCRLFormat

// required string strPsnymCRLSerialNo = 1 [default = ""];
inline bool msgPsnymCRLFormat::_internal_has_strpsnymcrlserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymCRLFormat::has_strpsnymcrlserialno() const {
  return _internal_has_strpsnymcrlserialno();
}
inline void msgPsnymCRLFormat::clear_strpsnymcrlserialno() {
  strpsnymcrlserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymCRLFormat::strpsnymcrlserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
  return _internal_strpsnymcrlserialno();
}
inline void msgPsnymCRLFormat::set_strpsnymcrlserialno(const std::string& value) {
  _internal_set_strpsnymcrlserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}
inline std::string* msgPsnymCRLFormat::mutable_strpsnymcrlserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
  return _internal_mutable_strpsnymcrlserialno();
}
inline const std::string& msgPsnymCRLFormat::_internal_strpsnymcrlserialno() const {
  return strpsnymcrlserialno_.Get();
}
inline void msgPsnymCRLFormat::_internal_set_strpsnymcrlserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcrlserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymCRLFormat::set_strpsnymcrlserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcrlserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}
inline void msgPsnymCRLFormat::set_strpsnymcrlserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcrlserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}
inline void msgPsnymCRLFormat::set_strpsnymcrlserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcrlserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}
inline std::string* msgPsnymCRLFormat::_internal_mutable_strpsnymcrlserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcrlserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymCRLFormat::release_strpsnymcrlserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
  if (!_internal_has_strpsnymcrlserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcrlserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymCRLFormat::set_allocated_strpsnymcrlserialno(std::string* strpsnymcrlserialno) {
  if (strpsnymcrlserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcrlserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcrlserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}
inline std::string* msgPsnymCRLFormat::unsafe_arena_release_strpsnymcrlserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcrlserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymCRLFormat::unsafe_arena_set_allocated_strpsnymcrlserialno(
    std::string* strpsnymcrlserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcrlserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcrlserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcrlserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLFormat.strPsnymCRLSerialNo)
}

// required uint32 uiRevokedPsnymCertNo = 2 [default = 0];
inline bool msgPsnymCRLFormat::_internal_has_uirevokedpsnymcertno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymCRLFormat::has_uirevokedpsnymcertno() const {
  return _internal_has_uirevokedpsnymcertno();
}
inline void msgPsnymCRLFormat::clear_uirevokedpsnymcertno() {
  uirevokedpsnymcertno_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCRLFormat::_internal_uirevokedpsnymcertno() const {
  return uirevokedpsnymcertno_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCRLFormat::uirevokedpsnymcertno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLFormat.uiRevokedPsnymCertNo)
  return _internal_uirevokedpsnymcertno();
}
inline void msgPsnymCRLFormat::_internal_set_uirevokedpsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uirevokedpsnymcertno_ = value;
}
inline void msgPsnymCRLFormat::set_uirevokedpsnymcertno(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uirevokedpsnymcertno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLFormat.uiRevokedPsnymCertNo)
}

// repeated string strRevokedPsnymCertSerialNo = 3;
inline int msgPsnymCRLFormat::_internal_strrevokedpsnymcertserialno_size() const {
  return strrevokedpsnymcertserialno_.size();
}
inline int msgPsnymCRLFormat::strrevokedpsnymcertserialno_size() const {
  return _internal_strrevokedpsnymcertserialno_size();
}
inline void msgPsnymCRLFormat::clear_strrevokedpsnymcertserialno() {
  strrevokedpsnymcertserialno_.Clear();
}
inline std::string* msgPsnymCRLFormat::add_strrevokedpsnymcertserialno() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  return _internal_add_strrevokedpsnymcertserialno();
}
inline const std::string& msgPsnymCRLFormat::_internal_strrevokedpsnymcertserialno(int index) const {
  return strrevokedpsnymcertserialno_.Get(index);
}
inline const std::string& msgPsnymCRLFormat::strrevokedpsnymcertserialno(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  return _internal_strrevokedpsnymcertserialno(index);
}
inline std::string* msgPsnymCRLFormat::mutable_strrevokedpsnymcertserialno(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  return strrevokedpsnymcertserialno_.Mutable(index);
}
inline void msgPsnymCRLFormat::set_strrevokedpsnymcertserialno(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  strrevokedpsnymcertserialno_.Mutable(index)->assign(value);
}
inline void msgPsnymCRLFormat::set_strrevokedpsnymcertserialno(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  strrevokedpsnymcertserialno_.Mutable(index)->assign(std::move(value));
}
inline void msgPsnymCRLFormat::set_strrevokedpsnymcertserialno(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcertserialno_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline void msgPsnymCRLFormat::set_strrevokedpsnymcertserialno(int index, const char* value, size_t size) {
  strrevokedpsnymcertserialno_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline std::string* msgPsnymCRLFormat::_internal_add_strrevokedpsnymcertserialno() {
  return strrevokedpsnymcertserialno_.Add();
}
inline void msgPsnymCRLFormat::add_strrevokedpsnymcertserialno(const std::string& value) {
  strrevokedpsnymcertserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline void msgPsnymCRLFormat::add_strrevokedpsnymcertserialno(std::string&& value) {
  strrevokedpsnymcertserialno_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline void msgPsnymCRLFormat::add_strrevokedpsnymcertserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcertserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline void msgPsnymCRLFormat::add_strrevokedpsnymcertserialno(const char* value, size_t size) {
  strrevokedpsnymcertserialno_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgPsnymCRLFormat::strrevokedpsnymcertserialno() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  return strrevokedpsnymcertserialno_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgPsnymCRLFormat::mutable_strrevokedpsnymcertserialno() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymCRLFormat.strRevokedPsnymCertSerialNo)
  return &strrevokedpsnymcertserialno_;
}

// required int64 tTimeStamp = 4 [default = -1];
inline bool msgPsnymCRLFormat::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymCRLFormat::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCRLFormat::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLFormat::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLFormat::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLFormat.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCRLFormat::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  ttimestamp_ = value;
}
inline void msgPsnymCRLFormat::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLFormat.tTimeStamp)
}

// -------------------------------------------------------------------

// msgIDAndDate

// required string strID = 1 [default = ""];
inline bool msgIDAndDate::_internal_has_strid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgIDAndDate::has_strid() const {
  return _internal_has_strid();
}
inline void msgIDAndDate::clear_strid() {
  strid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgIDAndDate::strid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgIDAndDate.strID)
  return _internal_strid();
}
inline void msgIDAndDate::set_strid(const std::string& value) {
  _internal_set_strid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgIDAndDate.strID)
}
inline std::string* msgIDAndDate::mutable_strid() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgIDAndDate.strID)
  return _internal_mutable_strid();
}
inline const std::string& msgIDAndDate::_internal_strid() const {
  return strid_.Get();
}
inline void msgIDAndDate::_internal_set_strid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgIDAndDate::set_strid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strid_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgIDAndDate.strID)
}
inline void msgIDAndDate::set_strid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgIDAndDate.strID)
}
inline void msgIDAndDate::set_strid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgIDAndDate.strID)
}
inline std::string* msgIDAndDate::_internal_mutable_strid() {
  _has_bits_[0] |= 0x00000001u;
  return strid_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgIDAndDate::release_strid() {
  // @@protoc_insertion_point(field_release:interfaces.msgIDAndDate.strID)
  if (!_internal_has_strid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgIDAndDate::set_allocated_strid(std::string* strid) {
  if (strid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgIDAndDate.strID)
}
inline std::string* msgIDAndDate::unsafe_arena_release_strid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgIDAndDate.strID)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strid_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgIDAndDate::unsafe_arena_set_allocated_strid(
    std::string* strid) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strid_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strid, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgIDAndDate.strID)
}

// required int64 expiry = 2 [default = -1];
inline bool msgIDAndDate::_internal_has_expiry() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgIDAndDate::has_expiry() const {
  return _internal_has_expiry();
}
inline void msgIDAndDate::clear_expiry() {
  expiry_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgIDAndDate::_internal_expiry() const {
  return expiry_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgIDAndDate::expiry() const {
  // @@protoc_insertion_point(field_get:interfaces.msgIDAndDate.expiry)
  return _internal_expiry();
}
inline void msgIDAndDate::_internal_set_expiry(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  expiry_ = value;
}
inline void msgIDAndDate::set_expiry(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_expiry(value);
  // @@protoc_insertion_point(field_set:interfaces.msgIDAndDate.expiry)
}

// -------------------------------------------------------------------

// msgToBeSignedCRL

// required .interfaces.msgCRLType.CRLType type = 1 [default = idOnly];
inline bool msgToBeSignedCRL::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_type() const {
  return _internal_has_type();
}
inline void msgToBeSignedCRL::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::interfaces::msgCRLType_CRLType msgToBeSignedCRL::_internal_type() const {
  return static_cast< ::interfaces::msgCRLType_CRLType >(type_);
}
inline ::interfaces::msgCRLType_CRLType msgToBeSignedCRL::type() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.type)
  return _internal_type();
}
inline void msgToBeSignedCRL::_internal_set_type(::interfaces::msgCRLType_CRLType value) {
  assert(::interfaces::msgCRLType_CRLType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void msgToBeSignedCRL::set_type(::interfaces::msgCRLType_CRLType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.type)
}

// required uint32 crlSeries = 2 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_crlseries() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_crlseries() const {
  return _internal_has_crlseries();
}
inline void msgToBeSignedCRL::clear_crlseries() {
  crlseries_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::_internal_crlseries() const {
  return crlseries_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::crlseries() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.crlSeries)
  return _internal_crlseries();
}
inline void msgToBeSignedCRL::_internal_set_crlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  crlseries_ = value;
}
inline void msgToBeSignedCRL::set_crlseries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crlseries(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.crlSeries)
}

// required uint32 iCAID = 3 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_icaid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_icaid() const {
  return _internal_has_icaid();
}
inline void msgToBeSignedCRL::clear_icaid() {
  icaid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::_internal_icaid() const {
  return icaid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::icaid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.iCAID)
  return _internal_icaid();
}
inline void msgToBeSignedCRL::_internal_set_icaid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  icaid_ = value;
}
inline void msgToBeSignedCRL::set_icaid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icaid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.iCAID)
}

// required uint32 crlSerial = 4 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_crlserial() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_crlserial() const {
  return _internal_has_crlserial();
}
inline void msgToBeSignedCRL::clear_crlserial() {
  crlserial_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::_internal_crlserial() const {
  return crlserial_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgToBeSignedCRL::crlserial() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.crlSerial)
  return _internal_crlserial();
}
inline void msgToBeSignedCRL::_internal_set_crlserial(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  crlserial_ = value;
}
inline void msgToBeSignedCRL::set_crlserial(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crlserial(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.crlSerial)
}

// required uint64 tStartPeriod = 5 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_tstartperiod() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_tstartperiod() const {
  return _internal_has_tstartperiod();
}
inline void msgToBeSignedCRL::clear_tstartperiod() {
  tstartperiod_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::_internal_tstartperiod() const {
  return tstartperiod_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::tstartperiod() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.tStartPeriod)
  return _internal_tstartperiod();
}
inline void msgToBeSignedCRL::_internal_set_tstartperiod(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  tstartperiod_ = value;
}
inline void msgToBeSignedCRL::set_tstartperiod(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tstartperiod(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.tStartPeriod)
}

// required uint64 tIssueDate = 6 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_tissuedate() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_tissuedate() const {
  return _internal_has_tissuedate();
}
inline void msgToBeSignedCRL::clear_tissuedate() {
  tissuedate_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::_internal_tissuedate() const {
  return tissuedate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::tissuedate() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.tIssueDate)
  return _internal_tissuedate();
}
inline void msgToBeSignedCRL::_internal_set_tissuedate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  tissuedate_ = value;
}
inline void msgToBeSignedCRL::set_tissuedate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tissuedate(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.tIssueDate)
}

// required uint64 tNextCRL = 7 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_tnextcrl() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_tnextcrl() const {
  return _internal_has_tnextcrl();
}
inline void msgToBeSignedCRL::clear_tnextcrl() {
  tnextcrl_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::_internal_tnextcrl() const {
  return tnextcrl_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::tnextcrl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.tNextCRL)
  return _internal_tnextcrl();
}
inline void msgToBeSignedCRL::_internal_set_tnextcrl(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  tnextcrl_ = value;
}
inline void msgToBeSignedCRL::set_tnextcrl(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tnextcrl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.tNextCRL)
}

// required uint64 uiRevokedPsnymNo = 8 [default = 0];
inline bool msgToBeSignedCRL::_internal_has_uirevokedpsnymno() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgToBeSignedCRL::has_uirevokedpsnymno() const {
  return _internal_has_uirevokedpsnymno();
}
inline void msgToBeSignedCRL::clear_uirevokedpsnymno() {
  uirevokedpsnymno_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::_internal_uirevokedpsnymno() const {
  return uirevokedpsnymno_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgToBeSignedCRL::uirevokedpsnymno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.uiRevokedPsnymNo)
  return _internal_uirevokedpsnymno();
}
inline void msgToBeSignedCRL::_internal_set_uirevokedpsnymno(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  uirevokedpsnymno_ = value;
}
inline void msgToBeSignedCRL::set_uirevokedpsnymno(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uirevokedpsnymno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.uiRevokedPsnymNo)
}

// repeated string strRevokedPsnymCertSerialNo = 9;
inline int msgToBeSignedCRL::_internal_strrevokedpsnymcertserialno_size() const {
  return strrevokedpsnymcertserialno_.size();
}
inline int msgToBeSignedCRL::strrevokedpsnymcertserialno_size() const {
  return _internal_strrevokedpsnymcertserialno_size();
}
inline void msgToBeSignedCRL::clear_strrevokedpsnymcertserialno() {
  strrevokedpsnymcertserialno_.Clear();
}
inline std::string* msgToBeSignedCRL::add_strrevokedpsnymcertserialno() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  return _internal_add_strrevokedpsnymcertserialno();
}
inline const std::string& msgToBeSignedCRL::_internal_strrevokedpsnymcertserialno(int index) const {
  return strrevokedpsnymcertserialno_.Get(index);
}
inline const std::string& msgToBeSignedCRL::strrevokedpsnymcertserialno(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  return _internal_strrevokedpsnymcertserialno(index);
}
inline std::string* msgToBeSignedCRL::mutable_strrevokedpsnymcertserialno(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  return strrevokedpsnymcertserialno_.Mutable(index);
}
inline void msgToBeSignedCRL::set_strrevokedpsnymcertserialno(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  strrevokedpsnymcertserialno_.Mutable(index)->assign(value);
}
inline void msgToBeSignedCRL::set_strrevokedpsnymcertserialno(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  strrevokedpsnymcertserialno_.Mutable(index)->assign(std::move(value));
}
inline void msgToBeSignedCRL::set_strrevokedpsnymcertserialno(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcertserialno_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline void msgToBeSignedCRL::set_strrevokedpsnymcertserialno(int index, const char* value, size_t size) {
  strrevokedpsnymcertserialno_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline std::string* msgToBeSignedCRL::_internal_add_strrevokedpsnymcertserialno() {
  return strrevokedpsnymcertserialno_.Add();
}
inline void msgToBeSignedCRL::add_strrevokedpsnymcertserialno(const std::string& value) {
  strrevokedpsnymcertserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline void msgToBeSignedCRL::add_strrevokedpsnymcertserialno(std::string&& value) {
  strrevokedpsnymcertserialno_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline void msgToBeSignedCRL::add_strrevokedpsnymcertserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcertserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline void msgToBeSignedCRL::add_strrevokedpsnymcertserialno(const char* value, size_t size) {
  strrevokedpsnymcertserialno_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgToBeSignedCRL::strrevokedpsnymcertserialno() const {
  // @@protoc_insertion_point(field_list:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  return strrevokedpsnymcertserialno_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgToBeSignedCRL::mutable_strrevokedpsnymcertserialno() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgToBeSignedCRL.strRevokedPsnymCertSerialNo)
  return &strrevokedpsnymcertserialno_;
}

// required .interfaces.msgIDAndDate stEntriesIDAndDate = 10;
inline bool msgToBeSignedCRL::_internal_has_stentriesidanddate() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stentriesidanddate_ != nullptr);
  return value;
}
inline bool msgToBeSignedCRL::has_stentriesidanddate() const {
  return _internal_has_stentriesidanddate();
}
inline void msgToBeSignedCRL::clear_stentriesidanddate() {
  if (stentriesidanddate_ != nullptr) stentriesidanddate_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgIDAndDate& msgToBeSignedCRL::_internal_stentriesidanddate() const {
  const ::interfaces::msgIDAndDate* p = stentriesidanddate_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgIDAndDate*>(
      &::interfaces::_msgIDAndDate_default_instance_);
}
inline const ::interfaces::msgIDAndDate& msgToBeSignedCRL::stentriesidanddate() const {
  // @@protoc_insertion_point(field_get:interfaces.msgToBeSignedCRL.stEntriesIDAndDate)
  return _internal_stentriesidanddate();
}
inline void msgToBeSignedCRL::unsafe_arena_set_allocated_stentriesidanddate(
    ::interfaces::msgIDAndDate* stentriesidanddate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stentriesidanddate_);
  }
  stentriesidanddate_ = stentriesidanddate;
  if (stentriesidanddate) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgToBeSignedCRL.stEntriesIDAndDate)
}
inline ::interfaces::msgIDAndDate* msgToBeSignedCRL::release_stentriesidanddate() {
  auto temp = unsafe_arena_release_stentriesidanddate();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgIDAndDate* msgToBeSignedCRL::unsafe_arena_release_stentriesidanddate() {
  // @@protoc_insertion_point(field_release:interfaces.msgToBeSignedCRL.stEntriesIDAndDate)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgIDAndDate* temp = stentriesidanddate_;
  stentriesidanddate_ = nullptr;
  return temp;
}
inline ::interfaces::msgIDAndDate* msgToBeSignedCRL::_internal_mutable_stentriesidanddate() {
  _has_bits_[0] |= 0x00000001u;
  if (stentriesidanddate_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgIDAndDate>(GetArena());
    stentriesidanddate_ = p;
  }
  return stentriesidanddate_;
}
inline ::interfaces::msgIDAndDate* msgToBeSignedCRL::mutable_stentriesidanddate() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgToBeSignedCRL.stEntriesIDAndDate)
  return _internal_mutable_stentriesidanddate();
}
inline void msgToBeSignedCRL::set_allocated_stentriesidanddate(::interfaces::msgIDAndDate* stentriesidanddate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stentriesidanddate_;
  }
  if (stentriesidanddate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stentriesidanddate);
    if (message_arena != submessage_arena) {
      stentriesidanddate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stentriesidanddate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stentriesidanddate_ = stentriesidanddate;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgToBeSignedCRL.stEntriesIDAndDate)
}

// -------------------------------------------------------------------

// msgWAVECRL

// required uint32 uiWaveCRLVersion = 1 [default = 0];
inline bool msgWAVECRL::_internal_has_uiwavecrlversion() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgWAVECRL::has_uiwavecrlversion() const {
  return _internal_has_uiwavecrlversion();
}
inline void msgWAVECRL::clear_uiwavecrlversion() {
  uiwavecrlversion_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgWAVECRL::_internal_uiwavecrlversion() const {
  return uiwavecrlversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgWAVECRL::uiwavecrlversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECRL.uiWaveCRLVersion)
  return _internal_uiwavecrlversion();
}
inline void msgWAVECRL::_internal_set_uiwavecrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uiwavecrlversion_ = value;
}
inline void msgWAVECRL::set_uiwavecrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiwavecrlversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgWAVECRL.uiWaveCRLVersion)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgWAVECRL::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgWAVECRL::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgWAVECRL::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgWAVECRL::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgWAVECRL::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECRL.stSigner)
  return _internal_stsigner();
}
inline void msgWAVECRL::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECRL.stSigner)
}
inline ::interfaces::msgSignerInfo* msgWAVECRL::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgWAVECRL::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECRL.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgWAVECRL::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgWAVECRL::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECRL.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgWAVECRL::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECRL.stSigner)
}

// required .interfaces.msgToBeSignedCRL stToBeSignedCRL = 3;
inline bool msgWAVECRL::_internal_has_sttobesignedcrl() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sttobesignedcrl_ != nullptr);
  return value;
}
inline bool msgWAVECRL::has_sttobesignedcrl() const {
  return _internal_has_sttobesignedcrl();
}
inline void msgWAVECRL::clear_sttobesignedcrl() {
  if (sttobesignedcrl_ != nullptr) sttobesignedcrl_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgToBeSignedCRL& msgWAVECRL::_internal_sttobesignedcrl() const {
  const ::interfaces::msgToBeSignedCRL* p = sttobesignedcrl_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgToBeSignedCRL*>(
      &::interfaces::_msgToBeSignedCRL_default_instance_);
}
inline const ::interfaces::msgToBeSignedCRL& msgWAVECRL::sttobesignedcrl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECRL.stToBeSignedCRL)
  return _internal_sttobesignedcrl();
}
inline void msgWAVECRL::unsafe_arena_set_allocated_sttobesignedcrl(
    ::interfaces::msgToBeSignedCRL* sttobesignedcrl) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sttobesignedcrl_);
  }
  sttobesignedcrl_ = sttobesignedcrl;
  if (sttobesignedcrl) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECRL.stToBeSignedCRL)
}
inline ::interfaces::msgToBeSignedCRL* msgWAVECRL::release_sttobesignedcrl() {
  auto temp = unsafe_arena_release_sttobesignedcrl();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgToBeSignedCRL* msgWAVECRL::unsafe_arena_release_sttobesignedcrl() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECRL.stToBeSignedCRL)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgToBeSignedCRL* temp = sttobesignedcrl_;
  sttobesignedcrl_ = nullptr;
  return temp;
}
inline ::interfaces::msgToBeSignedCRL* msgWAVECRL::_internal_mutable_sttobesignedcrl() {
  _has_bits_[0] |= 0x00000002u;
  if (sttobesignedcrl_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgToBeSignedCRL>(GetArena());
    sttobesignedcrl_ = p;
  }
  return sttobesignedcrl_;
}
inline ::interfaces::msgToBeSignedCRL* msgWAVECRL::mutable_sttobesignedcrl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECRL.stToBeSignedCRL)
  return _internal_mutable_sttobesignedcrl();
}
inline void msgWAVECRL::set_allocated_sttobesignedcrl(::interfaces::msgToBeSignedCRL* sttobesignedcrl) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sttobesignedcrl_;
  }
  if (sttobesignedcrl) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sttobesignedcrl);
    if (message_arena != submessage_arena) {
      sttobesignedcrl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sttobesignedcrl, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sttobesignedcrl_ = sttobesignedcrl;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECRL.stToBeSignedCRL)
}

// optional .interfaces.msgSignature stSign = 4;
inline bool msgWAVECRL::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgWAVECRL::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgWAVECRL::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgWAVECRL::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgWAVECRL::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECRL.stSign)
  return _internal_stsign();
}
inline void msgWAVECRL::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECRL.stSign)
}
inline ::interfaces::msgSignature* msgWAVECRL::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgWAVECRL::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECRL.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgWAVECRL::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgWAVECRL::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECRL.stSign)
  return _internal_mutable_stsign();
}
inline void msgWAVECRL::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECRL.stSign)
}

// -------------------------------------------------------------------

// msgWAVECertificateResponse

// required .interfaces.msgWAVECRL stCRLPath = 1;
inline bool msgWAVECertificateResponse::_internal_has_stcrlpath() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stcrlpath_ != nullptr);
  return value;
}
inline bool msgWAVECertificateResponse::has_stcrlpath() const {
  return _internal_has_stcrlpath();
}
inline void msgWAVECertificateResponse::clear_stcrlpath() {
  if (stcrlpath_ != nullptr) stcrlpath_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgWAVECRL& msgWAVECertificateResponse::_internal_stcrlpath() const {
  const ::interfaces::msgWAVECRL* p = stcrlpath_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgWAVECRL*>(
      &::interfaces::_msgWAVECRL_default_instance_);
}
inline const ::interfaces::msgWAVECRL& msgWAVECertificateResponse::stcrlpath() const {
  // @@protoc_insertion_point(field_get:interfaces.msgWAVECertificateResponse.stCRLPath)
  return _internal_stcrlpath();
}
inline void msgWAVECertificateResponse::unsafe_arena_set_allocated_stcrlpath(
    ::interfaces::msgWAVECRL* stcrlpath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stcrlpath_);
  }
  stcrlpath_ = stcrlpath;
  if (stcrlpath) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgWAVECertificateResponse.stCRLPath)
}
inline ::interfaces::msgWAVECRL* msgWAVECertificateResponse::release_stcrlpath() {
  auto temp = unsafe_arena_release_stcrlpath();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgWAVECRL* msgWAVECertificateResponse::unsafe_arena_release_stcrlpath() {
  // @@protoc_insertion_point(field_release:interfaces.msgWAVECertificateResponse.stCRLPath)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgWAVECRL* temp = stcrlpath_;
  stcrlpath_ = nullptr;
  return temp;
}
inline ::interfaces::msgWAVECRL* msgWAVECertificateResponse::_internal_mutable_stcrlpath() {
  _has_bits_[0] |= 0x00000001u;
  if (stcrlpath_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgWAVECRL>(GetArena());
    stcrlpath_ = p;
  }
  return stcrlpath_;
}
inline ::interfaces::msgWAVECRL* msgWAVECertificateResponse::mutable_stcrlpath() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgWAVECertificateResponse.stCRLPath)
  return _internal_mutable_stcrlpath();
}
inline void msgWAVECertificateResponse::set_allocated_stcrlpath(::interfaces::msgWAVECRL* stcrlpath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stcrlpath_;
  }
  if (stcrlpath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stcrlpath);
    if (message_arena != submessage_arena) {
      stcrlpath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stcrlpath, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stcrlpath_ = stcrlpath;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgWAVECertificateResponse.stCRLPath)
}

// -------------------------------------------------------------------

// msgPsnymCRLReq_V2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymCRLReq_V2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymCRLReq_V2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymCRLReq_V2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymCRLReq_V2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymCRLReq_V2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymCRLReq_V2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLReq_V2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLReq_V2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLReq_V2PCA.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLReq_V2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLReq_V2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLReq_V2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymCRLReq_V2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.stSigner)
}

// required uint32 uiCurrentCRLVersion = 3 [default = 0];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_uicurrentcrlversion() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_uicurrentcrlversion() const {
  return _internal_has_uicurrentcrlversion();
}
inline void msgPsnymCRLReq_V2PCA::clear_uicurrentcrlversion() {
  uicurrentcrlversion_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCRLReq_V2PCA::_internal_uicurrentcrlversion() const {
  return uicurrentcrlversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymCRLReq_V2PCA::uicurrentcrlversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.uiCurrentCRLVersion)
  return _internal_uicurrentcrlversion();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_uicurrentcrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uicurrentcrlversion_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_uicurrentcrlversion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uicurrentcrlversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.uiCurrentCRLVersion)
}

// required int32 iPCAIdRange = 4 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymCRLReq_V2PCA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.iPCAIdRange)
}

// required int32 iRegionId = 5 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_iregionid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_iregionid() const {
  return _internal_has_iregionid();
}
inline void msgPsnymCRLReq_V2PCA::clear_iregionid() {
  iregionid_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::_internal_iregionid() const {
  return iregionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::iregionid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.iRegionId)
  return _internal_iregionid();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iregionid_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iregionid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.iRegionId)
}

// required int32 iPsnymCertLen = 6 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_ipsnymcertlen() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_ipsnymcertlen() const {
  return _internal_has_ipsnymcertlen();
}
inline void msgPsnymCRLReq_V2PCA::clear_ipsnymcertlen() {
  ipsnymcertlen_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::_internal_ipsnymcertlen() const {
  return ipsnymcertlen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::ipsnymcertlen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.iPsnymCertLen)
  return _internal_ipsnymcertlen();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  ipsnymcertlen_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipsnymcertlen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.iPsnymCertLen)
}

// required string strPsnymCert = 7 [default = ""];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_strpsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_strpsnymcert() const {
  return _internal_has_strpsnymcert();
}
inline void msgPsnymCRLReq_V2PCA::clear_strpsnymcert() {
  strpsnymcert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymCRLReq_V2PCA::strpsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
  return _internal_strpsnymcert();
}
inline void msgPsnymCRLReq_V2PCA::set_strpsnymcert(const std::string& value) {
  _internal_set_strpsnymcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymCRLReq_V2PCA::mutable_strpsnymcert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
  return _internal_mutable_strpsnymcert();
}
inline const std::string& msgPsnymCRLReq_V2PCA::_internal_strpsnymcert() const {
  return strpsnymcert_.Get();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_strpsnymcert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymCRLReq_V2PCA::set_strpsnymcert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}
inline void msgPsnymCRLReq_V2PCA::set_strpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}
inline void msgPsnymCRLReq_V2PCA::set_strpsnymcert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymCRLReq_V2PCA::_internal_mutable_strpsnymcert() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymCRLReq_V2PCA::release_strpsnymcert() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
  if (!_internal_has_strpsnymcert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymCRLReq_V2PCA::set_allocated_strpsnymcert(std::string* strpsnymcert) {
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymCRLReq_V2PCA::unsafe_arena_release_strpsnymcert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymCRLReq_V2PCA::unsafe_arena_set_allocated_strpsnymcert(
    std::string* strpsnymcert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.strPsnymCert)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymCRLReq_V2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLReq_V2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgPsnymCRLReq_V2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCRLReq_V2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLReq_V2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLReq_V2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCRLReq_V2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  ttimestamp_ = value;
}
inline void msgPsnymCRLReq_V2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLReq_V2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgPsnymCRLReq_V2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymCRLReq_V2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymCRLReq_V2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymCRLReq_V2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymCRLReq_V2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLReq_V2PCA.stSign)
  return _internal_stsign();
}
inline void msgPsnymCRLReq_V2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymCRLReq_V2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCRLReq_V2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLReq_V2PCA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCRLReq_V2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymCRLReq_V2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLReq_V2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymCRLReq_V2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLReq_V2PCA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymCRLRes_PCA2V

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymCRLRes_PCA2V::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymCRLRes_PCA2V::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymCRLRes_PCA2V::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgPsnymCRLRes_PCA2V::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLRes_PCA2V.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymCRLRes_PCA2V::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymCRLRes_PCA2V::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymCRLRes_PCA2V::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymCRLRes_PCA2V::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymCRLRes_PCA2V::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLRes_PCA2V::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLRes_PCA2V::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLRes_PCA2V.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLRes_PCA2V::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymCRLRes_PCA2V::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLRes_PCA2V.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymCRLRes_PCA2V::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stSigner)
}

// required int32 iPCAIdRange = 3 [default = -1];
inline bool msgPsnymCRLRes_PCA2V::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymCRLRes_PCA2V::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymCRLRes_PCA2V::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgPsnymCRLRes_PCA2V::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLRes_PCA2V.iPCAIdRange)
}

// required int32 iNonce = 4 [default = -1];
inline bool msgPsnymCRLRes_PCA2V::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymCRLRes_PCA2V::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymCRLRes_PCA2V::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.iNonce)
  return _internal_inonce();
}
inline void msgPsnymCRLRes_PCA2V::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgPsnymCRLRes_PCA2V::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLRes_PCA2V.iNonce)
}

// required int64 tTimeStamp = 5 [default = -1];
inline bool msgPsnymCRLRes_PCA2V::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymCRLRes_PCA2V::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLRes_PCA2V::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymCRLRes_PCA2V::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymCRLRes_PCA2V::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgPsnymCRLRes_PCA2V::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLRes_PCA2V.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 6;
inline bool msgPsnymCRLRes_PCA2V::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymCRLRes_PCA2V::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgPsnymCRLRes_PCA2V::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymCRLRes_PCA2V::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymCRLRes_PCA2V::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymCRLRes_PCA2V::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymCRLRes_PCA2V::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLRes_PCA2V.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymCRLRes_PCA2V::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymCRLRes_PCA2V::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLRes_PCA2V.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymCRLRes_PCA2V::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stErrInfo)
}

// optional string strWAVECRLRes = 7;
inline bool msgPsnymCRLRes_PCA2V::_internal_has_strwavecrlres() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_strwavecrlres() const {
  return _internal_has_strwavecrlres();
}
inline void msgPsnymCRLRes_PCA2V::clear_strwavecrlres() {
  strwavecrlres_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymCRLRes_PCA2V::strwavecrlres() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
  return _internal_strwavecrlres();
}
inline void msgPsnymCRLRes_PCA2V::set_strwavecrlres(const std::string& value) {
  _internal_set_strwavecrlres(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}
inline std::string* msgPsnymCRLRes_PCA2V::mutable_strwavecrlres() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
  return _internal_mutable_strwavecrlres();
}
inline const std::string& msgPsnymCRLRes_PCA2V::_internal_strwavecrlres() const {
  return strwavecrlres_.Get();
}
inline void msgPsnymCRLRes_PCA2V::_internal_set_strwavecrlres(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strwavecrlres_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymCRLRes_PCA2V::set_strwavecrlres(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strwavecrlres_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}
inline void msgPsnymCRLRes_PCA2V::set_strwavecrlres(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strwavecrlres_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}
inline void msgPsnymCRLRes_PCA2V::set_strwavecrlres(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strwavecrlres_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}
inline std::string* msgPsnymCRLRes_PCA2V::_internal_mutable_strwavecrlres() {
  _has_bits_[0] |= 0x00000001u;
  return strwavecrlres_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymCRLRes_PCA2V::release_strwavecrlres() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
  if (!_internal_has_strwavecrlres()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strwavecrlres_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymCRLRes_PCA2V::set_allocated_strwavecrlres(std::string* strwavecrlres) {
  if (strwavecrlres != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strwavecrlres_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strwavecrlres,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}
inline std::string* msgPsnymCRLRes_PCA2V::unsafe_arena_release_strwavecrlres() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strwavecrlres_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymCRLRes_PCA2V::unsafe_arena_set_allocated_strwavecrlres(
    std::string* strwavecrlres) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strwavecrlres != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strwavecrlres_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strwavecrlres, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.strWAVECRLRes)
}

// optional .interfaces.msgSignature stSign = 8;
inline bool msgPsnymCRLRes_PCA2V::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymCRLRes_PCA2V::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymCRLRes_PCA2V::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgPsnymCRLRes_PCA2V::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymCRLRes_PCA2V::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymCRLRes_PCA2V.stSign)
  return _internal_stsign();
}
inline void msgPsnymCRLRes_PCA2V::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stSign)
}
inline ::interfaces::msgSignature* msgPsnymCRLRes_PCA2V::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCRLRes_PCA2V::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymCRLRes_PCA2V.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymCRLRes_PCA2V::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymCRLRes_PCA2V::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymCRLRes_PCA2V.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymCRLRes_PCA2V::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymCRLRes_PCA2V.stSign)
}

// -------------------------------------------------------------------

// msgPsnymOCSPReq_V2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymOCSPReq_V2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymOCSPReq_V2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymOCSPReq_V2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymOCSPReq_V2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymOCSPReq_V2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPReq_V2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPReq_V2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPReq_V2PCA.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPReq_V2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPReq_V2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPReq_V2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymOCSPReq_V2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.stSigner)
}

// required int32 iPCAIdRange = 3 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymOCSPReq_V2PCA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.iPCAIdRange)
}

// required int32 iRegionId = 4 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_iregionid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_iregionid() const {
  return _internal_has_iregionid();
}
inline void msgPsnymOCSPReq_V2PCA::clear_iregionid() {
  iregionid_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::_internal_iregionid() const {
  return iregionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::iregionid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.iRegionId)
  return _internal_iregionid();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iregionid_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iregionid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.iRegionId)
}

// required uint32 uiNoOfPsnymsToBeChecked = 5 [default = 0];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_uinoofpsnymstobechecked() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_uinoofpsnymstobechecked() const {
  return _internal_has_uinoofpsnymstobechecked();
}
inline void msgPsnymOCSPReq_V2PCA::clear_uinoofpsnymstobechecked() {
  uinoofpsnymstobechecked_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymOCSPReq_V2PCA::_internal_uinoofpsnymstobechecked() const {
  return uinoofpsnymstobechecked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymOCSPReq_V2PCA::uinoofpsnymstobechecked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.uiNoOfPsnymsToBeChecked)
  return _internal_uinoofpsnymstobechecked();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstobechecked_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstobechecked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.uiNoOfPsnymsToBeChecked)
}

// repeated string strPsnymsSerialNoToBeChecked = 6;
inline int msgPsnymOCSPReq_V2PCA::_internal_strpsnymsserialnotobechecked_size() const {
  return strpsnymsserialnotobechecked_.size();
}
inline int msgPsnymOCSPReq_V2PCA::strpsnymsserialnotobechecked_size() const {
  return _internal_strpsnymsserialnotobechecked_size();
}
inline void msgPsnymOCSPReq_V2PCA::clear_strpsnymsserialnotobechecked() {
  strpsnymsserialnotobechecked_.Clear();
}
inline std::string* msgPsnymOCSPReq_V2PCA::add_strpsnymsserialnotobechecked() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  return _internal_add_strpsnymsserialnotobechecked();
}
inline const std::string& msgPsnymOCSPReq_V2PCA::_internal_strpsnymsserialnotobechecked(int index) const {
  return strpsnymsserialnotobechecked_.Get(index);
}
inline const std::string& msgPsnymOCSPReq_V2PCA::strpsnymsserialnotobechecked(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  return _internal_strpsnymsserialnotobechecked(index);
}
inline std::string* msgPsnymOCSPReq_V2PCA::mutable_strpsnymsserialnotobechecked(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  return strpsnymsserialnotobechecked_.Mutable(index);
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymsserialnotobechecked(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  strpsnymsserialnotobechecked_.Mutable(index)->assign(value);
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymsserialnotobechecked(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  strpsnymsserialnotobechecked_.Mutable(index)->assign(std::move(value));
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymsserialnotobechecked(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotobechecked_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymsserialnotobechecked(int index, const char* value, size_t size) {
  strpsnymsserialnotobechecked_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline std::string* msgPsnymOCSPReq_V2PCA::_internal_add_strpsnymsserialnotobechecked() {
  return strpsnymsserialnotobechecked_.Add();
}
inline void msgPsnymOCSPReq_V2PCA::add_strpsnymsserialnotobechecked(const std::string& value) {
  strpsnymsserialnotobechecked_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline void msgPsnymOCSPReq_V2PCA::add_strpsnymsserialnotobechecked(std::string&& value) {
  strpsnymsserialnotobechecked_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline void msgPsnymOCSPReq_V2PCA::add_strpsnymsserialnotobechecked(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotobechecked_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline void msgPsnymOCSPReq_V2PCA::add_strpsnymsserialnotobechecked(const char* value, size_t size) {
  strpsnymsserialnotobechecked_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgPsnymOCSPReq_V2PCA::strpsnymsserialnotobechecked() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  return strpsnymsserialnotobechecked_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgPsnymOCSPReq_V2PCA::mutable_strpsnymsserialnotobechecked() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymsSerialNoToBeChecked)
  return &strpsnymsserialnotobechecked_;
}

// required int32 iPsnymCertLen = 7 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_ipsnymcertlen() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_ipsnymcertlen() const {
  return _internal_has_ipsnymcertlen();
}
inline void msgPsnymOCSPReq_V2PCA::clear_ipsnymcertlen() {
  ipsnymcertlen_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::_internal_ipsnymcertlen() const {
  return ipsnymcertlen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::ipsnymcertlen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.iPsnymCertLen)
  return _internal_ipsnymcertlen();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  ipsnymcertlen_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipsnymcertlen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.iPsnymCertLen)
}

// required string strPsnymCert = 8 [default = ""];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_strpsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_strpsnymcert() const {
  return _internal_has_strpsnymcert();
}
inline void msgPsnymOCSPReq_V2PCA::clear_strpsnymcert() {
  strpsnymcert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymOCSPReq_V2PCA::strpsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
  return _internal_strpsnymcert();
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymcert(const std::string& value) {
  _internal_set_strpsnymcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymOCSPReq_V2PCA::mutable_strpsnymcert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
  return _internal_mutable_strpsnymcert();
}
inline const std::string& msgPsnymOCSPReq_V2PCA::_internal_strpsnymcert() const {
  return strpsnymcert_.Get();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_strpsnymcert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymcert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}
inline void msgPsnymOCSPReq_V2PCA::set_strpsnymcert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymOCSPReq_V2PCA::_internal_mutable_strpsnymcert() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymOCSPReq_V2PCA::release_strpsnymcert() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
  if (!_internal_has_strpsnymcert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymOCSPReq_V2PCA::set_allocated_strpsnymcert(std::string* strpsnymcert) {
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}
inline std::string* msgPsnymOCSPReq_V2PCA::unsafe_arena_release_strpsnymcert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymOCSPReq_V2PCA::unsafe_arena_set_allocated_strpsnymcert(
    std::string* strpsnymcert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.strPsnymCert)
}

// required int32 iNonce = 9 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymOCSPReq_V2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPReq_V2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.iNonce)
}

// required int64 tTimeStamp = 10 [default = -1];
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymOCSPReq_V2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymOCSPReq_V2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymOCSPReq_V2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymOCSPReq_V2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  ttimestamp_ = value;
}
inline void msgPsnymOCSPReq_V2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPReq_V2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 11;
inline bool msgPsnymOCSPReq_V2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymOCSPReq_V2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymOCSPReq_V2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymOCSPReq_V2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymOCSPReq_V2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPReq_V2PCA.stSign)
  return _internal_stsign();
}
inline void msgPsnymOCSPReq_V2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymOCSPReq_V2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymOCSPReq_V2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPReq_V2PCA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymOCSPReq_V2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymOCSPReq_V2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPReq_V2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymOCSPReq_V2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPReq_V2PCA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymRevocationStatus

// required string strPsnymSerialNo = 1 [default = ""];
inline bool msgPsnymRevocationStatus::_internal_has_strpsnymserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymRevocationStatus::has_strpsnymserialno() const {
  return _internal_has_strpsnymserialno();
}
inline void msgPsnymRevocationStatus::clear_strpsnymserialno() {
  strpsnymserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymRevocationStatus::strpsnymserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
  return _internal_strpsnymserialno();
}
inline void msgPsnymRevocationStatus::set_strpsnymserialno(const std::string& value) {
  _internal_set_strpsnymserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}
inline std::string* msgPsnymRevocationStatus::mutable_strpsnymserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
  return _internal_mutable_strpsnymserialno();
}
inline const std::string& msgPsnymRevocationStatus::_internal_strpsnymserialno() const {
  return strpsnymserialno_.Get();
}
inline void msgPsnymRevocationStatus::_internal_set_strpsnymserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymRevocationStatus::set_strpsnymserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}
inline void msgPsnymRevocationStatus::set_strpsnymserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}
inline void msgPsnymRevocationStatus::set_strpsnymserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}
inline std::string* msgPsnymRevocationStatus::_internal_mutable_strpsnymserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymRevocationStatus::release_strpsnymserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
  if (!_internal_has_strpsnymserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymRevocationStatus::set_allocated_strpsnymserialno(std::string* strpsnymserialno) {
  if (strpsnymserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}
inline std::string* msgPsnymRevocationStatus::unsafe_arena_release_strpsnymserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymRevocationStatus::unsafe_arena_set_allocated_strpsnymserialno(
    std::string* strpsnymserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymRevocationStatus.strPsnymSerialNo)
}

// required bool bRevocationStatus = 2 [default = false];
inline bool msgPsnymRevocationStatus::_internal_has_brevocationstatus() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymRevocationStatus::has_brevocationstatus() const {
  return _internal_has_brevocationstatus();
}
inline void msgPsnymRevocationStatus::clear_brevocationstatus() {
  brevocationstatus_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool msgPsnymRevocationStatus::_internal_brevocationstatus() const {
  return brevocationstatus_;
}
inline bool msgPsnymRevocationStatus::brevocationstatus() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymRevocationStatus.bRevocationStatus)
  return _internal_brevocationstatus();
}
inline void msgPsnymRevocationStatus::_internal_set_brevocationstatus(bool value) {
  _has_bits_[0] |= 0x00000002u;
  brevocationstatus_ = value;
}
inline void msgPsnymRevocationStatus::set_brevocationstatus(bool value) {
  _internal_set_brevocationstatus(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymRevocationStatus.bRevocationStatus)
}

// -------------------------------------------------------------------

// msgPsnymOCSPRes_PCA2V

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymOCSPRes_PCA2V::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymOCSPRes_PCA2V::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgPsnymOCSPRes_PCA2V::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPRes_PCA2V.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymOCSPRes_PCA2V::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymOCSPRes_PCA2V::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymOCSPRes_PCA2V::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymOCSPRes_PCA2V::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPRes_PCA2V::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPRes_PCA2V::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPRes_PCA2V.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPRes_PCA2V::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymOCSPRes_PCA2V::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPRes_PCA2V.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymOCSPRes_PCA2V::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stSigner)
}

// required int32 iPCAIdRange = 3 [default = -1];
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymOCSPRes_PCA2V::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymOCSPRes_PCA2V::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgPsnymOCSPRes_PCA2V::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPRes_PCA2V.iPCAIdRange)
}

// required uint32 uiNoOfPsnymsToBeChecked = 4 [default = 0];
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_uinoofpsnymstobechecked() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_uinoofpsnymstobechecked() const {
  return _internal_has_uinoofpsnymstobechecked();
}
inline void msgPsnymOCSPRes_PCA2V::clear_uinoofpsnymstobechecked() {
  uinoofpsnymstobechecked_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymOCSPRes_PCA2V::_internal_uinoofpsnymstobechecked() const {
  return uinoofpsnymstobechecked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymOCSPRes_PCA2V::uinoofpsnymstobechecked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.uiNoOfPsnymsToBeChecked)
  return _internal_uinoofpsnymstobechecked();
}
inline void msgPsnymOCSPRes_PCA2V::_internal_set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstobechecked_ = value;
}
inline void msgPsnymOCSPRes_PCA2V::set_uinoofpsnymstobechecked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstobechecked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPRes_PCA2V.uiNoOfPsnymsToBeChecked)
}

// repeated .interfaces.msgPsnymRevocationStatus stRevocationStatus = 5;
inline int msgPsnymOCSPRes_PCA2V::_internal_strevocationstatus_size() const {
  return strevocationstatus_.size();
}
inline int msgPsnymOCSPRes_PCA2V::strevocationstatus_size() const {
  return _internal_strevocationstatus_size();
}
inline void msgPsnymOCSPRes_PCA2V::clear_strevocationstatus() {
  strevocationstatus_.Clear();
}
inline ::interfaces::msgPsnymRevocationStatus* msgPsnymOCSPRes_PCA2V::mutable_strevocationstatus(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPRes_PCA2V.stRevocationStatus)
  return strevocationstatus_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymRevocationStatus >*
msgPsnymOCSPRes_PCA2V::mutable_strevocationstatus() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymOCSPRes_PCA2V.stRevocationStatus)
  return &strevocationstatus_;
}
inline const ::interfaces::msgPsnymRevocationStatus& msgPsnymOCSPRes_PCA2V::_internal_strevocationstatus(int index) const {
  return strevocationstatus_.Get(index);
}
inline const ::interfaces::msgPsnymRevocationStatus& msgPsnymOCSPRes_PCA2V::strevocationstatus(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.stRevocationStatus)
  return _internal_strevocationstatus(index);
}
inline ::interfaces::msgPsnymRevocationStatus* msgPsnymOCSPRes_PCA2V::_internal_add_strevocationstatus() {
  return strevocationstatus_.Add();
}
inline ::interfaces::msgPsnymRevocationStatus* msgPsnymOCSPRes_PCA2V::add_strevocationstatus() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymOCSPRes_PCA2V.stRevocationStatus)
  return _internal_add_strevocationstatus();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymRevocationStatus >&
msgPsnymOCSPRes_PCA2V::strevocationstatus() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymOCSPRes_PCA2V.stRevocationStatus)
  return strevocationstatus_;
}

// required int32 iNonce = 6 [default = -1];
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymOCSPRes_PCA2V::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymOCSPRes_PCA2V::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.iNonce)
  return _internal_inonce();
}
inline void msgPsnymOCSPRes_PCA2V::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgPsnymOCSPRes_PCA2V::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPRes_PCA2V.iNonce)
}

// required int64 tTimeStamp = 7 [default = -1];
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymOCSPRes_PCA2V::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymOCSPRes_PCA2V::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymOCSPRes_PCA2V::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymOCSPRes_PCA2V::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgPsnymOCSPRes_PCA2V::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymOCSPRes_PCA2V.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 8;
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymOCSPRes_PCA2V::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymOCSPRes_PCA2V::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymOCSPRes_PCA2V::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymOCSPRes_PCA2V::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymOCSPRes_PCA2V::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymOCSPRes_PCA2V::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPRes_PCA2V.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymOCSPRes_PCA2V::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymOCSPRes_PCA2V::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPRes_PCA2V.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymOCSPRes_PCA2V::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgPsnymOCSPRes_PCA2V::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymOCSPRes_PCA2V::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymOCSPRes_PCA2V::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymOCSPRes_PCA2V::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymOCSPRes_PCA2V::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymOCSPRes_PCA2V.stSign)
  return _internal_stsign();
}
inline void msgPsnymOCSPRes_PCA2V::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stSign)
}
inline ::interfaces::msgSignature* msgPsnymOCSPRes_PCA2V::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymOCSPRes_PCA2V::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymOCSPRes_PCA2V.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymOCSPRes_PCA2V::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymOCSPRes_PCA2V::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymOCSPRes_PCA2V.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymOCSPRes_PCA2V::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymOCSPRes_PCA2V.stSign)
}

// -------------------------------------------------------------------

// msgRevokePsnymCertReq_P2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgRevokePsnymCertReq_P2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgRevokePsnymCertReq_P2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgRevokePsnymCertReq_P2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertReq_P2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertReq_P2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.stSigner)
  return _internal_stsigner();
}
inline void msgRevokePsnymCertReq_P2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_P2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_P2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertReq_P2RA.stSigner)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_P2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000002u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_P2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_P2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgRevokePsnymCertReq_P2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.stSigner)
}

// required int32 iPCAIdRange = 3 [default = -1];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgRevokePsnymCertReq_P2RA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgRevokePsnymCertReq_P2RA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.iPCAIdRange)
}

// required string strECSecManECPubKey = 4 [default = ""];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_strecsecmanecpubkey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_strecsecmanecpubkey() const {
  return _internal_has_strecsecmanecpubkey();
}
inline void msgRevokePsnymCertReq_P2RA::clear_strecsecmanecpubkey() {
  strecsecmanecpubkey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgRevokePsnymCertReq_P2RA::strecsecmanecpubkey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
  return _internal_strecsecmanecpubkey();
}
inline void msgRevokePsnymCertReq_P2RA::set_strecsecmanecpubkey(const std::string& value) {
  _internal_set_strecsecmanecpubkey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}
inline std::string* msgRevokePsnymCertReq_P2RA::mutable_strecsecmanecpubkey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
  return _internal_mutable_strecsecmanecpubkey();
}
inline const std::string& msgRevokePsnymCertReq_P2RA::_internal_strecsecmanecpubkey() const {
  return strecsecmanecpubkey_.Get();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_strecsecmanecpubkey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strecsecmanecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgRevokePsnymCertReq_P2RA::set_strecsecmanecpubkey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strecsecmanecpubkey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}
inline void msgRevokePsnymCertReq_P2RA::set_strecsecmanecpubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strecsecmanecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}
inline void msgRevokePsnymCertReq_P2RA::set_strecsecmanecpubkey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strecsecmanecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}
inline std::string* msgRevokePsnymCertReq_P2RA::_internal_mutable_strecsecmanecpubkey() {
  _has_bits_[0] |= 0x00000001u;
  return strecsecmanecpubkey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgRevokePsnymCertReq_P2RA::release_strecsecmanecpubkey() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
  if (!_internal_has_strecsecmanecpubkey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strecsecmanecpubkey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgRevokePsnymCertReq_P2RA::set_allocated_strecsecmanecpubkey(std::string* strecsecmanecpubkey) {
  if (strecsecmanecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strecsecmanecpubkey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strecsecmanecpubkey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}
inline std::string* msgRevokePsnymCertReq_P2RA::unsafe_arena_release_strecsecmanecpubkey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strecsecmanecpubkey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgRevokePsnymCertReq_P2RA::unsafe_arena_set_allocated_strecsecmanecpubkey(
    std::string* strecsecmanecpubkey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strecsecmanecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strecsecmanecpubkey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strecsecmanecpubkey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.strECSecManECPubKey)
}

// required uint32 uiNoOfPsnymsToBeRevoked = 5 [default = 0];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_uinoofpsnymstoberevoked() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_uinoofpsnymstoberevoked() const {
  return _internal_has_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertReq_P2RA::clear_uinoofpsnymstoberevoked() {
  uinoofpsnymstoberevoked_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertReq_P2RA::_internal_uinoofpsnymstoberevoked() const {
  return uinoofpsnymstoberevoked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertReq_P2RA::uinoofpsnymstoberevoked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.uiNoOfPsnymsToBeRevoked)
  return _internal_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberevoked_ = value;
}
inline void msgRevokePsnymCertReq_P2RA::set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberevoked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.uiNoOfPsnymsToBeRevoked)
}

// repeated string strRevokedPsnymCert = 6;
inline int msgRevokePsnymCertReq_P2RA::_internal_strrevokedpsnymcert_size() const {
  return strrevokedpsnymcert_.size();
}
inline int msgRevokePsnymCertReq_P2RA::strrevokedpsnymcert_size() const {
  return _internal_strrevokedpsnymcert_size();
}
inline void msgRevokePsnymCertReq_P2RA::clear_strrevokedpsnymcert() {
  strrevokedpsnymcert_.Clear();
}
inline std::string* msgRevokePsnymCertReq_P2RA::add_strrevokedpsnymcert() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  return _internal_add_strrevokedpsnymcert();
}
inline const std::string& msgRevokePsnymCertReq_P2RA::_internal_strrevokedpsnymcert(int index) const {
  return strrevokedpsnymcert_.Get(index);
}
inline const std::string& msgRevokePsnymCertReq_P2RA::strrevokedpsnymcert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  return _internal_strrevokedpsnymcert(index);
}
inline std::string* msgRevokePsnymCertReq_P2RA::mutable_strrevokedpsnymcert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  return strrevokedpsnymcert_.Mutable(index);
}
inline void msgRevokePsnymCertReq_P2RA::set_strrevokedpsnymcert(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  strrevokedpsnymcert_.Mutable(index)->assign(value);
}
inline void msgRevokePsnymCertReq_P2RA::set_strrevokedpsnymcert(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  strrevokedpsnymcert_.Mutable(index)->assign(std::move(value));
}
inline void msgRevokePsnymCertReq_P2RA::set_strrevokedpsnymcert(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_P2RA::set_strrevokedpsnymcert(int index, const char* value, size_t size) {
  strrevokedpsnymcert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline std::string* msgRevokePsnymCertReq_P2RA::_internal_add_strrevokedpsnymcert() {
  return strrevokedpsnymcert_.Add();
}
inline void msgRevokePsnymCertReq_P2RA::add_strrevokedpsnymcert(const std::string& value) {
  strrevokedpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_P2RA::add_strrevokedpsnymcert(std::string&& value) {
  strrevokedpsnymcert_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_P2RA::add_strrevokedpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_P2RA::add_strrevokedpsnymcert(const char* value, size_t size) {
  strrevokedpsnymcert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgRevokePsnymCertReq_P2RA::strrevokedpsnymcert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  return strrevokedpsnymcert_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgRevokePsnymCertReq_P2RA::mutable_strrevokedpsnymcert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgRevokePsnymCertReq_P2RA.strRevokedPsnymCert)
  return &strrevokedpsnymcert_;
}

// required int32 iNonce = 7 [default = -1];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgRevokePsnymCertReq_P2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_P2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.iNonce)
  return _internal_inonce();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgRevokePsnymCertReq_P2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgRevokePsnymCertReq_P2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertReq_P2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertReq_P2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgRevokePsnymCertReq_P2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgRevokePsnymCertReq_P2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_P2RA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgRevokePsnymCertReq_P2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertReq_P2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgRevokePsnymCertReq_P2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertReq_P2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertReq_P2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_P2RA.stSign)
  return _internal_stsign();
}
inline void msgRevokePsnymCertReq_P2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.stSign)
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_P2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_P2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertReq_P2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_P2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_P2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_P2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgRevokePsnymCertReq_P2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertReq_P2RA.stSign)
}

// -------------------------------------------------------------------

// msgRevokePsnymCertReq_RA2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_RA2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_RA2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgRevokePsnymCertReq_RA2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgRevokePsnymCertReq_RA2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertReq_RA2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertReq_RA2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgRevokePsnymCertReq_RA2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertReq_RA2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_RA2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_RA2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertReq_RA2PCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_RA2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertReq_RA2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_RA2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgRevokePsnymCertReq_RA2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertReq_RA2PCA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_uinoofpsnymstoberevoked() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_uinoofpsnymstoberevoked() const {
  return _internal_has_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_uinoofpsnymstoberevoked() {
  uinoofpsnymstoberevoked_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertReq_RA2PCA::_internal_uinoofpsnymstoberevoked() const {
  return uinoofpsnymstoberevoked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertReq_RA2PCA::uinoofpsnymstoberevoked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.uiNoOfPsnymsToBeRevoked)
  return _internal_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertReq_RA2PCA::_internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofpsnymstoberevoked_ = value;
}
inline void msgRevokePsnymCertReq_RA2PCA::set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberevoked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.uiNoOfPsnymsToBeRevoked)
}

// repeated string strRevokedPsnymCert = 4;
inline int msgRevokePsnymCertReq_RA2PCA::_internal_strrevokedpsnymcert_size() const {
  return strrevokedpsnymcert_.size();
}
inline int msgRevokePsnymCertReq_RA2PCA::strrevokedpsnymcert_size() const {
  return _internal_strrevokedpsnymcert_size();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_strrevokedpsnymcert() {
  strrevokedpsnymcert_.Clear();
}
inline std::string* msgRevokePsnymCertReq_RA2PCA::add_strrevokedpsnymcert() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  return _internal_add_strrevokedpsnymcert();
}
inline const std::string& msgRevokePsnymCertReq_RA2PCA::_internal_strrevokedpsnymcert(int index) const {
  return strrevokedpsnymcert_.Get(index);
}
inline const std::string& msgRevokePsnymCertReq_RA2PCA::strrevokedpsnymcert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  return _internal_strrevokedpsnymcert(index);
}
inline std::string* msgRevokePsnymCertReq_RA2PCA::mutable_strrevokedpsnymcert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  return strrevokedpsnymcert_.Mutable(index);
}
inline void msgRevokePsnymCertReq_RA2PCA::set_strrevokedpsnymcert(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  strrevokedpsnymcert_.Mutable(index)->assign(value);
}
inline void msgRevokePsnymCertReq_RA2PCA::set_strrevokedpsnymcert(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  strrevokedpsnymcert_.Mutable(index)->assign(std::move(value));
}
inline void msgRevokePsnymCertReq_RA2PCA::set_strrevokedpsnymcert(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_RA2PCA::set_strrevokedpsnymcert(int index, const char* value, size_t size) {
  strrevokedpsnymcert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline std::string* msgRevokePsnymCertReq_RA2PCA::_internal_add_strrevokedpsnymcert() {
  return strrevokedpsnymcert_.Add();
}
inline void msgRevokePsnymCertReq_RA2PCA::add_strrevokedpsnymcert(const std::string& value) {
  strrevokedpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_RA2PCA::add_strrevokedpsnymcert(std::string&& value) {
  strrevokedpsnymcert_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_RA2PCA::add_strrevokedpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strrevokedpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline void msgRevokePsnymCertReq_RA2PCA::add_strrevokedpsnymcert(const char* value, size_t size) {
  strrevokedpsnymcert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgRevokePsnymCertReq_RA2PCA::strrevokedpsnymcert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  return strrevokedpsnymcert_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgRevokePsnymCertReq_RA2PCA::mutable_strrevokedpsnymcert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgRevokePsnymCertReq_RA2PCA.strRevokedPsnymCert)
  return &strrevokedpsnymcert_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_RA2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertReq_RA2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.iNonce)
  return _internal_inonce();
}
inline void msgRevokePsnymCertReq_RA2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgRevokePsnymCertReq_RA2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertReq_RA2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertReq_RA2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgRevokePsnymCertReq_RA2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ttimestamp_ = value;
}
inline void msgRevokePsnymCertReq_RA2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertReq_RA2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgRevokePsnymCertReq_RA2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertReq_RA2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgRevokePsnymCertReq_RA2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertReq_RA2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertReq_RA2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertReq_RA2PCA.stSign)
  return _internal_stsign();
}
inline void msgRevokePsnymCertReq_RA2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertReq_RA2PCA.stSign)
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_RA2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_RA2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertReq_RA2PCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_RA2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertReq_RA2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertReq_RA2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgRevokePsnymCertReq_RA2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertReq_RA2PCA.stSign)
}

// -------------------------------------------------------------------

// msgRevokePsnymCertRes_PCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgRevokePsnymCertRes_PCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_PCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgRevokePsnymCertRes_PCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_PCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_PCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_PCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgRevokePsnymCertRes_PCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgRevokePsnymCertRes_PCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_PCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgRevokePsnymCertRes_PCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertRes_PCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgRevokePsnymCertRes_PCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertRes_PCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertRes_PCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_PCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgRevokePsnymCertRes_PCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertRes_PCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_PCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_PCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertRes_PCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_PCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_PCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_PCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgRevokePsnymCertRes_PCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertRes_PCA2RA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
inline bool msgRevokePsnymCertRes_PCA2RA::_internal_has_uinoofpsnymstoberevoked() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_PCA2RA::has_uinoofpsnymstoberevoked() const {
  return _internal_has_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertRes_PCA2RA::clear_uinoofpsnymstoberevoked() {
  uinoofpsnymstoberevoked_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::_internal_uinoofpsnymstoberevoked() const {
  return uinoofpsnymstoberevoked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::uinoofpsnymstoberevoked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfPsnymsToBeRevoked)
  return _internal_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertRes_PCA2RA::_internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uinoofpsnymstoberevoked_ = value;
}
inline void msgRevokePsnymCertRes_PCA2RA::set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberevoked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfPsnymsToBeRevoked)
}

// required uint32 uiNoOfSuccessfullyRevokedPsnyms = 4 [default = 0];
inline bool msgRevokePsnymCertRes_PCA2RA::_internal_has_uinoofsuccessfullyrevokedpsnyms() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_PCA2RA::has_uinoofsuccessfullyrevokedpsnyms() const {
  return _internal_has_uinoofsuccessfullyrevokedpsnyms();
}
inline void msgRevokePsnymCertRes_PCA2RA::clear_uinoofsuccessfullyrevokedpsnyms() {
  uinoofsuccessfullyrevokedpsnyms_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::_internal_uinoofsuccessfullyrevokedpsnyms() const {
  return uinoofsuccessfullyrevokedpsnyms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::uinoofsuccessfullyrevokedpsnyms() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfSuccessfullyRevokedPsnyms)
  return _internal_uinoofsuccessfullyrevokedpsnyms();
}
inline void msgRevokePsnymCertRes_PCA2RA::_internal_set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofsuccessfullyrevokedpsnyms_ = value;
}
inline void msgRevokePsnymCertRes_PCA2RA::set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullyrevokedpsnyms(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfSuccessfullyRevokedPsnyms)
}

// required uint32 uiNoOfSuccessfullyRevokedTickets = 5 [default = 0];
inline bool msgRevokePsnymCertRes_PCA2RA::_internal_has_uinoofsuccessfullyrevokedtickets() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_PCA2RA::has_uinoofsuccessfullyrevokedtickets() const {
  return _internal_has_uinoofsuccessfullyrevokedtickets();
}
inline void msgRevokePsnymCertRes_PCA2RA::clear_uinoofsuccessfullyrevokedtickets() {
  uinoofsuccessfullyrevokedtickets_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::_internal_uinoofsuccessfullyrevokedtickets() const {
  return uinoofsuccessfullyrevokedtickets_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_PCA2RA::uinoofsuccessfullyrevokedtickets() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfSuccessfullyRevokedTickets)
  return _internal_uinoofsuccessfullyrevokedtickets();
}
inline void msgRevokePsnymCertRes_PCA2RA::_internal_set_uinoofsuccessfullyrevokedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofsuccessfullyrevokedtickets_ = value;
}
inline void msgRevokePsnymCertRes_PCA2RA::set_uinoofsuccessfullyrevokedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullyrevokedtickets(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_PCA2RA.uiNoOfSuccessfullyRevokedTickets)
}

// -------------------------------------------------------------------

// msgRevokeX509CertReq_RA2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokeX509CertReq_RA2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokeX509CertReq_RA2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgRevokeX509CertReq_RA2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgRevokeX509CertReq_RA2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgRevokeX509CertReq_RA2LTCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgRevokeX509CertReq_RA2LTCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.stSigner)
  return _internal_stsigner();
}
inline void msgRevokeX509CertReq_RA2LTCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokeX509CertReq_RA2LTCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgRevokeX509CertReq_RA2LTCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokeX509CertReq_RA2LTCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokeX509CertReq_RA2LTCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokeX509CertReq_RA2LTCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgRevokeX509CertReq_RA2LTCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokeX509CertReq_RA2LTCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgRevokeX509CertReq_RA2LTCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokeX509CertReq_RA2LTCA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_uinoofpsnymstoberevoked() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_uinoofpsnymstoberevoked() const {
  return _internal_has_uinoofpsnymstoberevoked();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_uinoofpsnymstoberevoked() {
  uinoofpsnymstoberevoked_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokeX509CertReq_RA2LTCA::_internal_uinoofpsnymstoberevoked() const {
  return uinoofpsnymstoberevoked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokeX509CertReq_RA2LTCA::uinoofpsnymstoberevoked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.uiNoOfPsnymsToBeRevoked)
  return _internal_uinoofpsnymstoberevoked();
}
inline void msgRevokeX509CertReq_RA2LTCA::_internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofpsnymstoberevoked_ = value;
}
inline void msgRevokeX509CertReq_RA2LTCA::set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberevoked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.uiNoOfPsnymsToBeRevoked)
}

// repeated string strTicketSerialNo = 4;
inline int msgRevokeX509CertReq_RA2LTCA::_internal_strticketserialno_size() const {
  return strticketserialno_.size();
}
inline int msgRevokeX509CertReq_RA2LTCA::strticketserialno_size() const {
  return _internal_strticketserialno_size();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_strticketserialno() {
  strticketserialno_.Clear();
}
inline std::string* msgRevokeX509CertReq_RA2LTCA::add_strticketserialno() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  return _internal_add_strticketserialno();
}
inline const std::string& msgRevokeX509CertReq_RA2LTCA::_internal_strticketserialno(int index) const {
  return strticketserialno_.Get(index);
}
inline const std::string& msgRevokeX509CertReq_RA2LTCA::strticketserialno(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  return _internal_strticketserialno(index);
}
inline std::string* msgRevokeX509CertReq_RA2LTCA::mutable_strticketserialno(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  return strticketserialno_.Mutable(index);
}
inline void msgRevokeX509CertReq_RA2LTCA::set_strticketserialno(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  strticketserialno_.Mutable(index)->assign(value);
}
inline void msgRevokeX509CertReq_RA2LTCA::set_strticketserialno(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  strticketserialno_.Mutable(index)->assign(std::move(value));
}
inline void msgRevokeX509CertReq_RA2LTCA::set_strticketserialno(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strticketserialno_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline void msgRevokeX509CertReq_RA2LTCA::set_strticketserialno(int index, const char* value, size_t size) {
  strticketserialno_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline std::string* msgRevokeX509CertReq_RA2LTCA::_internal_add_strticketserialno() {
  return strticketserialno_.Add();
}
inline void msgRevokeX509CertReq_RA2LTCA::add_strticketserialno(const std::string& value) {
  strticketserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline void msgRevokeX509CertReq_RA2LTCA::add_strticketserialno(std::string&& value) {
  strticketserialno_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline void msgRevokeX509CertReq_RA2LTCA::add_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strticketserialno_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline void msgRevokeX509CertReq_RA2LTCA::add_strticketserialno(const char* value, size_t size) {
  strticketserialno_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgRevokeX509CertReq_RA2LTCA::strticketserialno() const {
  // @@protoc_insertion_point(field_list:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  return strticketserialno_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgRevokeX509CertReq_RA2LTCA::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgRevokeX509CertReq_RA2LTCA.strTicketSerialNo)
  return &strticketserialno_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokeX509CertReq_RA2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokeX509CertReq_RA2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgRevokeX509CertReq_RA2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inonce_ = value;
}
inline void msgRevokeX509CertReq_RA2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokeX509CertReq_RA2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokeX509CertReq_RA2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgRevokeX509CertReq_RA2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ttimestamp_ = value;
}
inline void msgRevokeX509CertReq_RA2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokeX509CertReq_RA2LTCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgRevokeX509CertReq_RA2LTCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgRevokeX509CertReq_RA2LTCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgRevokeX509CertReq_RA2LTCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgRevokeX509CertReq_RA2LTCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgRevokeX509CertReq_RA2LTCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokeX509CertReq_RA2LTCA.stSign)
  return _internal_stsign();
}
inline void msgRevokeX509CertReq_RA2LTCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokeX509CertReq_RA2LTCA.stSign)
}
inline ::interfaces::msgSignature* msgRevokeX509CertReq_RA2LTCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgRevokeX509CertReq_RA2LTCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokeX509CertReq_RA2LTCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgRevokeX509CertReq_RA2LTCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgRevokeX509CertReq_RA2LTCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokeX509CertReq_RA2LTCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgRevokeX509CertReq_RA2LTCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokeX509CertReq_RA2LTCA.stSign)
}

// -------------------------------------------------------------------

// msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo

// required int32 iErrGenSource = 1 [default = -1];
inline bool msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_has_ierrgensource() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::has_ierrgensource() const {
  return _internal_has_ierrgensource();
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::clear_ierrgensource() {
  ierrgensource_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_ierrgensource() const {
  return ierrgensource_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::ierrgensource() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.iErrGenSource)
  return _internal_ierrgensource();
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_set_ierrgensource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  ierrgensource_ = value;
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::set_ierrgensource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ierrgensource(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.iErrGenSource)
}

// required .interfaces.msgError stDetailedErrInfo = 2;
inline bool msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_has_stdetailederrinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stdetailederrinfo_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::has_stdetailederrinfo() const {
  return _internal_has_stdetailederrinfo();
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::clear_stdetailederrinfo() {
  if (stdetailederrinfo_ != nullptr) stdetailederrinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgError& msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_stdetailederrinfo() const {
  const ::interfaces::msgError* p = stdetailederrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::stdetailederrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.stDetailedErrInfo)
  return _internal_stdetailederrinfo();
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::unsafe_arena_set_allocated_stdetailederrinfo(
    ::interfaces::msgError* stdetailederrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stdetailederrinfo_);
  }
  stdetailederrinfo_ = stdetailederrinfo;
  if (stdetailederrinfo) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.stDetailedErrInfo)
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::release_stdetailederrinfo() {
  auto temp = unsafe_arena_release_stdetailederrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::unsafe_arena_release_stdetailederrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.stDetailedErrInfo)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgError* temp = stdetailederrinfo_;
  stdetailederrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::_internal_mutable_stdetailederrinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (stdetailederrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    stdetailederrinfo_ = p;
  }
  return stdetailederrinfo_;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::mutable_stdetailederrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.stDetailedErrInfo)
  return _internal_mutable_stdetailederrinfo();
}
inline void msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo::set_allocated_stdetailederrinfo(::interfaces::msgError* stdetailederrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stdetailederrinfo_;
  }
  if (stdetailederrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stdetailederrinfo);
    if (message_arena != submessage_arena) {
      stdetailederrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stdetailederrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stdetailederrinfo_ = stdetailederrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo.stDetailedErrInfo)
}

// -------------------------------------------------------------------

// msgRevokePsnymCertRes_RA2P

// required int32 iReqType = 1 [default = -1];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgRevokePsnymCertRes_RA2P::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.iReqType)
  return _internal_ireqtype();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ireqtype_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgRevokePsnymCertRes_RA2P::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertRes_RA2P::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgRevokePsnymCertRes_RA2P::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.stSigner)
  return _internal_stsigner();
}
inline void msgRevokePsnymCertRes_RA2P::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stSigner)
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_RA2P::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_RA2P::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertRes_RA2P.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_RA2P::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgRevokePsnymCertRes_RA2P::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_RA2P.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgRevokePsnymCertRes_RA2P::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stSigner)
}

// required uint32 uiNoOfPsnymsToBeRevoked = 3 [default = 0];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_uinoofpsnymstoberevoked() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_uinoofpsnymstoberevoked() const {
  return _internal_has_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertRes_RA2P::clear_uinoofpsnymstoberevoked() {
  uinoofpsnymstoberevoked_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::_internal_uinoofpsnymstoberevoked() const {
  return uinoofpsnymstoberevoked_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::uinoofpsnymstoberevoked() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfPsnymsToBeRevoked)
  return _internal_uinoofpsnymstoberevoked();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberevoked_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_uinoofpsnymstoberevoked(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberevoked(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfPsnymsToBeRevoked)
}

// required uint32 uiNoOfSuccessfullyRevokedX509Cert = 4 [default = 0];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_uinoofsuccessfullyrevokedx509cert() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_uinoofsuccessfullyrevokedx509cert() const {
  return _internal_has_uinoofsuccessfullyrevokedx509cert();
}
inline void msgRevokePsnymCertRes_RA2P::clear_uinoofsuccessfullyrevokedx509cert() {
  uinoofsuccessfullyrevokedx509cert_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::_internal_uinoofsuccessfullyrevokedx509cert() const {
  return uinoofsuccessfullyrevokedx509cert_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::uinoofsuccessfullyrevokedx509cert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfSuccessfullyRevokedX509Cert)
  return _internal_uinoofsuccessfullyrevokedx509cert();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_uinoofsuccessfullyrevokedx509cert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uinoofsuccessfullyrevokedx509cert_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_uinoofsuccessfullyrevokedx509cert(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullyrevokedx509cert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfSuccessfullyRevokedX509Cert)
}

// required uint32 uiNoOfSuccessfullyRevokedPsnyms = 5 [default = 0];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_uinoofsuccessfullyrevokedpsnyms() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_uinoofsuccessfullyrevokedpsnyms() const {
  return _internal_has_uinoofsuccessfullyrevokedpsnyms();
}
inline void msgRevokePsnymCertRes_RA2P::clear_uinoofsuccessfullyrevokedpsnyms() {
  uinoofsuccessfullyrevokedpsnyms_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::_internal_uinoofsuccessfullyrevokedpsnyms() const {
  return uinoofsuccessfullyrevokedpsnyms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgRevokePsnymCertRes_RA2P::uinoofsuccessfullyrevokedpsnyms() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfSuccessfullyRevokedPsnyms)
  return _internal_uinoofsuccessfullyrevokedpsnyms();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uinoofsuccessfullyrevokedpsnyms_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_uinoofsuccessfullyrevokedpsnyms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullyrevokedpsnyms(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.uiNoOfSuccessfullyRevokedPsnyms)
}

// repeated .interfaces.msgRevokePsnymCertRes_RA2P.msgPsnymRevocationErrInfo pstPsnymRevocationErrInfo = 6;
inline int msgRevokePsnymCertRes_RA2P::_internal_pstpsnymrevocationerrinfo_size() const {
  return pstpsnymrevocationerrinfo_.size();
}
inline int msgRevokePsnymCertRes_RA2P::pstpsnymrevocationerrinfo_size() const {
  return _internal_pstpsnymrevocationerrinfo_size();
}
inline void msgRevokePsnymCertRes_RA2P::clear_pstpsnymrevocationerrinfo() {
  pstpsnymrevocationerrinfo_.Clear();
}
inline ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* msgRevokePsnymCertRes_RA2P::mutable_pstpsnymrevocationerrinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_RA2P.pstPsnymRevocationErrInfo)
  return pstpsnymrevocationerrinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo >*
msgRevokePsnymCertRes_RA2P::mutable_pstpsnymrevocationerrinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgRevokePsnymCertRes_RA2P.pstPsnymRevocationErrInfo)
  return &pstpsnymrevocationerrinfo_;
}
inline const ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& msgRevokePsnymCertRes_RA2P::_internal_pstpsnymrevocationerrinfo(int index) const {
  return pstpsnymrevocationerrinfo_.Get(index);
}
inline const ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo& msgRevokePsnymCertRes_RA2P::pstpsnymrevocationerrinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.pstPsnymRevocationErrInfo)
  return _internal_pstpsnymrevocationerrinfo(index);
}
inline ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* msgRevokePsnymCertRes_RA2P::_internal_add_pstpsnymrevocationerrinfo() {
  return pstpsnymrevocationerrinfo_.Add();
}
inline ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo* msgRevokePsnymCertRes_RA2P::add_pstpsnymrevocationerrinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgRevokePsnymCertRes_RA2P.pstPsnymRevocationErrInfo)
  return _internal_add_pstpsnymrevocationerrinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgRevokePsnymCertRes_RA2P_msgPsnymRevocationErrInfo >&
msgRevokePsnymCertRes_RA2P::pstpsnymrevocationerrinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgRevokePsnymCertRes_RA2P.pstPsnymRevocationErrInfo)
  return pstpsnymrevocationerrinfo_;
}

// required int32 iNonce = 7 [default = -1];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgRevokePsnymCertRes_RA2P::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgRevokePsnymCertRes_RA2P::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.iNonce)
  return _internal_inonce();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgRevokePsnymCertRes_RA2P::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertRes_RA2P::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgRevokePsnymCertRes_RA2P::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgRevokePsnymCertRes_RA2P::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgRevokePsnymCertRes_RA2P::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgRevokePsnymCertRes_RA2P.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 9;
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgRevokePsnymCertRes_RA2P::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgRevokePsnymCertRes_RA2P::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgRevokePsnymCertRes_RA2P::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgRevokePsnymCertRes_RA2P::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stErrInfo)
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertRes_RA2P.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgRevokePsnymCertRes_RA2P::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_RA2P.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgRevokePsnymCertRes_RA2P::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgRevokePsnymCertRes_RA2P::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgRevokePsnymCertRes_RA2P::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgRevokePsnymCertRes_RA2P::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertRes_RA2P::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgRevokePsnymCertRes_RA2P::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgRevokePsnymCertRes_RA2P.stSign)
  return _internal_stsign();
}
inline void msgRevokePsnymCertRes_RA2P::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stSign)
}
inline ::interfaces::msgSignature* msgRevokePsnymCertRes_RA2P::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertRes_RA2P::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgRevokePsnymCertRes_RA2P.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertRes_RA2P::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgRevokePsnymCertRes_RA2P::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgRevokePsnymCertRes_RA2P.stSign)
  return _internal_mutable_stsign();
}
inline void msgRevokePsnymCertRes_RA2P::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgRevokePsnymCertRes_RA2P.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionReq_Police2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionReq_Police2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionReq_Police2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_Police2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_Police2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionReq_Police2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_Police2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_Police2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_Police2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_Police2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_Police2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_Police2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_Police2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionReq_Police2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_Police2RA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_Police2RA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_Police2RA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_Police2RA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.uiNoOfPsnymsToBeResolved)
}

// repeated string strPsnymsSerialNoToBeResolved = 4;
inline int msgPsnymResolutionReq_Police2RA::_internal_strpsnymsserialnotoberesolved_size() const {
  return strpsnymsserialnotoberesolved_.size();
}
inline int msgPsnymResolutionReq_Police2RA::strpsnymsserialnotoberesolved_size() const {
  return _internal_strpsnymsserialnotoberesolved_size();
}
inline void msgPsnymResolutionReq_Police2RA::clear_strpsnymsserialnotoberesolved() {
  strpsnymsserialnotoberesolved_.Clear();
}
inline std::string* msgPsnymResolutionReq_Police2RA::add_strpsnymsserialnotoberesolved() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  return _internal_add_strpsnymsserialnotoberesolved();
}
inline const std::string& msgPsnymResolutionReq_Police2RA::_internal_strpsnymsserialnotoberesolved(int index) const {
  return strpsnymsserialnotoberesolved_.Get(index);
}
inline const std::string& msgPsnymResolutionReq_Police2RA::strpsnymsserialnotoberesolved(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  return _internal_strpsnymsserialnotoberesolved(index);
}
inline std::string* msgPsnymResolutionReq_Police2RA::mutable_strpsnymsserialnotoberesolved(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  return strpsnymsserialnotoberesolved_.Mutable(index);
}
inline void msgPsnymResolutionReq_Police2RA::set_strpsnymsserialnotoberesolved(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(value);
}
inline void msgPsnymResolutionReq_Police2RA::set_strpsnymsserialnotoberesolved(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(std::move(value));
}
inline void msgPsnymResolutionReq_Police2RA::set_strpsnymsserialnotoberesolved(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_Police2RA::set_strpsnymsserialnotoberesolved(int index, const char* value, size_t size) {
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline std::string* msgPsnymResolutionReq_Police2RA::_internal_add_strpsnymsserialnotoberesolved() {
  return strpsnymsserialnotoberesolved_.Add();
}
inline void msgPsnymResolutionReq_Police2RA::add_strpsnymsserialnotoberesolved(const std::string& value) {
  strpsnymsserialnotoberesolved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_Police2RA::add_strpsnymsserialnotoberesolved(std::string&& value) {
  strpsnymsserialnotoberesolved_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_Police2RA::add_strpsnymsserialnotoberesolved(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotoberesolved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_Police2RA::add_strpsnymsserialnotoberesolved(const char* value, size_t size) {
  strpsnymsserialnotoberesolved_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgPsnymResolutionReq_Police2RA::strpsnymsserialnotoberesolved() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  return strpsnymsserialnotoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgPsnymResolutionReq_Police2RA::mutable_strpsnymsserialnotoberesolved() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionReq_Police2RA.strPsnymsSerialNoToBeResolved)
  return &strpsnymsserialnotoberesolved_;
}

// required int32 iPoliceId = 5 [default = -1];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgPsnymResolutionReq_Police2RA::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ipoliceid_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.iPoliceId)
}

// required int32 iRAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionReq_Police2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.iRAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionReq_Police2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_Police2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  inonce_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionReq_Police2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_Police2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_Police2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionReq_Police2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionReq_Police2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_Police2RA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgPsnymResolutionReq_Police2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_Police2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionReq_Police2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_Police2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_Police2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_Police2RA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionReq_Police2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_Police2RA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_Police2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_Police2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_Police2RA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_Police2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_Police2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_Police2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionReq_Police2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_Police2RA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionReq_RA2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_RA2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_RA2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionReq_RA2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2PCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionReq_RA2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2PCA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_RA2PCA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_RA2PCA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.uiNoOfPsnymsToBeResolved)
}

// repeated string strPsnymsSerialNoToBeResolved = 4;
inline int msgPsnymResolutionReq_RA2PCA::_internal_strpsnymsserialnotoberesolved_size() const {
  return strpsnymsserialnotoberesolved_.size();
}
inline int msgPsnymResolutionReq_RA2PCA::strpsnymsserialnotoberesolved_size() const {
  return _internal_strpsnymsserialnotoberesolved_size();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_strpsnymsserialnotoberesolved() {
  strpsnymsserialnotoberesolved_.Clear();
}
inline std::string* msgPsnymResolutionReq_RA2PCA::add_strpsnymsserialnotoberesolved() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  return _internal_add_strpsnymsserialnotoberesolved();
}
inline const std::string& msgPsnymResolutionReq_RA2PCA::_internal_strpsnymsserialnotoberesolved(int index) const {
  return strpsnymsserialnotoberesolved_.Get(index);
}
inline const std::string& msgPsnymResolutionReq_RA2PCA::strpsnymsserialnotoberesolved(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  return _internal_strpsnymsserialnotoberesolved(index);
}
inline std::string* msgPsnymResolutionReq_RA2PCA::mutable_strpsnymsserialnotoberesolved(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  return strpsnymsserialnotoberesolved_.Mutable(index);
}
inline void msgPsnymResolutionReq_RA2PCA::set_strpsnymsserialnotoberesolved(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(value);
}
inline void msgPsnymResolutionReq_RA2PCA::set_strpsnymsserialnotoberesolved(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(std::move(value));
}
inline void msgPsnymResolutionReq_RA2PCA::set_strpsnymsserialnotoberesolved(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_RA2PCA::set_strpsnymsserialnotoberesolved(int index, const char* value, size_t size) {
  strpsnymsserialnotoberesolved_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline std::string* msgPsnymResolutionReq_RA2PCA::_internal_add_strpsnymsserialnotoberesolved() {
  return strpsnymsserialnotoberesolved_.Add();
}
inline void msgPsnymResolutionReq_RA2PCA::add_strpsnymsserialnotoberesolved(const std::string& value) {
  strpsnymsserialnotoberesolved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_RA2PCA::add_strpsnymsserialnotoberesolved(std::string&& value) {
  strpsnymsserialnotoberesolved_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_RA2PCA::add_strpsnymsserialnotoberesolved(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymsserialnotoberesolved_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline void msgPsnymResolutionReq_RA2PCA::add_strpsnymsserialnotoberesolved(const char* value, size_t size) {
  strpsnymsserialnotoberesolved_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgPsnymResolutionReq_RA2PCA::strpsnymsserialnotoberesolved() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  return strpsnymsserialnotoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgPsnymResolutionReq_RA2PCA::mutable_strpsnymsserialnotoberesolved() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionReq_RA2PCA.strPsnymsSerialNoToBeResolved)
  return &strpsnymsserialnotoberesolved_;
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.iRAIdRange)
}

// required int32 iPCAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ipcaidrange_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.iPCAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  inonce_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_RA2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_RA2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionReq_RA2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionReq_RA2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgPsnymResolutionReq_RA2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_RA2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionReq_RA2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_RA2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_RA2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2PCA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionReq_RA2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2PCA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2PCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionReq_RA2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2PCA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_PCA2RA_msgPsnymResolution

// required string strPsnymCertSerialNo = 1 [default = ""];
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strpsnymcertserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strpsnymcertserialno() const {
  return _internal_has_strpsnymcertserialno();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strpsnymcertserialno() {
  strpsnymcertserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::strpsnymcertserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  return _internal_strpsnymcertserialno();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const std::string& value) {
  _internal_set_strpsnymcertserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  return _internal_mutable_strpsnymcertserialno();
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strpsnymcertserialno() const {
  return strpsnymcertserialno_.Get();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strpsnymcertserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strpsnymcertserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcertserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  if (!_internal_has_strpsnymcertserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno) {
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcertserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strpsnymcertserialno(
    std::string* strpsnymcertserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcertserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}

// required string strTicketSerialNo = 2 [default = ""];
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000002u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}

// required string strTicketIdentifiableKey = 3 [default = ""];
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strticketidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strticketidentifiablekey() const {
  return _internal_has_strticketidentifiablekey();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strticketidentifiablekey() {
  strticketidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::strticketidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_strticketidentifiablekey();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const std::string& value) {
  _internal_set_strticketidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_mutable_strticketidentifiablekey();
}
inline const std::string& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strticketidentifiablekey() const {
  return strticketidentifiablekey_.Get();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strticketidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strticketidentifiablekey() {
  _has_bits_[0] |= 0x00000004u;
  return strticketidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  if (!_internal_has_strticketidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey) {
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketidentifiablekey(
    std::string* strticketidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}

// required .interfaces.msgError stErrInfo = 4;
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.stErrInfo)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000008u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution.stErrInfo)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_PCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_PCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_PCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_PCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_PCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_PCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_PCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionRes_PCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_PCA2RA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_PCA2RA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.uiNoOfPsnymsToBeResolved)
}

// repeated .interfaces.msgPsnymResolutionRes_PCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 4;
inline int msgPsnymResolutionRes_PCA2RA::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgPsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* msgPsnymResolutionRes_PCA2RA::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution >*
msgPsnymResolutionRes_PCA2RA::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& msgPsnymResolutionRes_PCA2RA::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution& msgPsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* msgPsnymResolutionRes_PCA2RA::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution* msgPsnymResolutionRes_PCA2RA::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_PCA2RA_msgPsnymResolution >&
msgPsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.iRAIdRange)
}

// required int32 iPCAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipcaidrange_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.iPCAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_PCA2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_PCA2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_PCA2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionRes_PCA2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionRes_PCA2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_PCA2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 9;
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_PCA2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_PCA2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_PCA2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_PCA2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgPsnymResolutionRes_PCA2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_PCA2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionRes_PCA2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_PCA2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_PCA2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_PCA2RA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_PCA2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_PCA2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_PCA2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_PCA2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_PCA2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_PCA2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionRes_PCA2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_PCA2RA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketSerialNo)
}

// required string strTicketIdentifiableKey = 2 [default = ""];
inline bool msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_has_strticketidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::has_strticketidentifiablekey() const {
  return _internal_has_strticketidentifiablekey();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::clear_strticketidentifiablekey() {
  strticketidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::strticketidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_strticketidentifiablekey();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketidentifiablekey(const std::string& value) {
  _internal_set_strticketidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::mutable_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_mutable_strticketidentifiablekey();
}
inline const std::string& msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_strticketidentifiablekey() const {
  return strticketidentifiablekey_.Get();
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_set_strticketidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_strticketidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::_internal_mutable_strticketidentifiablekey() {
  _has_bits_[0] |= 0x00000002u;
  return strticketidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
  if (!_internal_has_strticketidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticketidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey) {
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::unsafe_arena_release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticketidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution::unsafe_arena_set_allocated_strticketidentifiablekey(
    std::string* strticketidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution.strTicketIdentifiableKey)
}

// -------------------------------------------------------------------

// msgPsnymResolutionReq_RA2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_RA2LTCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionReq_RA2LTCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionReq_RA2LTCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2LTCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2LTCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2LTCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2LTCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionReq_RA2LTCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2LTCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionReq_RA2LTCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_RA2LTCA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionReq_RA2LTCA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.uiNoOfPsnymsToBeResolved)
}

// repeated .interfaces.msgPsnymResolutionReq_RA2LTCA.msgPsnymResolution pstPsnymResolutionInfo = 4;
inline int msgPsnymResolutionReq_RA2LTCA::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgPsnymResolutionReq_RA2LTCA::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* msgPsnymResolutionReq_RA2LTCA::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2LTCA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution >*
msgPsnymResolutionReq_RA2LTCA::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionReq_RA2LTCA.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& msgPsnymResolutionReq_RA2LTCA::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution& msgPsnymResolutionReq_RA2LTCA::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* msgPsnymResolutionReq_RA2LTCA::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution* msgPsnymResolutionReq_RA2LTCA::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionReq_RA2LTCA.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionReq_RA2LTCA_msgPsnymResolution >&
msgPsnymResolutionReq_RA2LTCA::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionReq_RA2LTCA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.iRAIdRange)
}

// required int32 iLTCAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iltcaidrange_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.iLTCAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionReq_RA2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  inonce_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_RA2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionReq_RA2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionReq_RA2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionReq_RA2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionReq_RA2LTCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgPsnymResolutionReq_RA2LTCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionReq_RA2LTCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionReq_RA2LTCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_RA2LTCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionReq_RA2LTCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionReq_RA2LTCA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionReq_RA2LTCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2LTCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2LTCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionReq_RA2LTCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2LTCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionReq_RA2LTCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionReq_RA2LTCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionReq_RA2LTCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionReq_RA2LTCA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketSerialNo)
}

// required string strVehX509CertSerialNo = 2 [default = ""];
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_has_strvehx509certserialno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::has_strvehx509certserialno() const {
  return _internal_has_strvehx509certserialno();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::clear_strvehx509certserialno() {
  strvehx509certserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::strvehx509certserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
  return _internal_strvehx509certserialno();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strvehx509certserialno(const std::string& value) {
  _internal_set_strvehx509certserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::mutable_strvehx509certserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
  return _internal_mutable_strvehx509certserialno();
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_strvehx509certserialno() const {
  return strvehx509certserialno_.Get();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_set_strvehx509certserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strvehx509certserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strvehx509certserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strvehx509certserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_mutable_strvehx509certserialno() {
  _has_bits_[0] |= 0x00000002u;
  return strvehx509certserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
  if (!_internal_has_strvehx509certserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strvehx509certserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_allocated_strvehx509certserialno(std::string* strvehx509certserialno) {
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strvehx509certserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strvehx509certserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strvehx509certserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strvehx509certserialno(
    std::string* strvehx509certserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strvehx509certserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strvehx509certserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strVehX509CertSerialNo)
}

// required string strTicketIdentifiableKey = 3 [default = ""];
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_has_strticketidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::has_strticketidentifiablekey() const {
  return _internal_has_strticketidentifiablekey();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::clear_strticketidentifiablekey() {
  strticketidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::strticketidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_strticketidentifiablekey();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const std::string& value) {
  _internal_set_strticketidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::mutable_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_mutable_strticketidentifiablekey();
}
inline const std::string& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_strticketidentifiablekey() const {
  return strticketidentifiablekey_.Get();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_set_strticketidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_mutable_strticketidentifiablekey() {
  _has_bits_[0] |= 0x00000004u;
  return strticketidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  if (!_internal_has_strticketidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey) {
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketidentifiablekey(
    std::string* strticketidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}

// required .interfaces.msgError stErrInfo = 5;
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.stErrInfo)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000008u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution.stErrInfo)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_LTCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_LTCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_LTCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_LTCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_LTCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_LTCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_LTCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionRes_LTCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_LTCA2RA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_LTCA2RA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.uiNoOfPsnymsToBeResolved)
}

// repeated .interfaces.msgPsnymResolutionRes_LTCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 4;
inline int msgPsnymResolutionRes_LTCA2RA::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgPsnymResolutionRes_LTCA2RA::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* msgPsnymResolutionRes_LTCA2RA::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution >*
msgPsnymResolutionRes_LTCA2RA::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionRes_LTCA2RA.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& msgPsnymResolutionRes_LTCA2RA::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution& msgPsnymResolutionRes_LTCA2RA::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* msgPsnymResolutionRes_LTCA2RA::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution* msgPsnymResolutionRes_LTCA2RA::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionRes_LTCA2RA.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_LTCA2RA_msgPsnymResolution >&
msgPsnymResolutionRes_LTCA2RA::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionRes_LTCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.iRAIdRange)
}

// required int32 iLTCAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iltcaidrange_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.iLTCAIdRange)
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_LTCA2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_LTCA2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_LTCA2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionRes_LTCA2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionRes_LTCA2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_LTCA2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 9;
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_LTCA2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_LTCA2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_LTCA2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_LTCA2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgPsnymResolutionRes_LTCA2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_LTCA2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionRes_LTCA2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_LTCA2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_LTCA2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_LTCA2RA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_LTCA2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_LTCA2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_LTCA2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_LTCA2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_LTCA2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_LTCA2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionRes_LTCA2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_LTCA2RA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_RA2Police_msgPsnymResolution

// required string strPsnymSerialNo = 1 [default = ""];
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_has_strpsnymserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::has_strpsnymserialno() const {
  return _internal_has_strpsnymserialno();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::clear_strpsnymserialno() {
  strpsnymserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::strpsnymserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
  return _internal_strpsnymserialno();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymserialno(const std::string& value) {
  _internal_set_strpsnymserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::mutable_strpsnymserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
  return _internal_mutable_strpsnymserialno();
}
inline const std::string& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_strpsnymserialno() const {
  return strpsnymserialno_.Get();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_set_strpsnymserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_mutable_strpsnymserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::release_strpsnymserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
  if (!_internal_has_strpsnymserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_allocated_strpsnymserialno(std::string* strpsnymserialno) {
  if (strpsnymserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_release_strpsnymserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_set_allocated_strpsnymserialno(
    std::string* strpsnymserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymSerialNo)
}

// required string strVehX509CertSerialNo = 2 [default = ""];
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_has_strvehx509certserialno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::has_strvehx509certserialno() const {
  return _internal_has_strvehx509certserialno();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::clear_strvehx509certserialno() {
  strvehx509certserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::strvehx509certserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
  return _internal_strvehx509certserialno();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strvehx509certserialno(const std::string& value) {
  _internal_set_strvehx509certserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::mutable_strvehx509certserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
  return _internal_mutable_strvehx509certserialno();
}
inline const std::string& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_strvehx509certserialno() const {
  return strvehx509certserialno_.Get();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_set_strvehx509certserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strvehx509certserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strvehx509certserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_strvehx509certserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_mutable_strvehx509certserialno() {
  _has_bits_[0] |= 0x00000002u;
  return strvehx509certserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
  if (!_internal_has_strvehx509certserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strvehx509certserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_allocated_strvehx509certserialno(std::string* strvehx509certserialno) {
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strvehx509certserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strvehx509certserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}
inline std::string* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strvehx509certserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_set_allocated_strvehx509certserialno(
    std::string* strvehx509certserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strvehx509certserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strvehx509certserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.strVehX509CertSerialNo)
}

// required .interfaces.msgError stErrInfo = 3;
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police_msgPsnymResolution::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_RA2Police_msgPsnymResolution::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police_msgPsnymResolution::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police_msgPsnymResolution::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution.stErrInfo)
}

// -------------------------------------------------------------------

// msgPsnymResolutionRes_RA2Police

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionRes_RA2Police::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionRes_RA2Police::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_RA2Police::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionRes_RA2Police::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_RA2Police::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_RA2Police::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_RA2Police::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionRes_RA2Police::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionRes_RA2Police::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_RA2Police::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_RA2Police::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionRes_RA2Police::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.uiNoOfPsnymsToBeResolved)
}

// repeated .interfaces.msgPsnymResolutionRes_RA2Police.msgPsnymResolution pstPsnymResolutionInfo = 4;
inline int msgPsnymResolutionRes_RA2Police::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgPsnymResolutionRes_RA2Police::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgPsnymResolutionRes_RA2Police::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* msgPsnymResolutionRes_RA2Police::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution >*
msgPsnymResolutionRes_RA2Police::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution& msgPsnymResolutionRes_RA2Police::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution& msgPsnymResolutionRes_RA2Police::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* msgPsnymResolutionRes_RA2Police::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution* msgPsnymResolutionRes_RA2Police::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgPsnymResolutionRes_RA2Police_msgPsnymResolution >&
msgPsnymResolutionRes_RA2Police::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionRes_RA2Police::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iRAIdRange)
}

// required int32 iLTCAIdRange = 6 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgPsnymResolutionRes_RA2Police::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iltcaidrange_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iLTCAIdRange)
}

// required int32 iPCAIdRange = 7 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgPsnymResolutionRes_RA2Police::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipcaidrange_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iPCAIdRange)
}

// required int32 iPoliceId = 8 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgPsnymResolutionRes_RA2Police::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  ipoliceid_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iPoliceId)
}

// required int32 iNonce = 9 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionRes_RA2Police::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionRes_RA2Police::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  inonce_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.iNonce)
}

// required int64 tTimeStamp = 10 [default = -1];
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionRes_RA2Police::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_RA2Police::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionRes_RA2Police::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionRes_RA2Police::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionRes_RA2Police::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionRes_RA2Police.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 11;
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_RA2Police::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionRes_RA2Police::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionRes_RA2Police::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionRes_RA2Police::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 12;
inline bool msgPsnymResolutionRes_RA2Police::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionRes_RA2Police::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionRes_RA2Police::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_RA2Police::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionRes_RA2Police::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionRes_RA2Police.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_RA2Police::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_RA2Police::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionRes_RA2Police.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_RA2Police::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionRes_RA2Police::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionRes_RA2Police.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionRes_RA2Police::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionRes_RA2Police.stSign)
}

// -------------------------------------------------------------------

// msgPsnymResolutionAck_Police2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymResolutionAck_Police2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymResolutionAck_Police2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionAck_Police2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymResolutionAck_Police2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymResolutionAck_Police2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionAck_Police2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionAck_Police2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionAck_Police2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionAck_Police2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymResolutionAck_Police2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionAck_Police2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymResolutionAck_Police2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stSigner)
}

// required uint32 uiNoOfPsnymsToBeResolved = 3 [default = 0];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_uinoofpsnymstoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_uinoofpsnymstoberesolved() const {
  return _internal_has_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionAck_Police2RA::clear_uinoofpsnymstoberesolved() {
  uinoofpsnymstoberesolved_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionAck_Police2RA::_internal_uinoofpsnymstoberesolved() const {
  return uinoofpsnymstoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymResolutionAck_Police2RA::uinoofpsnymstoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.uiNoOfPsnymsToBeResolved)
  return _internal_uinoofpsnymstoberesolved();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofpsnymstoberesolved_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_uinoofpsnymstoberesolved(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofpsnymstoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.uiNoOfPsnymsToBeResolved)
}

// required int32 iPoliceId = 4 [default = -1];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgPsnymResolutionAck_Police2RA::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ipoliceid_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.iPoliceId)
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgPsnymResolutionAck_Police2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraidrange_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.iRAIdRange)
}

// repeated .interfaces.msgError pstPsnymResolutionErrInfo = 6;
inline int msgPsnymResolutionAck_Police2RA::_internal_pstpsnymresolutionerrinfo_size() const {
  return pstpsnymresolutionerrinfo_.size();
}
inline int msgPsnymResolutionAck_Police2RA::pstpsnymresolutionerrinfo_size() const {
  return _internal_pstpsnymresolutionerrinfo_size();
}
inline void msgPsnymResolutionAck_Police2RA::clear_pstpsnymresolutionerrinfo() {
  pstpsnymresolutionerrinfo_.Clear();
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::mutable_pstpsnymresolutionerrinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionAck_Police2RA.pstPsnymResolutionErrInfo)
  return pstpsnymresolutionerrinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >*
msgPsnymResolutionAck_Police2RA::mutable_pstpsnymresolutionerrinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgPsnymResolutionAck_Police2RA.pstPsnymResolutionErrInfo)
  return &pstpsnymresolutionerrinfo_;
}
inline const ::interfaces::msgError& msgPsnymResolutionAck_Police2RA::_internal_pstpsnymresolutionerrinfo(int index) const {
  return pstpsnymresolutionerrinfo_.Get(index);
}
inline const ::interfaces::msgError& msgPsnymResolutionAck_Police2RA::pstpsnymresolutionerrinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.pstPsnymResolutionErrInfo)
  return _internal_pstpsnymresolutionerrinfo(index);
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::_internal_add_pstpsnymresolutionerrinfo() {
  return pstpsnymresolutionerrinfo_.Add();
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::add_pstpsnymresolutionerrinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgPsnymResolutionAck_Police2RA.pstPsnymResolutionErrInfo)
  return _internal_add_pstpsnymresolutionerrinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >&
msgPsnymResolutionAck_Police2RA::pstpsnymresolutionerrinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgPsnymResolutionAck_Police2RA.pstPsnymResolutionErrInfo)
  return pstpsnymresolutionerrinfo_;
}

// required int32 iNonce = 7 [default = -1];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymResolutionAck_Police2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymResolutionAck_Police2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymResolutionAck_Police2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionAck_Police2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymResolutionAck_Police2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymResolutionAck_Police2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgPsnymResolutionAck_Police2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymResolutionAck_Police2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 9;
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymResolutionAck_Police2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymResolutionAck_Police2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymResolutionAck_Police2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymResolutionAck_Police2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionAck_Police2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymResolutionAck_Police2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionAck_Police2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymResolutionAck_Police2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgPsnymResolutionAck_Police2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymResolutionAck_Police2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymResolutionAck_Police2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymResolutionAck_Police2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymResolutionAck_Police2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymResolutionAck_Police2RA.stSign)
  return _internal_stsign();
}
inline void msgPsnymResolutionAck_Police2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymResolutionAck_Police2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionAck_Police2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymResolutionAck_Police2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymResolutionAck_Police2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymResolutionAck_Police2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymResolutionAck_Police2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymResolutionAck_Police2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymResolutionAck_Police2RA.stSign)
}

// -------------------------------------------------------------------

// msgBanTicketsReq_Police2RA_msgBannedTickets

// required string strSerialNo = 1 [default = ""];
inline bool msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_has_strserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA_msgBannedTickets::has_strserialno() const {
  return _internal_has_strserialno();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::clear_strserialno() {
  strserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgBanTicketsReq_Police2RA_msgBannedTickets::strserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
  return _internal_strserialno();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strserialno(const std::string& value) {
  _internal_set_strserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::mutable_strserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
  return _internal_mutable_strserialno();
}
inline const std::string& msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_strserialno() const {
  return strserialno_.Get();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_set_strserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_mutable_strserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::release_strserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
  if (!_internal_has_strserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_allocated_strserialno(std::string* strserialno) {
  if (strserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::unsafe_arena_release_strserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::unsafe_arena_set_allocated_strserialno(
    std::string* strserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strSerialNo)
}

// required string strTicket = 2 [default = ""];
inline bool msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA_msgBannedTickets::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgBanTicketsReq_Police2RA_msgBannedTickets::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
  return _internal_strticket();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000002u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_Police2RA_msgBannedTickets::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsReq_Police2RA_msgBannedTickets::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets.strTicket)
}

// -------------------------------------------------------------------

// msgBanTicketsReq_Police2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgBanTicketsReq_Police2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgBanTicketsReq_Police2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgBanTicketsReq_Police2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgBanTicketsReq_Police2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsReq_Police2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsReq_Police2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.stSigner)
  return _internal_stsigner();
}
inline void msgBanTicketsReq_Police2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_Police2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_Police2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_Police2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_Police2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_Police2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_Police2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_Police2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgBanTicketsReq_Police2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_Police2RA.stSigner)
}

// required uint32 chPolicyId = 3 [default = 0];
inline bool msgBanTicketsReq_Police2RA::_internal_has_chpolicyid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_chpolicyid() const {
  return _internal_has_chpolicyid();
}
inline void msgBanTicketsReq_Police2RA::clear_chpolicyid() {
  chpolicyid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_Police2RA::_internal_chpolicyid() const {
  return chpolicyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_Police2RA::chpolicyid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.chPolicyId)
  return _internal_chpolicyid();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  chpolicyid_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chpolicyid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.chPolicyId)
}

// required uint32 uiNoOfTicketsToBeBanned = 4 [default = 0];
inline bool msgBanTicketsReq_Police2RA::_internal_has_uinoofticketstobebanned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_uinoofticketstobebanned() const {
  return _internal_has_uinoofticketstobebanned();
}
inline void msgBanTicketsReq_Police2RA::clear_uinoofticketstobebanned() {
  uinoofticketstobebanned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_Police2RA::_internal_uinoofticketstobebanned() const {
  return uinoofticketstobebanned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_Police2RA::uinoofticketstobebanned() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.uiNoOfTicketsToBeBanned)
  return _internal_uinoofticketstobebanned();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofticketstobebanned_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofticketstobebanned(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.uiNoOfTicketsToBeBanned)
}

// repeated .interfaces.msgBanTicketsReq_Police2RA.msgBannedTickets pstBannedTicketsInfo = 5;
inline int msgBanTicketsReq_Police2RA::_internal_pstbannedticketsinfo_size() const {
  return pstbannedticketsinfo_.size();
}
inline int msgBanTicketsReq_Police2RA::pstbannedticketsinfo_size() const {
  return _internal_pstbannedticketsinfo_size();
}
inline void msgBanTicketsReq_Police2RA::clear_pstbannedticketsinfo() {
  pstbannedticketsinfo_.Clear();
}
inline ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* msgBanTicketsReq_Police2RA::mutable_pstbannedticketsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_Police2RA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets >*
msgBanTicketsReq_Police2RA::mutable_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgBanTicketsReq_Police2RA.pstBannedTicketsInfo)
  return &pstbannedticketsinfo_;
}
inline const ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets& msgBanTicketsReq_Police2RA::_internal_pstbannedticketsinfo(int index) const {
  return pstbannedticketsinfo_.Get(index);
}
inline const ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets& msgBanTicketsReq_Police2RA::pstbannedticketsinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.pstBannedTicketsInfo)
  return _internal_pstbannedticketsinfo(index);
}
inline ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* msgBanTicketsReq_Police2RA::_internal_add_pstbannedticketsinfo() {
  return pstbannedticketsinfo_.Add();
}
inline ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets* msgBanTicketsReq_Police2RA::add_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgBanTicketsReq_Police2RA.pstBannedTicketsInfo)
  return _internal_add_pstbannedticketsinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_Police2RA_msgBannedTickets >&
msgBanTicketsReq_Police2RA::pstbannedticketsinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgBanTicketsReq_Police2RA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_;
}

// required int32 iPoliceId = 6 [default = -1];
inline bool msgBanTicketsReq_Police2RA::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgBanTicketsReq_Police2RA::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ipoliceid_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.iPoliceId)
}

// required int32 iRAIdRange = 7 [default = -1];
inline bool msgBanTicketsReq_Police2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgBanTicketsReq_Police2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraidrange_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.iRAIdRange)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgBanTicketsReq_Police2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgBanTicketsReq_Police2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_Police2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.iNonce)
  return _internal_inonce();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgBanTicketsReq_Police2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgBanTicketsReq_Police2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsReq_Police2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsReq_Police2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgBanTicketsReq_Police2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgBanTicketsReq_Police2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_Police2RA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgBanTicketsReq_Police2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgBanTicketsReq_Police2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgBanTicketsReq_Police2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgBanTicketsReq_Police2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgBanTicketsReq_Police2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_Police2RA.stSign)
  return _internal_stsign();
}
inline void msgBanTicketsReq_Police2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_Police2RA.stSign)
}
inline ::interfaces::msgSignature* msgBanTicketsReq_Police2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_Police2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_Police2RA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_Police2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_Police2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_Police2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgBanTicketsReq_Police2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_Police2RA.stSign)
}

// -------------------------------------------------------------------

// msgBanTicketsReq_RA2PCA_msgBannedTickets

// required string strSerialNo = 1 [default = ""];
inline bool msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_has_strserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA_msgBannedTickets::has_strserialno() const {
  return _internal_has_strserialno();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::clear_strserialno() {
  strserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgBanTicketsReq_RA2PCA_msgBannedTickets::strserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
  return _internal_strserialno();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strserialno(const std::string& value) {
  _internal_set_strserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::mutable_strserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
  return _internal_mutable_strserialno();
}
inline const std::string& msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_strserialno() const {
  return strserialno_.Get();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_set_strserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_mutable_strserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::release_strserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
  if (!_internal_has_strserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_allocated_strserialno(std::string* strserialno) {
  if (strserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::unsafe_arena_release_strserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::unsafe_arena_set_allocated_strserialno(
    std::string* strserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strSerialNo)
}

// required string strTicket = 2 [default = ""];
inline bool msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA_msgBannedTickets::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgBanTicketsReq_RA2PCA_msgBannedTickets::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
  return _internal_strticket();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000002u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsReq_RA2PCA_msgBannedTickets::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsReq_RA2PCA_msgBannedTickets::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets.strTicket)
}

// -------------------------------------------------------------------

// msgBanTicketsReq_RA2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgBanTicketsReq_RA2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgBanTicketsReq_RA2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgBanTicketsReq_RA2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsReq_RA2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsReq_RA2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgBanTicketsReq_RA2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_RA2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_RA2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_RA2PCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_RA2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsReq_RA2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_RA2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgBanTicketsReq_RA2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.stSigner)
}

// required uint32 chPolicyId = 3 [default = 0];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_chpolicyid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_chpolicyid() const {
  return _internal_has_chpolicyid();
}
inline void msgBanTicketsReq_RA2PCA::clear_chpolicyid() {
  chpolicyid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_RA2PCA::_internal_chpolicyid() const {
  return chpolicyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_RA2PCA::chpolicyid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.chPolicyId)
  return _internal_chpolicyid();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  chpolicyid_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_chpolicyid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chpolicyid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.chPolicyId)
}

// required uint32 uiNoOfTicketsToBeBanned = 4 [default = 0];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_uinoofticketstobebanned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_uinoofticketstobebanned() const {
  return _internal_has_uinoofticketstobebanned();
}
inline void msgBanTicketsReq_RA2PCA::clear_uinoofticketstobebanned() {
  uinoofticketstobebanned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_RA2PCA::_internal_uinoofticketstobebanned() const {
  return uinoofticketstobebanned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsReq_RA2PCA::uinoofticketstobebanned() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.uiNoOfTicketsToBeBanned)
  return _internal_uinoofticketstobebanned();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofticketstobebanned_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofticketstobebanned(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.uiNoOfTicketsToBeBanned)
}

// repeated .interfaces.msgBanTicketsReq_RA2PCA.msgBannedTickets pstBannedTicketsInfo = 5;
inline int msgBanTicketsReq_RA2PCA::_internal_pstbannedticketsinfo_size() const {
  return pstbannedticketsinfo_.size();
}
inline int msgBanTicketsReq_RA2PCA::pstbannedticketsinfo_size() const {
  return _internal_pstbannedticketsinfo_size();
}
inline void msgBanTicketsReq_RA2PCA::clear_pstbannedticketsinfo() {
  pstbannedticketsinfo_.Clear();
}
inline ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* msgBanTicketsReq_RA2PCA::mutable_pstbannedticketsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_RA2PCA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets >*
msgBanTicketsReq_RA2PCA::mutable_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgBanTicketsReq_RA2PCA.pstBannedTicketsInfo)
  return &pstbannedticketsinfo_;
}
inline const ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets& msgBanTicketsReq_RA2PCA::_internal_pstbannedticketsinfo(int index) const {
  return pstbannedticketsinfo_.Get(index);
}
inline const ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets& msgBanTicketsReq_RA2PCA::pstbannedticketsinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.pstBannedTicketsInfo)
  return _internal_pstbannedticketsinfo(index);
}
inline ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* msgBanTicketsReq_RA2PCA::_internal_add_pstbannedticketsinfo() {
  return pstbannedticketsinfo_.Add();
}
inline ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets* msgBanTicketsReq_RA2PCA::add_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgBanTicketsReq_RA2PCA.pstBannedTicketsInfo)
  return _internal_add_pstbannedticketsinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsReq_RA2PCA_msgBannedTickets >&
msgBanTicketsReq_RA2PCA::pstbannedticketsinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgBanTicketsReq_RA2PCA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_;
}

// required int32 iRAIdRange = 6 [default = -1];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgBanTicketsReq_RA2PCA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iraidrange_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.iRAIdRange)
}

// required int32 iLTCAIdRange = 7 [default = -1];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgBanTicketsReq_RA2PCA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iltcaidrange_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.iLTCAIdRange)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgBanTicketsReq_RA2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsReq_RA2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.iNonce)
  return _internal_inonce();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgBanTicketsReq_RA2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgBanTicketsReq_RA2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsReq_RA2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsReq_RA2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgBanTicketsReq_RA2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgBanTicketsReq_RA2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsReq_RA2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgBanTicketsReq_RA2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgBanTicketsReq_RA2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgBanTicketsReq_RA2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgBanTicketsReq_RA2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgBanTicketsReq_RA2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsReq_RA2PCA.stSign)
  return _internal_stsign();
}
inline void msgBanTicketsReq_RA2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.stSign)
}
inline ::interfaces::msgSignature* msgBanTicketsReq_RA2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_RA2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsReq_RA2PCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_RA2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgBanTicketsReq_RA2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsReq_RA2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgBanTicketsReq_RA2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsReq_RA2PCA.stSign)
}

// -------------------------------------------------------------------

// msgBanTicketsRes_PCA2RA_msgBannedTickets

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA_msgBannedTickets::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgBanTicketsRes_PCA2RA_msgBannedTickets::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_PCA2RA_msgBannedTickets::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsRes_PCA2RA_msgBannedTickets::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_PCA2RA_msgBannedTickets::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.strTicketSerialNo)
}

// required .interfaces.msgError stErrInfo = 2;
inline bool msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_PCA2RA_msgBannedTickets::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgBanTicketsRes_PCA2RA_msgBannedTickets::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.stErrInfo)
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA_msgBannedTickets::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA_msgBannedTickets::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA_msgBannedTickets::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA_msgBannedTickets::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA_msgBannedTickets::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets.stErrInfo)
}

// -------------------------------------------------------------------

// msgBanTicketsRes_PCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgBanTicketsRes_PCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgBanTicketsRes_PCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgBanTicketsRes_PCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsRes_PCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsRes_PCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgBanTicketsRes_PCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_PCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_PCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_PCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_PCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_PCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgBanTicketsRes_PCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stSigner)
}

// required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_uinoofticketstobebanned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_uinoofticketstobebanned() const {
  return _internal_has_uinoofticketstobebanned();
}
inline void msgBanTicketsRes_PCA2RA::clear_uinoofticketstobebanned() {
  uinoofticketstobebanned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_PCA2RA::_internal_uinoofticketstobebanned() const {
  return uinoofticketstobebanned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_PCA2RA::uinoofticketstobebanned() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.uiNoOfTicketsToBeBanned)
  return _internal_uinoofticketstobebanned();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofticketstobebanned_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofticketstobebanned(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.uiNoOfTicketsToBeBanned)
}

// required uint32 uiNoOfSuccessfullyBannedTickets = 4 [default = 0];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_uinoofsuccessfullybannedtickets() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_uinoofsuccessfullybannedtickets() const {
  return _internal_has_uinoofsuccessfullybannedtickets();
}
inline void msgBanTicketsRes_PCA2RA::clear_uinoofsuccessfullybannedtickets() {
  uinoofsuccessfullybannedtickets_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_PCA2RA::_internal_uinoofsuccessfullybannedtickets() const {
  return uinoofsuccessfullybannedtickets_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_PCA2RA::uinoofsuccessfullybannedtickets() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.uiNoOfSuccessfullyBannedTickets)
  return _internal_uinoofsuccessfullybannedtickets();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uinoofsuccessfullybannedtickets_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullybannedtickets(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.uiNoOfSuccessfullyBannedTickets)
}

// repeated .interfaces.msgBanTicketsRes_PCA2RA.msgBannedTickets pstBannedTicketsInfo = 5;
inline int msgBanTicketsRes_PCA2RA::_internal_pstbannedticketsinfo_size() const {
  return pstbannedticketsinfo_.size();
}
inline int msgBanTicketsRes_PCA2RA::pstbannedticketsinfo_size() const {
  return _internal_pstbannedticketsinfo_size();
}
inline void msgBanTicketsRes_PCA2RA::clear_pstbannedticketsinfo() {
  pstbannedticketsinfo_.Clear();
}
inline ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* msgBanTicketsRes_PCA2RA::mutable_pstbannedticketsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets >*
msgBanTicketsRes_PCA2RA::mutable_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgBanTicketsRes_PCA2RA.pstBannedTicketsInfo)
  return &pstbannedticketsinfo_;
}
inline const ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets& msgBanTicketsRes_PCA2RA::_internal_pstbannedticketsinfo(int index) const {
  return pstbannedticketsinfo_.Get(index);
}
inline const ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets& msgBanTicketsRes_PCA2RA::pstbannedticketsinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.pstBannedTicketsInfo)
  return _internal_pstbannedticketsinfo(index);
}
inline ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* msgBanTicketsRes_PCA2RA::_internal_add_pstbannedticketsinfo() {
  return pstbannedticketsinfo_.Add();
}
inline ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets* msgBanTicketsRes_PCA2RA::add_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgBanTicketsRes_PCA2RA.pstBannedTicketsInfo)
  return _internal_add_pstbannedticketsinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_PCA2RA_msgBannedTickets >&
msgBanTicketsRes_PCA2RA::pstbannedticketsinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgBanTicketsRes_PCA2RA.pstBannedTicketsInfo)
  return pstbannedticketsinfo_;
}

// required int32 iRAIdRange = 6 [default = -1];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgBanTicketsRes_PCA2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraidrange_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.iRAIdRange)
}

// required int32 iLTCAIdRange = 7 [default = -1];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgBanTicketsRes_PCA2RA::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iltcaidrange_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.iLTCAIdRange)
}

// required int32 iNonce = 8 [default = -1];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgBanTicketsRes_PCA2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_PCA2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.iNonce)
  return _internal_inonce();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  inonce_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.iNonce)
}

// required int64 tTimeStamp = 9 [default = -1];
inline bool msgBanTicketsRes_PCA2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgBanTicketsRes_PCA2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsRes_PCA2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsRes_PCA2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgBanTicketsRes_PCA2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  ttimestamp_ = value;
}
inline void msgBanTicketsRes_PCA2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_PCA2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 10;
inline bool msgBanTicketsRes_PCA2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgBanTicketsRes_PCA2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgBanTicketsRes_PCA2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stErrInfo)
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_PCA2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgBanTicketsRes_PCA2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgBanTicketsRes_PCA2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 11;
inline bool msgBanTicketsRes_PCA2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_PCA2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgBanTicketsRes_PCA2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgBanTicketsRes_PCA2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgBanTicketsRes_PCA2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_PCA2RA.stSign)
  return _internal_stsign();
}
inline void msgBanTicketsRes_PCA2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stSign)
}
inline ::interfaces::msgSignature* msgBanTicketsRes_PCA2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_PCA2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_PCA2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_PCA2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_PCA2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_PCA2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgBanTicketsRes_PCA2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_PCA2RA.stSign)
}

// -------------------------------------------------------------------

// msgBanTicketsRes_RA2Police_msgBannedTickets

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgBanTicketsRes_RA2Police_msgBannedTickets::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicketSerialNo)
}

// required int32 iTicketLen = 2 [default = -1];
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_has_iticketlen() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::has_iticketlen() const {
  return _internal_has_iticketlen();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::clear_iticketlen() {
  iticketlen_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_iticketlen() const {
  return iticketlen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police_msgBannedTickets::iticketlen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.iTicketLen)
  return _internal_iticketlen();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_set_iticketlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  iticketlen_ = value;
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_iticketlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iticketlen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.iTicketLen)
}

// required string strTicket = 3 [default = ""];
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgBanTicketsRes_RA2Police_msgBannedTickets::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
  return _internal_strticket();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000002u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}
inline std::string* msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.strTicket)
}

// required .interfaces.msgError stErrInfo = 4;
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_RA2Police_msgBannedTickets::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgError& msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgBanTicketsRes_RA2Police_msgBannedTickets::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.stErrInfo)
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police_msgBannedTickets::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police_msgBannedTickets::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.stErrInfo)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police_msgBannedTickets::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000004u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police_msgBannedTickets::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police_msgBannedTickets::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets.stErrInfo)
}

// -------------------------------------------------------------------

// msgBanTicketsRes_RA2Police

// required int32 iReqType = 1 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgBanTicketsRes_RA2Police::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iReqType)
  return _internal_ireqtype();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ireqtype_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgBanTicketsRes_RA2Police::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgBanTicketsRes_RA2Police::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsRes_RA2Police::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsRes_RA2Police::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.stSigner)
  return _internal_stsigner();
}
inline void msgBanTicketsRes_RA2Police::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stSigner)
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_RA2Police::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_RA2Police::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_RA2Police::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsRes_RA2Police::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgBanTicketsRes_RA2Police::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stSigner)
}

// required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
inline bool msgBanTicketsRes_RA2Police::_internal_has_uinoofticketstobebanned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_uinoofticketstobebanned() const {
  return _internal_has_uinoofticketstobebanned();
}
inline void msgBanTicketsRes_RA2Police::clear_uinoofticketstobebanned() {
  uinoofticketstobebanned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_RA2Police::_internal_uinoofticketstobebanned() const {
  return uinoofticketstobebanned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_RA2Police::uinoofticketstobebanned() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.uiNoOfTicketsToBeBanned)
  return _internal_uinoofticketstobebanned();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofticketstobebanned_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofticketstobebanned(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.uiNoOfTicketsToBeBanned)
}

// required uint32 uiNoOfSuccessfullyBannedTickets = 4 [default = 0];
inline bool msgBanTicketsRes_RA2Police::_internal_has_uinoofsuccessfullybannedtickets() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_uinoofsuccessfullybannedtickets() const {
  return _internal_has_uinoofsuccessfullybannedtickets();
}
inline void msgBanTicketsRes_RA2Police::clear_uinoofsuccessfullybannedtickets() {
  uinoofsuccessfullybannedtickets_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_RA2Police::_internal_uinoofsuccessfullybannedtickets() const {
  return uinoofsuccessfullybannedtickets_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsRes_RA2Police::uinoofsuccessfullybannedtickets() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.uiNoOfSuccessfullyBannedTickets)
  return _internal_uinoofsuccessfullybannedtickets();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uinoofsuccessfullybannedtickets_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_uinoofsuccessfullybannedtickets(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofsuccessfullybannedtickets(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.uiNoOfSuccessfullyBannedTickets)
}

// repeated .interfaces.msgBanTicketsRes_RA2Police.msgBannedTickets pstBannedTicketsInfo = 5;
inline int msgBanTicketsRes_RA2Police::_internal_pstbannedticketsinfo_size() const {
  return pstbannedticketsinfo_.size();
}
inline int msgBanTicketsRes_RA2Police::pstbannedticketsinfo_size() const {
  return _internal_pstbannedticketsinfo_size();
}
inline void msgBanTicketsRes_RA2Police::clear_pstbannedticketsinfo() {
  pstbannedticketsinfo_.Clear();
}
inline ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* msgBanTicketsRes_RA2Police::mutable_pstbannedticketsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.pstBannedTicketsInfo)
  return pstbannedticketsinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets >*
msgBanTicketsRes_RA2Police::mutable_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgBanTicketsRes_RA2Police.pstBannedTicketsInfo)
  return &pstbannedticketsinfo_;
}
inline const ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets& msgBanTicketsRes_RA2Police::_internal_pstbannedticketsinfo(int index) const {
  return pstbannedticketsinfo_.Get(index);
}
inline const ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets& msgBanTicketsRes_RA2Police::pstbannedticketsinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.pstBannedTicketsInfo)
  return _internal_pstbannedticketsinfo(index);
}
inline ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* msgBanTicketsRes_RA2Police::_internal_add_pstbannedticketsinfo() {
  return pstbannedticketsinfo_.Add();
}
inline ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets* msgBanTicketsRes_RA2Police::add_pstbannedticketsinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgBanTicketsRes_RA2Police.pstBannedTicketsInfo)
  return _internal_add_pstbannedticketsinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgBanTicketsRes_RA2Police_msgBannedTickets >&
msgBanTicketsRes_RA2Police::pstbannedticketsinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgBanTicketsRes_RA2Police.pstBannedTicketsInfo)
  return pstbannedticketsinfo_;
}

// required int32 iRAIdRange = 6 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgBanTicketsRes_RA2Police::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraidrange_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iRAIdRange)
}

// required int32 iLTCAIdRange = 7 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_iltcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_iltcaidrange() const {
  return _internal_has_iltcaidrange();
}
inline void msgBanTicketsRes_RA2Police::clear_iltcaidrange() {
  iltcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_iltcaidrange() const {
  return iltcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::iltcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iLTCAIdRange)
  return _internal_iltcaidrange();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  iltcaidrange_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_iltcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iLTCAIdRange)
}

// required int32 iPCAIdRange = 8 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgBanTicketsRes_RA2Police::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  ipcaidrange_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iPCAIdRange)
}

// required int32 iPoliceId = 9 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgBanTicketsRes_RA2Police::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  ipoliceid_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iPoliceId)
}

// required int32 iNonce = 10 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgBanTicketsRes_RA2Police::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsRes_RA2Police::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.iNonce)
  return _internal_inonce();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  inonce_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.iNonce)
}

// required int64 tTimeStamp = 11 [default = -1];
inline bool msgBanTicketsRes_RA2Police::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgBanTicketsRes_RA2Police::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsRes_RA2Police::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsRes_RA2Police::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgBanTicketsRes_RA2Police::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  ttimestamp_ = value;
}
inline void msgBanTicketsRes_RA2Police::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsRes_RA2Police.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 12;
inline bool msgBanTicketsRes_RA2Police::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgBanTicketsRes_RA2Police::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgBanTicketsRes_RA2Police::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stErrInfo)
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgBanTicketsRes_RA2Police::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgBanTicketsRes_RA2Police::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 13;
inline bool msgBanTicketsRes_RA2Police::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgBanTicketsRes_RA2Police::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgBanTicketsRes_RA2Police::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgBanTicketsRes_RA2Police::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgBanTicketsRes_RA2Police::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsRes_RA2Police.stSign)
  return _internal_stsign();
}
inline void msgBanTicketsRes_RA2Police::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stSign)
}
inline ::interfaces::msgSignature* msgBanTicketsRes_RA2Police::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_RA2Police::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsRes_RA2Police.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_RA2Police::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgBanTicketsRes_RA2Police::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsRes_RA2Police.stSign)
  return _internal_mutable_stsign();
}
inline void msgBanTicketsRes_RA2Police::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsRes_RA2Police.stSign)
}

// -------------------------------------------------------------------

// msgBanTicketsAck_Police2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgBanTicketsAck_Police2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgBanTicketsAck_Police2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgBanTicketsAck_Police2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgBanTicketsAck_Police2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsAck_Police2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgBanTicketsAck_Police2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.stSigner)
  return _internal_stsigner();
}
inline void msgBanTicketsAck_Police2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgBanTicketsAck_Police2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsAck_Police2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsAck_Police2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsAck_Police2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgBanTicketsAck_Police2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsAck_Police2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgBanTicketsAck_Police2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stSigner)
}

// required uint32 uiNoOfTicketsToBeBanned = 3 [default = 0];
inline bool msgBanTicketsAck_Police2RA::_internal_has_uinoofticketstobebanned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_uinoofticketstobebanned() const {
  return _internal_has_uinoofticketstobebanned();
}
inline void msgBanTicketsAck_Police2RA::clear_uinoofticketstobebanned() {
  uinoofticketstobebanned_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsAck_Police2RA::_internal_uinoofticketstobebanned() const {
  return uinoofticketstobebanned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgBanTicketsAck_Police2RA::uinoofticketstobebanned() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.uiNoOfTicketsToBeBanned)
  return _internal_uinoofticketstobebanned();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uinoofticketstobebanned_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_uinoofticketstobebanned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uinoofticketstobebanned(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.uiNoOfTicketsToBeBanned)
}

// required int32 iPoliceId = 4 [default = -1];
inline bool msgBanTicketsAck_Police2RA::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgBanTicketsAck_Police2RA::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  ipoliceid_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.iPoliceId)
}

// required int32 iRAIdRange = 5 [default = -1];
inline bool msgBanTicketsAck_Police2RA::_internal_has_iraidrange() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_iraidrange() const {
  return _internal_has_iraidrange();
}
inline void msgBanTicketsAck_Police2RA::clear_iraidrange() {
  iraidrange_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::_internal_iraidrange() const {
  return iraidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::iraidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.iRAIdRange)
  return _internal_iraidrange();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraidrange_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_iraidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.iRAIdRange)
}

// repeated .interfaces.msgError pstTicketErrInfo = 6;
inline int msgBanTicketsAck_Police2RA::_internal_pstticketerrinfo_size() const {
  return pstticketerrinfo_.size();
}
inline int msgBanTicketsAck_Police2RA::pstticketerrinfo_size() const {
  return _internal_pstticketerrinfo_size();
}
inline void msgBanTicketsAck_Police2RA::clear_pstticketerrinfo() {
  pstticketerrinfo_.Clear();
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::mutable_pstticketerrinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsAck_Police2RA.pstTicketErrInfo)
  return pstticketerrinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >*
msgBanTicketsAck_Police2RA::mutable_pstticketerrinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgBanTicketsAck_Police2RA.pstTicketErrInfo)
  return &pstticketerrinfo_;
}
inline const ::interfaces::msgError& msgBanTicketsAck_Police2RA::_internal_pstticketerrinfo(int index) const {
  return pstticketerrinfo_.Get(index);
}
inline const ::interfaces::msgError& msgBanTicketsAck_Police2RA::pstticketerrinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.pstTicketErrInfo)
  return _internal_pstticketerrinfo(index);
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::_internal_add_pstticketerrinfo() {
  return pstticketerrinfo_.Add();
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::add_pstticketerrinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgBanTicketsAck_Police2RA.pstTicketErrInfo)
  return _internal_add_pstticketerrinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgError >&
msgBanTicketsAck_Police2RA::pstticketerrinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgBanTicketsAck_Police2RA.pstTicketErrInfo)
  return pstticketerrinfo_;
}

// required int32 iNonce = 7 [default = -1];
inline bool msgBanTicketsAck_Police2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgBanTicketsAck_Police2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgBanTicketsAck_Police2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.iNonce)
  return _internal_inonce();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.iNonce)
}

// required int64 tTimeStamp = 8 [default = -1];
inline bool msgBanTicketsAck_Police2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgBanTicketsAck_Police2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsAck_Police2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgBanTicketsAck_Police2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgBanTicketsAck_Police2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgBanTicketsAck_Police2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgBanTicketsAck_Police2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 9;
inline bool msgBanTicketsAck_Police2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgBanTicketsAck_Police2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgBanTicketsAck_Police2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgBanTicketsAck_Police2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgBanTicketsAck_Police2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stErrInfo)
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsAck_Police2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgBanTicketsAck_Police2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsAck_Police2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgBanTicketsAck_Police2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 10;
inline bool msgBanTicketsAck_Police2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgBanTicketsAck_Police2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgBanTicketsAck_Police2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgBanTicketsAck_Police2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgBanTicketsAck_Police2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgBanTicketsAck_Police2RA.stSign)
  return _internal_stsign();
}
inline void msgBanTicketsAck_Police2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stSign)
}
inline ::interfaces::msgSignature* msgBanTicketsAck_Police2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsAck_Police2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgBanTicketsAck_Police2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgBanTicketsAck_Police2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgBanTicketsAck_Police2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgBanTicketsAck_Police2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgBanTicketsAck_Police2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgBanTicketsAck_Police2RA.stSign)
}

// -------------------------------------------------------------------

// msgVehicleConfig

// required string strLTCAServerURL = 1 [default = ""];
inline bool msgVehicleConfig::_internal_has_strltcaserverurl() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strltcaserverurl() const {
  return _internal_has_strltcaserverurl();
}
inline void msgVehicleConfig::clear_strltcaserverurl() {
  strltcaserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgVehicleConfig::strltcaserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strLTCAServerURL)
  return _internal_strltcaserverurl();
}
inline void msgVehicleConfig::set_strltcaserverurl(const std::string& value) {
  _internal_set_strltcaserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strLTCAServerURL)
}
inline std::string* msgVehicleConfig::mutable_strltcaserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strLTCAServerURL)
  return _internal_mutable_strltcaserverurl();
}
inline const std::string& msgVehicleConfig::_internal_strltcaserverurl() const {
  return strltcaserverurl_.Get();
}
inline void msgVehicleConfig::_internal_set_strltcaserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strltcaserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strLTCAServerURL)
}
inline void msgVehicleConfig::set_strltcaserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strLTCAServerURL)
}
inline void msgVehicleConfig::set_strltcaserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strLTCAServerURL)
}
inline std::string* msgVehicleConfig::_internal_mutable_strltcaserverurl() {
  _has_bits_[0] |= 0x00000001u;
  return strltcaserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strltcaserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strLTCAServerURL)
  if (!_internal_has_strltcaserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strltcaserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strltcaserverurl(std::string* strltcaserverurl) {
  if (strltcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strltcaserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strLTCAServerURL)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strltcaserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strLTCAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strltcaserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strltcaserverurl(
    std::string* strltcaserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strltcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strltcaserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strLTCAServerURL)
}

// required string strPCAServerURL = 2 [default = ""];
inline bool msgVehicleConfig::_internal_has_strpcaserverurl() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strpcaserverurl() const {
  return _internal_has_strpcaserverurl();
}
inline void msgVehicleConfig::clear_strpcaserverurl() {
  strpcaserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgVehicleConfig::strpcaserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strPCAServerURL)
  return _internal_strpcaserverurl();
}
inline void msgVehicleConfig::set_strpcaserverurl(const std::string& value) {
  _internal_set_strpcaserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strPCAServerURL)
}
inline std::string* msgVehicleConfig::mutable_strpcaserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strPCAServerURL)
  return _internal_mutable_strpcaserverurl();
}
inline const std::string& msgVehicleConfig::_internal_strpcaserverurl() const {
  return strpcaserverurl_.Get();
}
inline void msgVehicleConfig::_internal_set_strpcaserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strpcaserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strPCAServerURL)
}
inline void msgVehicleConfig::set_strpcaserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strPCAServerURL)
}
inline void msgVehicleConfig::set_strpcaserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strPCAServerURL)
}
inline std::string* msgVehicleConfig::_internal_mutable_strpcaserverurl() {
  _has_bits_[0] |= 0x00000002u;
  return strpcaserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strpcaserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strPCAServerURL)
  if (!_internal_has_strpcaserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strpcaserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strpcaserverurl(std::string* strpcaserverurl) {
  if (strpcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpcaserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpcaserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strPCAServerURL)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strpcaserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strPCAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strpcaserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strpcaserverurl(
    std::string* strpcaserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpcaserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpcaserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strPCAServerURL)
}

// required string strRAServerURL = 3 [default = ""];
inline bool msgVehicleConfig::_internal_has_strraserverurl() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strraserverurl() const {
  return _internal_has_strraserverurl();
}
inline void msgVehicleConfig::clear_strraserverurl() {
  strraserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgVehicleConfig::strraserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strRAServerURL)
  return _internal_strraserverurl();
}
inline void msgVehicleConfig::set_strraserverurl(const std::string& value) {
  _internal_set_strraserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strRAServerURL)
}
inline std::string* msgVehicleConfig::mutable_strraserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strRAServerURL)
  return _internal_mutable_strraserverurl();
}
inline const std::string& msgVehicleConfig::_internal_strraserverurl() const {
  return strraserverurl_.Get();
}
inline void msgVehicleConfig::_internal_set_strraserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strraserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strRAServerURL)
}
inline void msgVehicleConfig::set_strraserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strRAServerURL)
}
inline void msgVehicleConfig::set_strraserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strRAServerURL)
}
inline std::string* msgVehicleConfig::_internal_mutable_strraserverurl() {
  _has_bits_[0] |= 0x00000004u;
  return strraserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strraserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strRAServerURL)
  if (!_internal_has_strraserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strraserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strraserverurl(std::string* strraserverurl) {
  if (strraserverurl != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strraserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strraserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strRAServerURL)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strraserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strRAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strraserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strraserverurl(
    std::string* strraserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strraserverurl != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strraserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strraserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strRAServerURL)
}

// required string strLTCAMethodName = 4 [default = ""];
inline bool msgVehicleConfig::_internal_has_strltcamethodname() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strltcamethodname() const {
  return _internal_has_strltcamethodname();
}
inline void msgVehicleConfig::clear_strltcamethodname() {
  strltcamethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& msgVehicleConfig::strltcamethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strLTCAMethodName)
  return _internal_strltcamethodname();
}
inline void msgVehicleConfig::set_strltcamethodname(const std::string& value) {
  _internal_set_strltcamethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strLTCAMethodName)
}
inline std::string* msgVehicleConfig::mutable_strltcamethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strLTCAMethodName)
  return _internal_mutable_strltcamethodname();
}
inline const std::string& msgVehicleConfig::_internal_strltcamethodname() const {
  return strltcamethodname_.Get();
}
inline void msgVehicleConfig::_internal_set_strltcamethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strltcamethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strLTCAMethodName)
}
inline void msgVehicleConfig::set_strltcamethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strLTCAMethodName)
}
inline void msgVehicleConfig::set_strltcamethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strLTCAMethodName)
}
inline std::string* msgVehicleConfig::_internal_mutable_strltcamethodname() {
  _has_bits_[0] |= 0x00000008u;
  return strltcamethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strltcamethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strLTCAMethodName)
  if (!_internal_has_strltcamethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return strltcamethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strltcamethodname(std::string* strltcamethodname) {
  if (strltcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strltcamethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strltcamethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strLTCAMethodName)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strltcamethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strLTCAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return strltcamethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strltcamethodname(
    std::string* strltcamethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strltcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strltcamethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strltcamethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strLTCAMethodName)
}

// required string strPCAMethodName = 5 [default = ""];
inline bool msgVehicleConfig::_internal_has_strpcamethodname() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strpcamethodname() const {
  return _internal_has_strpcamethodname();
}
inline void msgVehicleConfig::clear_strpcamethodname() {
  strpcamethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& msgVehicleConfig::strpcamethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strPCAMethodName)
  return _internal_strpcamethodname();
}
inline void msgVehicleConfig::set_strpcamethodname(const std::string& value) {
  _internal_set_strpcamethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strPCAMethodName)
}
inline std::string* msgVehicleConfig::mutable_strpcamethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strPCAMethodName)
  return _internal_mutable_strpcamethodname();
}
inline const std::string& msgVehicleConfig::_internal_strpcamethodname() const {
  return strpcamethodname_.Get();
}
inline void msgVehicleConfig::_internal_set_strpcamethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strpcamethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strPCAMethodName)
}
inline void msgVehicleConfig::set_strpcamethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strPCAMethodName)
}
inline void msgVehicleConfig::set_strpcamethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strPCAMethodName)
}
inline std::string* msgVehicleConfig::_internal_mutable_strpcamethodname() {
  _has_bits_[0] |= 0x00000010u;
  return strpcamethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strpcamethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strPCAMethodName)
  if (!_internal_has_strpcamethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return strpcamethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strpcamethodname(std::string* strpcamethodname) {
  if (strpcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strpcamethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpcamethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strPCAMethodName)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strpcamethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strPCAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000010u;
  return strpcamethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strpcamethodname(
    std::string* strpcamethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strpcamethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpcamethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strPCAMethodName)
}

// required string strRAMethodName = 6 [default = ""];
inline bool msgVehicleConfig::_internal_has_strramethodname() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_strramethodname() const {
  return _internal_has_strramethodname();
}
inline void msgVehicleConfig::clear_strramethodname() {
  strramethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& msgVehicleConfig::strramethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.strRAMethodName)
  return _internal_strramethodname();
}
inline void msgVehicleConfig::set_strramethodname(const std::string& value) {
  _internal_set_strramethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.strRAMethodName)
}
inline std::string* msgVehicleConfig::mutable_strramethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVehicleConfig.strRAMethodName)
  return _internal_mutable_strramethodname();
}
inline const std::string& msgVehicleConfig::_internal_strramethodname() const {
  return strramethodname_.Get();
}
inline void msgVehicleConfig::_internal_set_strramethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVehicleConfig::set_strramethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVehicleConfig.strRAMethodName)
}
inline void msgVehicleConfig::set_strramethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVehicleConfig.strRAMethodName)
}
inline void msgVehicleConfig::set_strramethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVehicleConfig.strRAMethodName)
}
inline std::string* msgVehicleConfig::_internal_mutable_strramethodname() {
  _has_bits_[0] |= 0x00000020u;
  return strramethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVehicleConfig::release_strramethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgVehicleConfig.strRAMethodName)
  if (!_internal_has_strramethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return strramethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVehicleConfig::set_allocated_strramethodname(std::string* strramethodname) {
  if (strramethodname != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  strramethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strramethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVehicleConfig.strRAMethodName)
}
inline std::string* msgVehicleConfig::unsafe_arena_release_strramethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVehicleConfig.strRAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000020u;
  return strramethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVehicleConfig::unsafe_arena_set_allocated_strramethodname(
    std::string* strramethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strramethodname != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  strramethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strramethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVehicleConfig.strRAMethodName)
}

// required uint64 lMaxXMLRPCLimitBufferSize = 7 [default = 0];
inline bool msgVehicleConfig::_internal_has_lmaxxmlrpclimitbuffersize() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_lmaxxmlrpclimitbuffersize() const {
  return _internal_has_lmaxxmlrpclimitbuffersize();
}
inline void msgVehicleConfig::clear_lmaxxmlrpclimitbuffersize() {
  lmaxxmlrpclimitbuffersize_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgVehicleConfig::_internal_lmaxxmlrpclimitbuffersize() const {
  return lmaxxmlrpclimitbuffersize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgVehicleConfig::lmaxxmlrpclimitbuffersize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.lMaxXMLRPCLimitBufferSize)
  return _internal_lmaxxmlrpclimitbuffersize();
}
inline void msgVehicleConfig::_internal_set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  lmaxxmlrpclimitbuffersize_ = value;
}
inline void msgVehicleConfig::set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lmaxxmlrpclimitbuffersize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.lMaxXMLRPCLimitBufferSize)
}

// required float fVersion = 8 [default = -1];
inline bool msgVehicleConfig::_internal_has_fversion() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgVehicleConfig::has_fversion() const {
  return _internal_has_fversion();
}
inline void msgVehicleConfig::clear_fversion() {
  fversion_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline float msgVehicleConfig::_internal_fversion() const {
  return fversion_;
}
inline float msgVehicleConfig::fversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVehicleConfig.fVersion)
  return _internal_fversion();
}
inline void msgVehicleConfig::_internal_set_fversion(float value) {
  _has_bits_[0] |= 0x00000080u;
  fversion_ = value;
}
inline void msgVehicleConfig::set_fversion(float value) {
  _internal_set_fversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVehicleConfig.fVersion)
}

// -------------------------------------------------------------------

// msgPoliceConfig

// required string strLTCAServerURL = 1 [default = ""];
inline bool msgPoliceConfig::_internal_has_strltcaserverurl() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strltcaserverurl() const {
  return _internal_has_strltcaserverurl();
}
inline void msgPoliceConfig::clear_strltcaserverurl() {
  strltcaserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPoliceConfig::strltcaserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strLTCAServerURL)
  return _internal_strltcaserverurl();
}
inline void msgPoliceConfig::set_strltcaserverurl(const std::string& value) {
  _internal_set_strltcaserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strLTCAServerURL)
}
inline std::string* msgPoliceConfig::mutable_strltcaserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strLTCAServerURL)
  return _internal_mutable_strltcaserverurl();
}
inline const std::string& msgPoliceConfig::_internal_strltcaserverurl() const {
  return strltcaserverurl_.Get();
}
inline void msgPoliceConfig::_internal_set_strltcaserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strltcaserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strLTCAServerURL)
}
inline void msgPoliceConfig::set_strltcaserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strLTCAServerURL)
}
inline void msgPoliceConfig::set_strltcaserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strltcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strLTCAServerURL)
}
inline std::string* msgPoliceConfig::_internal_mutable_strltcaserverurl() {
  _has_bits_[0] |= 0x00000001u;
  return strltcaserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strltcaserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strLTCAServerURL)
  if (!_internal_has_strltcaserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strltcaserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strltcaserverurl(std::string* strltcaserverurl) {
  if (strltcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strltcaserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strLTCAServerURL)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strltcaserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strLTCAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strltcaserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strltcaserverurl(
    std::string* strltcaserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strltcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strltcaserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strLTCAServerURL)
}

// required string strPCAServerURL = 2 [default = ""];
inline bool msgPoliceConfig::_internal_has_strpcaserverurl() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strpcaserverurl() const {
  return _internal_has_strpcaserverurl();
}
inline void msgPoliceConfig::clear_strpcaserverurl() {
  strpcaserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPoliceConfig::strpcaserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strPCAServerURL)
  return _internal_strpcaserverurl();
}
inline void msgPoliceConfig::set_strpcaserverurl(const std::string& value) {
  _internal_set_strpcaserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strPCAServerURL)
}
inline std::string* msgPoliceConfig::mutable_strpcaserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strPCAServerURL)
  return _internal_mutable_strpcaserverurl();
}
inline const std::string& msgPoliceConfig::_internal_strpcaserverurl() const {
  return strpcaserverurl_.Get();
}
inline void msgPoliceConfig::_internal_set_strpcaserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strpcaserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strPCAServerURL)
}
inline void msgPoliceConfig::set_strpcaserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strPCAServerURL)
}
inline void msgPoliceConfig::set_strpcaserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strpcaserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strPCAServerURL)
}
inline std::string* msgPoliceConfig::_internal_mutable_strpcaserverurl() {
  _has_bits_[0] |= 0x00000002u;
  return strpcaserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strpcaserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strPCAServerURL)
  if (!_internal_has_strpcaserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strpcaserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strpcaserverurl(std::string* strpcaserverurl) {
  if (strpcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpcaserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpcaserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strPCAServerURL)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strpcaserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strPCAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strpcaserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strpcaserverurl(
    std::string* strpcaserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpcaserverurl != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpcaserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpcaserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strPCAServerURL)
}

// required string strRAServerURL = 3 [default = ""];
inline bool msgPoliceConfig::_internal_has_strraserverurl() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strraserverurl() const {
  return _internal_has_strraserverurl();
}
inline void msgPoliceConfig::clear_strraserverurl() {
  strraserverurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgPoliceConfig::strraserverurl() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strRAServerURL)
  return _internal_strraserverurl();
}
inline void msgPoliceConfig::set_strraserverurl(const std::string& value) {
  _internal_set_strraserverurl(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strRAServerURL)
}
inline std::string* msgPoliceConfig::mutable_strraserverurl() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strRAServerURL)
  return _internal_mutable_strraserverurl();
}
inline const std::string& msgPoliceConfig::_internal_strraserverurl() const {
  return strraserverurl_.Get();
}
inline void msgPoliceConfig::_internal_set_strraserverurl(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strraserverurl(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strRAServerURL)
}
inline void msgPoliceConfig::set_strraserverurl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strRAServerURL)
}
inline void msgPoliceConfig::set_strraserverurl(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strraserverurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strRAServerURL)
}
inline std::string* msgPoliceConfig::_internal_mutable_strraserverurl() {
  _has_bits_[0] |= 0x00000004u;
  return strraserverurl_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strraserverurl() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strRAServerURL)
  if (!_internal_has_strraserverurl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strraserverurl_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strraserverurl(std::string* strraserverurl) {
  if (strraserverurl != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strraserverurl_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strraserverurl,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strRAServerURL)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strraserverurl() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strRAServerURL)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strraserverurl_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strraserverurl(
    std::string* strraserverurl) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strraserverurl != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strraserverurl_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strraserverurl, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strRAServerURL)
}

// required string strLTCAMethodName = 4 [default = ""];
inline bool msgPoliceConfig::_internal_has_strltcamethodname() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strltcamethodname() const {
  return _internal_has_strltcamethodname();
}
inline void msgPoliceConfig::clear_strltcamethodname() {
  strltcamethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& msgPoliceConfig::strltcamethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strLTCAMethodName)
  return _internal_strltcamethodname();
}
inline void msgPoliceConfig::set_strltcamethodname(const std::string& value) {
  _internal_set_strltcamethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strLTCAMethodName)
}
inline std::string* msgPoliceConfig::mutable_strltcamethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strLTCAMethodName)
  return _internal_mutable_strltcamethodname();
}
inline const std::string& msgPoliceConfig::_internal_strltcamethodname() const {
  return strltcamethodname_.Get();
}
inline void msgPoliceConfig::_internal_set_strltcamethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strltcamethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strLTCAMethodName)
}
inline void msgPoliceConfig::set_strltcamethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strLTCAMethodName)
}
inline void msgPoliceConfig::set_strltcamethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  strltcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strLTCAMethodName)
}
inline std::string* msgPoliceConfig::_internal_mutable_strltcamethodname() {
  _has_bits_[0] |= 0x00000008u;
  return strltcamethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strltcamethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strLTCAMethodName)
  if (!_internal_has_strltcamethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return strltcamethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strltcamethodname(std::string* strltcamethodname) {
  if (strltcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strltcamethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strltcamethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strLTCAMethodName)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strltcamethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strLTCAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000008u;
  return strltcamethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strltcamethodname(
    std::string* strltcamethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strltcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  strltcamethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strltcamethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strLTCAMethodName)
}

// required string strPCAMethodName = 5 [default = ""];
inline bool msgPoliceConfig::_internal_has_strpcamethodname() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strpcamethodname() const {
  return _internal_has_strpcamethodname();
}
inline void msgPoliceConfig::clear_strpcamethodname() {
  strpcamethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& msgPoliceConfig::strpcamethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strPCAMethodName)
  return _internal_strpcamethodname();
}
inline void msgPoliceConfig::set_strpcamethodname(const std::string& value) {
  _internal_set_strpcamethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strPCAMethodName)
}
inline std::string* msgPoliceConfig::mutable_strpcamethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strPCAMethodName)
  return _internal_mutable_strpcamethodname();
}
inline const std::string& msgPoliceConfig::_internal_strpcamethodname() const {
  return strpcamethodname_.Get();
}
inline void msgPoliceConfig::_internal_set_strpcamethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strpcamethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strPCAMethodName)
}
inline void msgPoliceConfig::set_strpcamethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strPCAMethodName)
}
inline void msgPoliceConfig::set_strpcamethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  strpcamethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strPCAMethodName)
}
inline std::string* msgPoliceConfig::_internal_mutable_strpcamethodname() {
  _has_bits_[0] |= 0x00000010u;
  return strpcamethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strpcamethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strPCAMethodName)
  if (!_internal_has_strpcamethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return strpcamethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strpcamethodname(std::string* strpcamethodname) {
  if (strpcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strpcamethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpcamethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strPCAMethodName)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strpcamethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strPCAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000010u;
  return strpcamethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strpcamethodname(
    std::string* strpcamethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpcamethodname != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  strpcamethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpcamethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strPCAMethodName)
}

// required string strRAMethodName = 6 [default = ""];
inline bool msgPoliceConfig::_internal_has_strramethodname() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_strramethodname() const {
  return _internal_has_strramethodname();
}
inline void msgPoliceConfig::clear_strramethodname() {
  strramethodname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& msgPoliceConfig::strramethodname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.strRAMethodName)
  return _internal_strramethodname();
}
inline void msgPoliceConfig::set_strramethodname(const std::string& value) {
  _internal_set_strramethodname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.strRAMethodName)
}
inline std::string* msgPoliceConfig::mutable_strramethodname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPoliceConfig.strRAMethodName)
  return _internal_mutable_strramethodname();
}
inline const std::string& msgPoliceConfig::_internal_strramethodname() const {
  return strramethodname_.Get();
}
inline void msgPoliceConfig::_internal_set_strramethodname(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPoliceConfig::set_strramethodname(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPoliceConfig.strRAMethodName)
}
inline void msgPoliceConfig::set_strramethodname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPoliceConfig.strRAMethodName)
}
inline void msgPoliceConfig::set_strramethodname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  strramethodname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPoliceConfig.strRAMethodName)
}
inline std::string* msgPoliceConfig::_internal_mutable_strramethodname() {
  _has_bits_[0] |= 0x00000020u;
  return strramethodname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPoliceConfig::release_strramethodname() {
  // @@protoc_insertion_point(field_release:interfaces.msgPoliceConfig.strRAMethodName)
  if (!_internal_has_strramethodname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return strramethodname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPoliceConfig::set_allocated_strramethodname(std::string* strramethodname) {
  if (strramethodname != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  strramethodname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strramethodname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPoliceConfig.strRAMethodName)
}
inline std::string* msgPoliceConfig::unsafe_arena_release_strramethodname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPoliceConfig.strRAMethodName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000020u;
  return strramethodname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPoliceConfig::unsafe_arena_set_allocated_strramethodname(
    std::string* strramethodname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strramethodname != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  strramethodname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strramethodname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPoliceConfig.strRAMethodName)
}

// required uint64 lMaxXMLRPCLimitBufferSize = 7 [default = 0];
inline bool msgPoliceConfig::_internal_has_lmaxxmlrpclimitbuffersize() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_lmaxxmlrpclimitbuffersize() const {
  return _internal_has_lmaxxmlrpclimitbuffersize();
}
inline void msgPoliceConfig::clear_lmaxxmlrpclimitbuffersize() {
  lmaxxmlrpclimitbuffersize_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgPoliceConfig::_internal_lmaxxmlrpclimitbuffersize() const {
  return lmaxxmlrpclimitbuffersize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msgPoliceConfig::lmaxxmlrpclimitbuffersize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.lMaxXMLRPCLimitBufferSize)
  return _internal_lmaxxmlrpclimitbuffersize();
}
inline void msgPoliceConfig::_internal_set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  lmaxxmlrpclimitbuffersize_ = value;
}
inline void msgPoliceConfig::set_lmaxxmlrpclimitbuffersize(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lmaxxmlrpclimitbuffersize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.lMaxXMLRPCLimitBufferSize)
}

// required float fVersion = 8 [default = -1];
inline bool msgPoliceConfig::_internal_has_fversion() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgPoliceConfig::has_fversion() const {
  return _internal_has_fversion();
}
inline void msgPoliceConfig::clear_fversion() {
  fversion_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline float msgPoliceConfig::_internal_fversion() const {
  return fversion_;
}
inline float msgPoliceConfig::fversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPoliceConfig.fVersion)
  return _internal_fversion();
}
inline void msgPoliceConfig::_internal_set_fversion(float value) {
  _has_bits_[0] |= 0x00000080u;
  fversion_ = value;
}
inline void msgPoliceConfig::set_fversion(float value) {
  _internal_set_fversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPoliceConfig.fVersion)
}

// -------------------------------------------------------------------

// msgVPKILibConfig_msgTicketPolicy

// required bool bTicketReusability = 1 [default = true];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_bticketreusability() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_bticketreusability() const {
  return _internal_has_bticketreusability();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_bticketreusability() {
  bticketreusability_ = true;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_bticketreusability() const {
  return bticketreusability_;
}
inline bool msgVPKILibConfig_msgTicketPolicy::bticketreusability() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.bTicketReusability)
  return _internal_bticketreusability();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_bticketreusability(bool value) {
  _has_bits_[0] |= 0x00000100u;
  bticketreusability_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_bticketreusability(bool value) {
  _internal_set_bticketreusability(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.bTicketReusability)
}

// required uint32 uiMaxNoOfTicketsToObtainPerHour = 2 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uimaxnoofticketstoobtainperhour() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uimaxnoofticketstoobtainperhour() const {
  return _internal_has_uimaxnoofticketstoobtainperhour();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uimaxnoofticketstoobtainperhour() {
  uimaxnoofticketstoobtainperhour_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uimaxnoofticketstoobtainperhour() const {
  return uimaxnoofticketstoobtainperhour_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uimaxnoofticketstoobtainperhour() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToObtainPerHour)
  return _internal_uimaxnoofticketstoobtainperhour();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uimaxnoofticketstoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  uimaxnoofticketstoobtainperhour_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uimaxnoofticketstoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofticketstoobtainperhour(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToObtainPerHour)
}

// required uint32 uiMinNoOfTicketsToReq = 3 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uiminnoofticketstoreq() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uiminnoofticketstoreq() const {
  return _internal_has_uiminnoofticketstoreq();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uiminnoofticketstoreq() {
  uiminnoofticketstoreq_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uiminnoofticketstoreq() const {
  return uiminnoofticketstoreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uiminnoofticketstoreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToReq)
  return _internal_uiminnoofticketstoreq();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uiminnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uiminnoofticketstoreq_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uiminnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofticketstoreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToReq)
}

// required uint32 uiMaxNoOfTicketsToReq = 4 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uimaxnoofticketstoreq() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uimaxnoofticketstoreq() const {
  return _internal_has_uimaxnoofticketstoreq();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uimaxnoofticketstoreq() {
  uimaxnoofticketstoreq_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uimaxnoofticketstoreq() const {
  return uimaxnoofticketstoreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uimaxnoofticketstoreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToReq)
  return _internal_uimaxnoofticketstoreq();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uimaxnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uimaxnoofticketstoreq_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uimaxnoofticketstoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofticketstoreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToReq)
}

// required uint32 uiMinNoOfTicketsToRevoke = 5 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uiminnoofticketstorevoke() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uiminnoofticketstorevoke() const {
  return _internal_has_uiminnoofticketstorevoke();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uiminnoofticketstorevoke() {
  uiminnoofticketstorevoke_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uiminnoofticketstorevoke() const {
  return uiminnoofticketstorevoke_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uiminnoofticketstorevoke() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToRevoke)
  return _internal_uiminnoofticketstorevoke();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uiminnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uiminnoofticketstorevoke_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uiminnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofticketstorevoke(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToRevoke)
}

// required uint32 uiMaxNoOfTicketsToRevoke = 6 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uimaxnoofticketstorevoke() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uimaxnoofticketstorevoke() const {
  return _internal_has_uimaxnoofticketstorevoke();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uimaxnoofticketstorevoke() {
  uimaxnoofticketstorevoke_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uimaxnoofticketstorevoke() const {
  return uimaxnoofticketstorevoke_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uimaxnoofticketstorevoke() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToRevoke)
  return _internal_uimaxnoofticketstorevoke();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uimaxnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uimaxnoofticketstorevoke_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uimaxnoofticketstorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofticketstorevoke(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToRevoke)
}

// required uint32 uiMinNoOfTicketsToBan = 7 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uiminnoofticketstoban() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uiminnoofticketstoban() const {
  return _internal_has_uiminnoofticketstoban();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uiminnoofticketstoban() {
  uiminnoofticketstoban_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uiminnoofticketstoban() const {
  return uiminnoofticketstoban_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uiminnoofticketstoban() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToBan)
  return _internal_uiminnoofticketstoban();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uiminnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uiminnoofticketstoban_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uiminnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofticketstoban(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMinNoOfTicketsToBan)
}

// required uint32 uiMaxNoOfTicketsToBan = 8 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uimaxnoofticketstoban() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uimaxnoofticketstoban() const {
  return _internal_has_uimaxnoofticketstoban();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uimaxnoofticketstoban() {
  uimaxnoofticketstoban_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uimaxnoofticketstoban() const {
  return uimaxnoofticketstoban_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uimaxnoofticketstoban() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToBan)
  return _internal_uimaxnoofticketstoban();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uimaxnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  uimaxnoofticketstoban_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uimaxnoofticketstoban(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofticketstoban(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiMaxNoOfTicketsToBan)
}

// required uint32 uiBanTicketPeriod = 9 [default = 0];
inline bool msgVPKILibConfig_msgTicketPolicy::_internal_has_uibanticketperiod() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgTicketPolicy::has_uibanticketperiod() const {
  return _internal_has_uibanticketperiod();
}
inline void msgVPKILibConfig_msgTicketPolicy::clear_uibanticketperiod() {
  uibanticketperiod_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::_internal_uibanticketperiod() const {
  return uibanticketperiod_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgTicketPolicy::uibanticketperiod() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgTicketPolicy.uiBanTicketPeriod)
  return _internal_uibanticketperiod();
}
inline void msgVPKILibConfig_msgTicketPolicy::_internal_set_uibanticketperiod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  uibanticketperiod_ = value;
}
inline void msgVPKILibConfig_msgTicketPolicy::set_uibanticketperiod(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uibanticketperiod(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgTicketPolicy.uiBanTicketPeriod)
}

// -------------------------------------------------------------------

// msgVPKILibConfig_msgPsnymPolicy

// required string strResponsibleNodeToRevokePsnyms = 1;
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_strresponsiblenodetorevokepsnyms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_strresponsiblenodetorevokepsnyms() const {
  return _internal_has_strresponsiblenodetorevokepsnyms();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_strresponsiblenodetorevokepsnyms() {
  strresponsiblenodetorevokepsnyms_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgVPKILibConfig_msgPsnymPolicy::strresponsiblenodetorevokepsnyms() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
  return _internal_strresponsiblenodetorevokepsnyms();
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strresponsiblenodetorevokepsnyms(const std::string& value) {
  _internal_set_strresponsiblenodetorevokepsnyms(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::mutable_strresponsiblenodetorevokepsnyms() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
  return _internal_mutable_strresponsiblenodetorevokepsnyms();
}
inline const std::string& msgVPKILibConfig_msgPsnymPolicy::_internal_strresponsiblenodetorevokepsnyms() const {
  return strresponsiblenodetorevokepsnyms_.Get();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_strresponsiblenodetorevokepsnyms(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strresponsiblenodetorevokepsnyms_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strresponsiblenodetorevokepsnyms(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strresponsiblenodetorevokepsnyms_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strresponsiblenodetorevokepsnyms(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strresponsiblenodetorevokepsnyms_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strresponsiblenodetorevokepsnyms(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strresponsiblenodetorevokepsnyms_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::_internal_mutable_strresponsiblenodetorevokepsnyms() {
  _has_bits_[0] |= 0x00000001u;
  return strresponsiblenodetorevokepsnyms_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::release_strresponsiblenodetorevokepsnyms() {
  // @@protoc_insertion_point(field_release:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
  if (!_internal_has_strresponsiblenodetorevokepsnyms()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strresponsiblenodetorevokepsnyms_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_allocated_strresponsiblenodetorevokepsnyms(std::string* strresponsiblenodetorevokepsnyms) {
  if (strresponsiblenodetorevokepsnyms != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strresponsiblenodetorevokepsnyms_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strresponsiblenodetorevokepsnyms,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::unsafe_arena_release_strresponsiblenodetorevokepsnyms() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strresponsiblenodetorevokepsnyms_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::unsafe_arena_set_allocated_strresponsiblenodetorevokepsnyms(
    std::string* strresponsiblenodetorevokepsnyms) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strresponsiblenodetorevokepsnyms != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strresponsiblenodetorevokepsnyms_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strresponsiblenodetorevokepsnyms, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVPKILibConfig.msgPsnymPolicy.strResponsibleNodeToRevokePsnyms)
}

// required uint32 uiMaxNoOfPsnymCertToObtainPerHour = 2 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnoofpsnymcerttoobtainperhour() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnoofpsnymcerttoobtainperhour() const {
  return _internal_has_uimaxnoofpsnymcerttoobtainperhour();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnoofpsnymcerttoobtainperhour() {
  uimaxnoofpsnymcerttoobtainperhour_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnoofpsnymcerttoobtainperhour() const {
  return uimaxnoofpsnymcerttoobtainperhour_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnoofpsnymcerttoobtainperhour() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToObtainPerHour)
  return _internal_uimaxnoofpsnymcerttoobtainperhour();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnoofpsnymcerttoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  uimaxnoofpsnymcerttoobtainperhour_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnoofpsnymcerttoobtainperhour(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofpsnymcerttoobtainperhour(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToObtainPerHour)
}

// required uint32 uiMaxNoOfPsnymCertReqUsingATicket = 3 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnoofpsnymcertrequsingaticket() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnoofpsnymcertrequsingaticket() const {
  return _internal_has_uimaxnoofpsnymcertrequsingaticket();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnoofpsnymcertrequsingaticket() {
  uimaxnoofpsnymcertrequsingaticket_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnoofpsnymcertrequsingaticket() const {
  return uimaxnoofpsnymcertrequsingaticket_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnoofpsnymcertrequsingaticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertReqUsingATicket)
  return _internal_uimaxnoofpsnymcertrequsingaticket();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnoofpsnymcertrequsingaticket(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  uimaxnoofpsnymcertrequsingaticket_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnoofpsnymcertrequsingaticket(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofpsnymcertrequsingaticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertReqUsingATicket)
}

// required uint32 uiMinNoOfPsnymCertToReq = 4 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uiminnoofpsnymcerttoreq() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uiminnoofpsnymcerttoreq() const {
  return _internal_has_uiminnoofpsnymcerttoreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uiminnoofpsnymcerttoreq() {
  uiminnoofpsnymcerttoreq_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uiminnoofpsnymcerttoreq() const {
  return uiminnoofpsnymcerttoreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uiminnoofpsnymcerttoreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToReq)
  return _internal_uiminnoofpsnymcerttoreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uiminnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  uiminnoofpsnymcerttoreq_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uiminnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofpsnymcerttoreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToReq)
}

// required uint32 uiMaxNoOfPsnymCertToReq = 5 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnoofpsnymcerttoreq() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnoofpsnymcerttoreq() const {
  return _internal_has_uimaxnoofpsnymcerttoreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnoofpsnymcerttoreq() {
  uimaxnoofpsnymcerttoreq_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnoofpsnymcerttoreq() const {
  return uimaxnoofpsnymcerttoreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnoofpsnymcerttoreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToReq)
  return _internal_uimaxnoofpsnymcerttoreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uimaxnoofpsnymcerttoreq_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnoofpsnymcerttoreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofpsnymcerttoreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToReq)
}

// required uint32 uiMinNoOfPsnymCertToResolve = 6 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uiminnoofpsnymcerttoresolve() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uiminnoofpsnymcerttoresolve() const {
  return _internal_has_uiminnoofpsnymcerttoresolve();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uiminnoofpsnymcerttoresolve() {
  uiminnoofpsnymcerttoresolve_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uiminnoofpsnymcerttoresolve() const {
  return uiminnoofpsnymcerttoresolve_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uiminnoofpsnymcerttoresolve() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToResolve)
  return _internal_uiminnoofpsnymcerttoresolve();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uiminnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  uiminnoofpsnymcerttoresolve_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uiminnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofpsnymcerttoresolve(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToResolve)
}

// required uint32 uiMaxNoOfPsnymCertToResolve = 7 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnoofpsnymcerttoresolve() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnoofpsnymcerttoresolve() const {
  return _internal_has_uimaxnoofpsnymcerttoresolve();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnoofpsnymcerttoresolve() {
  uimaxnoofpsnymcerttoresolve_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnoofpsnymcerttoresolve() const {
  return uimaxnoofpsnymcerttoresolve_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnoofpsnymcerttoresolve() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToResolve)
  return _internal_uimaxnoofpsnymcerttoresolve();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  uimaxnoofpsnymcerttoresolve_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnoofpsnymcerttoresolve(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofpsnymcerttoresolve(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToResolve)
}

// required uint32 uiMinNoOfPsnymCertToRevoke = 8 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uiminnoofpsnymcerttorevoke() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uiminnoofpsnymcerttorevoke() const {
  return _internal_has_uiminnoofpsnymcerttorevoke();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uiminnoofpsnymcerttorevoke() {
  uiminnoofpsnymcerttorevoke_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uiminnoofpsnymcerttorevoke() const {
  return uiminnoofpsnymcerttorevoke_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uiminnoofpsnymcerttorevoke() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToRevoke)
  return _internal_uiminnoofpsnymcerttorevoke();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uiminnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  uiminnoofpsnymcerttorevoke_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uiminnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uiminnoofpsnymcerttorevoke(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMinNoOfPsnymCertToRevoke)
}

// required uint32 uiMaxNoOfPsnymCertToRevoke = 9 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnoofpsnymcerttorevoke() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnoofpsnymcerttorevoke() const {
  return _internal_has_uimaxnoofpsnymcerttorevoke();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnoofpsnymcerttorevoke() {
  uimaxnoofpsnymcerttorevoke_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnoofpsnymcerttorevoke() const {
  return uimaxnoofpsnymcerttorevoke_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnoofpsnymcerttorevoke() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToRevoke)
  return _internal_uimaxnoofpsnymcerttorevoke();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  uimaxnoofpsnymcerttorevoke_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnoofpsnymcerttorevoke(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnoofpsnymcerttorevoke(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNoOfPsnymCertToRevoke)
}

// required uint32 uiMaxNumOfPsnymCertToObtainPerReq = 10 [default = 0];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_uimaxnumofpsnymcerttoobtainperreq() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_uimaxnumofpsnymcerttoobtainperreq() const {
  return _internal_has_uimaxnumofpsnymcerttoobtainperreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_uimaxnumofpsnymcerttoobtainperreq() {
  uimaxnumofpsnymcerttoobtainperreq_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::_internal_uimaxnumofpsnymcerttoobtainperreq() const {
  return uimaxnumofpsnymcerttoobtainperreq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig_msgPsnymPolicy::uimaxnumofpsnymcerttoobtainperreq() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNumOfPsnymCertToObtainPerReq)
  return _internal_uimaxnumofpsnymcerttoobtainperreq();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_uimaxnumofpsnymcerttoobtainperreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  uimaxnumofpsnymcerttoobtainperreq_ = value;
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_uimaxnumofpsnymcerttoobtainperreq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimaxnumofpsnymcerttoobtainperreq(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.uiMaxNumOfPsnymCertToObtainPerReq)
}

// required string strPsnymOverlappingMechanism = 11 [default = ""];
inline bool msgVPKILibConfig_msgPsnymPolicy::_internal_has_strpsnymoverlappingmechanism() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVPKILibConfig_msgPsnymPolicy::has_strpsnymoverlappingmechanism() const {
  return _internal_has_strpsnymoverlappingmechanism();
}
inline void msgVPKILibConfig_msgPsnymPolicy::clear_strpsnymoverlappingmechanism() {
  strpsnymoverlappingmechanism_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgVPKILibConfig_msgPsnymPolicy::strpsnymoverlappingmechanism() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
  return _internal_strpsnymoverlappingmechanism();
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strpsnymoverlappingmechanism(const std::string& value) {
  _internal_set_strpsnymoverlappingmechanism(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::mutable_strpsnymoverlappingmechanism() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
  return _internal_mutable_strpsnymoverlappingmechanism();
}
inline const std::string& msgVPKILibConfig_msgPsnymPolicy::_internal_strpsnymoverlappingmechanism() const {
  return strpsnymoverlappingmechanism_.Get();
}
inline void msgVPKILibConfig_msgPsnymPolicy::_internal_set_strpsnymoverlappingmechanism(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymoverlappingmechanism_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strpsnymoverlappingmechanism(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymoverlappingmechanism_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strpsnymoverlappingmechanism(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strpsnymoverlappingmechanism_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_strpsnymoverlappingmechanism(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strpsnymoverlappingmechanism_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::_internal_mutable_strpsnymoverlappingmechanism() {
  _has_bits_[0] |= 0x00000002u;
  return strpsnymoverlappingmechanism_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::release_strpsnymoverlappingmechanism() {
  // @@protoc_insertion_point(field_release:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
  if (!_internal_has_strpsnymoverlappingmechanism()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strpsnymoverlappingmechanism_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::set_allocated_strpsnymoverlappingmechanism(std::string* strpsnymoverlappingmechanism) {
  if (strpsnymoverlappingmechanism != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpsnymoverlappingmechanism_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymoverlappingmechanism,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}
inline std::string* msgVPKILibConfig_msgPsnymPolicy::unsafe_arena_release_strpsnymoverlappingmechanism() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strpsnymoverlappingmechanism_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVPKILibConfig_msgPsnymPolicy::unsafe_arena_set_allocated_strpsnymoverlappingmechanism(
    std::string* strpsnymoverlappingmechanism) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymoverlappingmechanism != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strpsnymoverlappingmechanism_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymoverlappingmechanism, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVPKILibConfig.msgPsnymPolicy.strPsnymOverlappingMechanism)
}

// -------------------------------------------------------------------

// msgVPKILibConfig

// required int32 iRCAId = 1 [default = -1];
inline bool msgVPKILibConfig::_internal_has_ircaid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_ircaid() const {
  return _internal_has_ircaid();
}
inline void msgVPKILibConfig::clear_ircaid() {
  ircaid_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_ircaid() const {
  return ircaid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::ircaid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iRCAId)
  return _internal_ircaid();
}
inline void msgVPKILibConfig::_internal_set_ircaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ircaid_ = value;
}
inline void msgVPKILibConfig::set_ircaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ircaid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iRCAId)
}

// required int32 iPCAId = 2 [default = -1];
inline bool msgVPKILibConfig::_internal_has_ipcaid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_ipcaid() const {
  return _internal_has_ipcaid();
}
inline void msgVPKILibConfig::clear_ipcaid() {
  ipcaid_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_ipcaid() const {
  return ipcaid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::ipcaid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iPCAId)
  return _internal_ipcaid();
}
inline void msgVPKILibConfig::_internal_set_ipcaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ipcaid_ = value;
}
inline void msgVPKILibConfig::set_ipcaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iPCAId)
}

// required int32 iLTCAId = 3 [default = -1];
inline bool msgVPKILibConfig::_internal_has_iltcaid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_iltcaid() const {
  return _internal_has_iltcaid();
}
inline void msgVPKILibConfig::clear_iltcaid() {
  iltcaid_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_iltcaid() const {
  return iltcaid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::iltcaid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iLTCAId)
  return _internal_iltcaid();
}
inline void msgVPKILibConfig::_internal_set_iltcaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iltcaid_ = value;
}
inline void msgVPKILibConfig::set_iltcaid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iltcaid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iLTCAId)
}

// required int32 iRAId = 4 [default = -1];
inline bool msgVPKILibConfig::_internal_has_iraid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_iraid() const {
  return _internal_has_iraid();
}
inline void msgVPKILibConfig::clear_iraid() {
  iraid_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_iraid() const {
  return iraid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::iraid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iRAId)
  return _internal_iraid();
}
inline void msgVPKILibConfig::_internal_set_iraid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  iraid_ = value;
}
inline void msgVPKILibConfig::set_iraid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iraid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iRAId)
}

// required int32 iPoliceId = 5 [default = -1];
inline bool msgVPKILibConfig::_internal_has_ipoliceid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_ipoliceid() const {
  return _internal_has_ipoliceid();
}
inline void msgVPKILibConfig::clear_ipoliceid() {
  ipoliceid_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_ipoliceid() const {
  return ipoliceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::ipoliceid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iPoliceId)
  return _internal_ipoliceid();
}
inline void msgVPKILibConfig::_internal_set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipoliceid_ = value;
}
inline void msgVPKILibConfig::set_ipoliceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipoliceid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iPoliceId)
}

// required int32 iRegionId = 6 [default = -1];
inline bool msgVPKILibConfig::_internal_has_iregionid() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_iregionid() const {
  return _internal_has_iregionid();
}
inline void msgVPKILibConfig::clear_iregionid() {
  iregionid_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_iregionid() const {
  return iregionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::iregionid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iRegionId)
  return _internal_iregionid();
}
inline void msgVPKILibConfig::_internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  iregionid_ = value;
}
inline void msgVPKILibConfig::set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iregionid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iRegionId)
}

// required int32 iLocationId = 7 [default = -1];
inline bool msgVPKILibConfig::_internal_has_ilocationid() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_ilocationid() const {
  return _internal_has_ilocationid();
}
inline void msgVPKILibConfig::clear_ilocationid() {
  ilocationid_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_ilocationid() const {
  return ilocationid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::ilocationid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iLocationId)
  return _internal_ilocationid();
}
inline void msgVPKILibConfig::_internal_set_ilocationid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  ilocationid_ = value;
}
inline void msgVPKILibConfig::set_ilocationid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ilocationid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iLocationId)
}

// required string strGetHelpCommandName = 8 [default = ""];
inline bool msgVPKILibConfig::_internal_has_strgethelpcommandname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_strgethelpcommandname() const {
  return _internal_has_strgethelpcommandname();
}
inline void msgVPKILibConfig::clear_strgethelpcommandname() {
  strgethelpcommandname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgVPKILibConfig::strgethelpcommandname() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.strGetHelpCommandName)
  return _internal_strgethelpcommandname();
}
inline void msgVPKILibConfig::set_strgethelpcommandname(const std::string& value) {
  _internal_set_strgethelpcommandname(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}
inline std::string* msgVPKILibConfig::mutable_strgethelpcommandname() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVPKILibConfig.strGetHelpCommandName)
  return _internal_mutable_strgethelpcommandname();
}
inline const std::string& msgVPKILibConfig::_internal_strgethelpcommandname() const {
  return strgethelpcommandname_.Get();
}
inline void msgVPKILibConfig::_internal_set_strgethelpcommandname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strgethelpcommandname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgVPKILibConfig::set_strgethelpcommandname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strgethelpcommandname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}
inline void msgVPKILibConfig::set_strgethelpcommandname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strgethelpcommandname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}
inline void msgVPKILibConfig::set_strgethelpcommandname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strgethelpcommandname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}
inline std::string* msgVPKILibConfig::_internal_mutable_strgethelpcommandname() {
  _has_bits_[0] |= 0x00000001u;
  return strgethelpcommandname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgVPKILibConfig::release_strgethelpcommandname() {
  // @@protoc_insertion_point(field_release:interfaces.msgVPKILibConfig.strGetHelpCommandName)
  if (!_internal_has_strgethelpcommandname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strgethelpcommandname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgVPKILibConfig::set_allocated_strgethelpcommandname(std::string* strgethelpcommandname) {
  if (strgethelpcommandname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strgethelpcommandname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strgethelpcommandname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}
inline std::string* msgVPKILibConfig::unsafe_arena_release_strgethelpcommandname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgVPKILibConfig.strGetHelpCommandName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strgethelpcommandname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgVPKILibConfig::unsafe_arena_set_allocated_strgethelpcommandname(
    std::string* strgethelpcommandname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strgethelpcommandname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strgethelpcommandname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strgethelpcommandname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgVPKILibConfig.strGetHelpCommandName)
}

// repeated .interfaces.msgVPKILibConfig.msgTicketPolicy stTicketPolicies = 9;
inline int msgVPKILibConfig::_internal_stticketpolicies_size() const {
  return stticketpolicies_.size();
}
inline int msgVPKILibConfig::stticketpolicies_size() const {
  return _internal_stticketpolicies_size();
}
inline void msgVPKILibConfig::clear_stticketpolicies() {
  stticketpolicies_.Clear();
}
inline ::interfaces::msgVPKILibConfig_msgTicketPolicy* msgVPKILibConfig::mutable_stticketpolicies(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVPKILibConfig.stTicketPolicies)
  return stticketpolicies_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgTicketPolicy >*
msgVPKILibConfig::mutable_stticketpolicies() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgVPKILibConfig.stTicketPolicies)
  return &stticketpolicies_;
}
inline const ::interfaces::msgVPKILibConfig_msgTicketPolicy& msgVPKILibConfig::_internal_stticketpolicies(int index) const {
  return stticketpolicies_.Get(index);
}
inline const ::interfaces::msgVPKILibConfig_msgTicketPolicy& msgVPKILibConfig::stticketpolicies(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.stTicketPolicies)
  return _internal_stticketpolicies(index);
}
inline ::interfaces::msgVPKILibConfig_msgTicketPolicy* msgVPKILibConfig::_internal_add_stticketpolicies() {
  return stticketpolicies_.Add();
}
inline ::interfaces::msgVPKILibConfig_msgTicketPolicy* msgVPKILibConfig::add_stticketpolicies() {
  // @@protoc_insertion_point(field_add:interfaces.msgVPKILibConfig.stTicketPolicies)
  return _internal_add_stticketpolicies();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgTicketPolicy >&
msgVPKILibConfig::stticketpolicies() const {
  // @@protoc_insertion_point(field_list:interfaces.msgVPKILibConfig.stTicketPolicies)
  return stticketpolicies_;
}

// repeated .interfaces.msgVPKILibConfig.msgPsnymPolicy stPsnymPolicies = 10;
inline int msgVPKILibConfig::_internal_stpsnympolicies_size() const {
  return stpsnympolicies_.size();
}
inline int msgVPKILibConfig::stpsnympolicies_size() const {
  return _internal_stpsnympolicies_size();
}
inline void msgVPKILibConfig::clear_stpsnympolicies() {
  stpsnympolicies_.Clear();
}
inline ::interfaces::msgVPKILibConfig_msgPsnymPolicy* msgVPKILibConfig::mutable_stpsnympolicies(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgVPKILibConfig.stPsnymPolicies)
  return stpsnympolicies_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgPsnymPolicy >*
msgVPKILibConfig::mutable_stpsnympolicies() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgVPKILibConfig.stPsnymPolicies)
  return &stpsnympolicies_;
}
inline const ::interfaces::msgVPKILibConfig_msgPsnymPolicy& msgVPKILibConfig::_internal_stpsnympolicies(int index) const {
  return stpsnympolicies_.Get(index);
}
inline const ::interfaces::msgVPKILibConfig_msgPsnymPolicy& msgVPKILibConfig::stpsnympolicies(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.stPsnymPolicies)
  return _internal_stpsnympolicies(index);
}
inline ::interfaces::msgVPKILibConfig_msgPsnymPolicy* msgVPKILibConfig::_internal_add_stpsnympolicies() {
  return stpsnympolicies_.Add();
}
inline ::interfaces::msgVPKILibConfig_msgPsnymPolicy* msgVPKILibConfig::add_stpsnympolicies() {
  // @@protoc_insertion_point(field_add:interfaces.msgVPKILibConfig.stPsnymPolicies)
  return _internal_add_stpsnympolicies();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgVPKILibConfig_msgPsnymPolicy >&
msgVPKILibConfig::stpsnympolicies() const {
  // @@protoc_insertion_point(field_list:interfaces.msgVPKILibConfig.stPsnymPolicies)
  return stpsnympolicies_;
}

// required int32 iMaxDelayThreashold = 11 [default = -1];
inline bool msgVPKILibConfig::_internal_has_imaxdelaythreashold() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_imaxdelaythreashold() const {
  return _internal_has_imaxdelaythreashold();
}
inline void msgVPKILibConfig::clear_imaxdelaythreashold() {
  imaxdelaythreashold_ = -1;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_imaxdelaythreashold() const {
  return imaxdelaythreashold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::imaxdelaythreashold() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iMaxDelayThreashold)
  return _internal_imaxdelaythreashold();
}
inline void msgVPKILibConfig::_internal_set_imaxdelaythreashold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  imaxdelaythreashold_ = value;
}
inline void msgVPKILibConfig::set_imaxdelaythreashold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_imaxdelaythreashold(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iMaxDelayThreashold)
}

// required int32 iPsnymIssuanceValidityPeriod = 12 [default = -1];
inline bool msgVPKILibConfig::_internal_has_ipsnymissuancevalidityperiod() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_ipsnymissuancevalidityperiod() const {
  return _internal_has_ipsnymissuancevalidityperiod();
}
inline void msgVPKILibConfig::clear_ipsnymissuancevalidityperiod() {
  ipsnymissuancevalidityperiod_ = -1;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_ipsnymissuancevalidityperiod() const {
  return ipsnymissuancevalidityperiod_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::ipsnymissuancevalidityperiod() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iPsnymIssuanceValidityPeriod)
  return _internal_ipsnymissuancevalidityperiod();
}
inline void msgVPKILibConfig::_internal_set_ipsnymissuancevalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  ipsnymissuancevalidityperiod_ = value;
}
inline void msgVPKILibConfig::set_ipsnymissuancevalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipsnymissuancevalidityperiod(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iPsnymIssuanceValidityPeriod)
}

// required int32 iTicketValidityPeriod = 13 [default = -1];
inline bool msgVPKILibConfig::_internal_has_iticketvalidityperiod() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_iticketvalidityperiod() const {
  return _internal_has_iticketvalidityperiod();
}
inline void msgVPKILibConfig::clear_iticketvalidityperiod() {
  iticketvalidityperiod_ = -1;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_iticketvalidityperiod() const {
  return iticketvalidityperiod_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::iticketvalidityperiod() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iTicketValidityPeriod)
  return _internal_iticketvalidityperiod();
}
inline void msgVPKILibConfig::_internal_set_iticketvalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  iticketvalidityperiod_ = value;
}
inline void msgVPKILibConfig::set_iticketvalidityperiod(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iticketvalidityperiod(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iTicketValidityPeriod)
}

// required int32 iRandValueThreashold = 14 [default = -1];
inline bool msgVPKILibConfig::_internal_has_irandvaluethreashold() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_irandvaluethreashold() const {
  return _internal_has_irandvaluethreashold();
}
inline void msgVPKILibConfig::clear_irandvaluethreashold() {
  irandvaluethreashold_ = -1;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_irandvaluethreashold() const {
  return irandvaluethreashold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::irandvaluethreashold() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iRandValueThreashold)
  return _internal_irandvaluethreashold();
}
inline void msgVPKILibConfig::_internal_set_irandvaluethreashold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  irandvaluethreashold_ = value;
}
inline void msgVPKILibConfig::set_irandvaluethreashold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_irandvaluethreashold(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iRandValueThreashold)
}

// required int32 iCryptoBuffSize = 15 [default = -1];
inline bool msgVPKILibConfig::_internal_has_icryptobuffsize() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_icryptobuffsize() const {
  return _internal_has_icryptobuffsize();
}
inline void msgVPKILibConfig::clear_icryptobuffsize() {
  icryptobuffsize_ = -1;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_icryptobuffsize() const {
  return icryptobuffsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::icryptobuffsize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iCryptoBuffSize)
  return _internal_icryptobuffsize();
}
inline void msgVPKILibConfig::_internal_set_icryptobuffsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  icryptobuffsize_ = value;
}
inline void msgVPKILibConfig::set_icryptobuffsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_icryptobuffsize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iCryptoBuffSize)
}

// required uint32 uiSignatureSize = 16 [default = 0];
inline bool msgVPKILibConfig::_internal_has_uisignaturesize() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_uisignaturesize() const {
  return _internal_has_uisignaturesize();
}
inline void msgVPKILibConfig::clear_uisignaturesize() {
  uisignaturesize_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig::_internal_uisignaturesize() const {
  return uisignaturesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgVPKILibConfig::uisignaturesize() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.uiSignatureSize)
  return _internal_uisignaturesize();
}
inline void msgVPKILibConfig::_internal_set_uisignaturesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  uisignaturesize_ = value;
}
inline void msgVPKILibConfig::set_uisignaturesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uisignaturesize(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.uiSignatureSize)
}

// required int32 iTimeStampLowerBound = 17 [default = -1];
inline bool msgVPKILibConfig::_internal_has_itimestamplowerbound() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_itimestamplowerbound() const {
  return _internal_has_itimestamplowerbound();
}
inline void msgVPKILibConfig::clear_itimestamplowerbound() {
  itimestamplowerbound_ = -1;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_itimestamplowerbound() const {
  return itimestamplowerbound_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::itimestamplowerbound() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iTimeStampLowerBound)
  return _internal_itimestamplowerbound();
}
inline void msgVPKILibConfig::_internal_set_itimestamplowerbound(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  itimestamplowerbound_ = value;
}
inline void msgVPKILibConfig::set_itimestamplowerbound(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_itimestamplowerbound(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iTimeStampLowerBound)
}

// required int32 iTimeStampUpperBound = 18 [default = -1];
inline bool msgVPKILibConfig::_internal_has_itimestampupperbound() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_itimestampupperbound() const {
  return _internal_has_itimestampupperbound();
}
inline void msgVPKILibConfig::clear_itimestampupperbound() {
  itimestampupperbound_ = -1;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_itimestampupperbound() const {
  return itimestampupperbound_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::itimestampupperbound() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iTimeStampUpperBound)
  return _internal_itimestampupperbound();
}
inline void msgVPKILibConfig::_internal_set_itimestampupperbound(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  itimestampupperbound_ = value;
}
inline void msgVPKILibConfig::set_itimestampupperbound(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_itimestampupperbound(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iTimeStampUpperBound)
}

// required int32 iCurrentCRLVersion = 19 [default = -1];
inline bool msgVPKILibConfig::_internal_has_icurrentcrlversion() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_icurrentcrlversion() const {
  return _internal_has_icurrentcrlversion();
}
inline void msgVPKILibConfig::clear_icurrentcrlversion() {
  icurrentcrlversion_ = -1;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_icurrentcrlversion() const {
  return icurrentcrlversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::icurrentcrlversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iCurrentCRLVersion)
  return _internal_icurrentcrlversion();
}
inline void msgVPKILibConfig::_internal_set_icurrentcrlversion(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  icurrentcrlversion_ = value;
}
inline void msgVPKILibConfig::set_icurrentcrlversion(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_icurrentcrlversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iCurrentCRLVersion)
}

// required int32 iNonceIncreasingValue = 20 [default = -1];
inline bool msgVPKILibConfig::_internal_has_inonceincreasingvalue() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_inonceincreasingvalue() const {
  return _internal_has_inonceincreasingvalue();
}
inline void msgVPKILibConfig::clear_inonceincreasingvalue() {
  inonceincreasingvalue_ = -1;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::_internal_inonceincreasingvalue() const {
  return inonceincreasingvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgVPKILibConfig::inonceincreasingvalue() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.iNonceIncreasingValue)
  return _internal_inonceincreasingvalue();
}
inline void msgVPKILibConfig::_internal_set_inonceincreasingvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  inonceincreasingvalue_ = value;
}
inline void msgVPKILibConfig::set_inonceincreasingvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonceincreasingvalue(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.iNonceIncreasingValue)
}

// required float fVPKIVersion = 21 [default = -1];
inline bool msgVPKILibConfig::_internal_has_fvpkiversion() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgVPKILibConfig::has_fvpkiversion() const {
  return _internal_has_fvpkiversion();
}
inline void msgVPKILibConfig::clear_fvpkiversion() {
  fvpkiversion_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline float msgVPKILibConfig::_internal_fvpkiversion() const {
  return fvpkiversion_;
}
inline float msgVPKILibConfig::fvpkiversion() const {
  // @@protoc_insertion_point(field_get:interfaces.msgVPKILibConfig.fVPKIVersion)
  return _internal_fvpkiversion();
}
inline void msgVPKILibConfig::_internal_set_fvpkiversion(float value) {
  _has_bits_[0] |= 0x00000004u;
  fvpkiversion_ = value;
}
inline void msgVPKILibConfig::set_fvpkiversion(float value) {
  _internal_set_fvpkiversion(value);
  // @@protoc_insertion_point(field_set:interfaces.msgVPKILibConfig.fVPKIVersion)
}

// -------------------------------------------------------------------

// msgUpgradeConfigurationReq_Client2Server

// required int32 iReqType = 1 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.iReqType)
  return _internal_ireqtype();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.iReqType)
}

// required int32 iPCAIdRange = 2 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_ipcaidrange() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_ipcaidrange() const {
  return _internal_has_ipcaidrange();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_ipcaidrange() {
  ipcaidrange_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::_internal_ipcaidrange() const {
  return ipcaidrange_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::ipcaidrange() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.iPCAIdRange)
  return _internal_ipcaidrange();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ipcaidrange_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_ipcaidrange(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipcaidrange(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.iPCAIdRange)
}

// required int32 iRegionId = 3 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_iregionid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_iregionid() const {
  return _internal_has_iregionid();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_iregionid() {
  iregionid_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::_internal_iregionid() const {
  return iregionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::iregionid() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.iRegionId)
  return _internal_iregionid();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  iregionid_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_iregionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iregionid(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.iRegionId)
}

// required int32 iPsnymCertLen = 4 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_ipsnymcertlen() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_ipsnymcertlen() const {
  return _internal_has_ipsnymcertlen();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_ipsnymcertlen() {
  ipsnymcertlen_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::_internal_ipsnymcertlen() const {
  return ipsnymcertlen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::ipsnymcertlen() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.iPsnymCertLen)
  return _internal_ipsnymcertlen();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ipsnymcertlen_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_ipsnymcertlen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ipsnymcertlen(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.iPsnymCertLen)
}

// required string strPsnymCert = 5 [default = ""];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_strpsnymcert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_strpsnymcert() const {
  return _internal_has_strpsnymcert();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_strpsnymcert() {
  strpsnymcert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgUpgradeConfigurationReq_Client2Server::strpsnymcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
  return _internal_strpsnymcert();
}
inline void msgUpgradeConfigurationReq_Client2Server::set_strpsnymcert(const std::string& value) {
  _internal_set_strpsnymcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}
inline std::string* msgUpgradeConfigurationReq_Client2Server::mutable_strpsnymcert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
  return _internal_mutable_strpsnymcert();
}
inline const std::string& msgUpgradeConfigurationReq_Client2Server::_internal_strpsnymcert() const {
  return strpsnymcert_.Get();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_strpsnymcert(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgUpgradeConfigurationReq_Client2Server::set_strpsnymcert(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}
inline void msgUpgradeConfigurationReq_Client2Server::set_strpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}
inline void msgUpgradeConfigurationReq_Client2Server::set_strpsnymcert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}
inline std::string* msgUpgradeConfigurationReq_Client2Server::_internal_mutable_strpsnymcert() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgUpgradeConfigurationReq_Client2Server::release_strpsnymcert() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
  if (!_internal_has_strpsnymcert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgUpgradeConfigurationReq_Client2Server::set_allocated_strpsnymcert(std::string* strpsnymcert) {
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}
inline std::string* msgUpgradeConfigurationReq_Client2Server::unsafe_arena_release_strpsnymcert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgUpgradeConfigurationReq_Client2Server::unsafe_arena_set_allocated_strpsnymcert(
    std::string* strpsnymcert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcert != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationReq_Client2Server.strPsnymCert)
}

// required int32 iNonce = 6 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationReq_Client2Server::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.iNonce)
  return _internal_inonce();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inonce_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.iNonce)
}

// required int64 tTimeStamp = 7 [default = -1];
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgUpgradeConfigurationReq_Client2Server::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgUpgradeConfigurationReq_Client2Server::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgUpgradeConfigurationReq_Client2Server::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ttimestamp_ = value;
}
inline void msgUpgradeConfigurationReq_Client2Server::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationReq_Client2Server.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 8;
inline bool msgUpgradeConfigurationReq_Client2Server::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationReq_Client2Server::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgUpgradeConfigurationReq_Client2Server::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgUpgradeConfigurationReq_Client2Server::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgUpgradeConfigurationReq_Client2Server::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationReq_Client2Server.stSign)
  return _internal_stsign();
}
inline void msgUpgradeConfigurationReq_Client2Server::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationReq_Client2Server.stSign)
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationReq_Client2Server::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationReq_Client2Server::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationReq_Client2Server.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationReq_Client2Server::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationReq_Client2Server::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationReq_Client2Server.stSign)
  return _internal_mutable_stsign();
}
inline void msgUpgradeConfigurationReq_Client2Server::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationReq_Client2Server.stSign)
}

// -------------------------------------------------------------------

// msgUpgradeConfigurationRes_Server2Client

// required int32 iReqType = 1 [default = -1];
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationRes_Server2Client::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationRes_Server2Client::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.iReqType)
  return _internal_ireqtype();
}
inline void msgUpgradeConfigurationRes_Server2Client::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  ireqtype_ = value;
}
inline void msgUpgradeConfigurationRes_Server2Client::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationRes_Server2Client.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgUpgradeConfigurationRes_Server2Client::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgUpgradeConfigurationRes_Server2Client::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stSigner)
  return _internal_stsigner();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stSigner)
}
inline ::interfaces::msgSignerInfo* msgUpgradeConfigurationRes_Server2Client::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgUpgradeConfigurationRes_Server2Client::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stSigner)
}

// required .interfaces.msgVehicleConfig stVehConfig = 3;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_stvehconfig() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stvehconfig_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_stvehconfig() const {
  return _internal_has_stvehconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_stvehconfig() {
  if (stvehconfig_ != nullptr) stvehconfig_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgVehicleConfig& msgUpgradeConfigurationRes_Server2Client::_internal_stvehconfig() const {
  const ::interfaces::msgVehicleConfig* p = stvehconfig_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgVehicleConfig*>(
      &::interfaces::_msgVehicleConfig_default_instance_);
}
inline const ::interfaces::msgVehicleConfig& msgUpgradeConfigurationRes_Server2Client::stvehconfig() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stVehConfig)
  return _internal_stvehconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_stvehconfig(
    ::interfaces::msgVehicleConfig* stvehconfig) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stvehconfig_);
  }
  stvehconfig_ = stvehconfig;
  if (stvehconfig) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stVehConfig)
}
inline ::interfaces::msgVehicleConfig* msgUpgradeConfigurationRes_Server2Client::release_stvehconfig() {
  auto temp = unsafe_arena_release_stvehconfig();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgVehicleConfig* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_stvehconfig() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stVehConfig)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgVehicleConfig* temp = stvehconfig_;
  stvehconfig_ = nullptr;
  return temp;
}
inline ::interfaces::msgVehicleConfig* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_stvehconfig() {
  _has_bits_[0] |= 0x00000002u;
  if (stvehconfig_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgVehicleConfig>(GetArena());
    stvehconfig_ = p;
  }
  return stvehconfig_;
}
inline ::interfaces::msgVehicleConfig* msgUpgradeConfigurationRes_Server2Client::mutable_stvehconfig() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stVehConfig)
  return _internal_mutable_stvehconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_stvehconfig(::interfaces::msgVehicleConfig* stvehconfig) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stvehconfig_;
  }
  if (stvehconfig) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stvehconfig);
    if (message_arena != submessage_arena) {
      stvehconfig = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stvehconfig, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stvehconfig_ = stvehconfig;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stVehConfig)
}

// required .interfaces.msgPoliceConfig stPoliceConfig = 4;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_stpoliceconfig() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stpoliceconfig_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_stpoliceconfig() const {
  return _internal_has_stpoliceconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_stpoliceconfig() {
  if (stpoliceconfig_ != nullptr) stpoliceconfig_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgPoliceConfig& msgUpgradeConfigurationRes_Server2Client::_internal_stpoliceconfig() const {
  const ::interfaces::msgPoliceConfig* p = stpoliceconfig_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgPoliceConfig*>(
      &::interfaces::_msgPoliceConfig_default_instance_);
}
inline const ::interfaces::msgPoliceConfig& msgUpgradeConfigurationRes_Server2Client::stpoliceconfig() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stPoliceConfig)
  return _internal_stpoliceconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_stpoliceconfig(
    ::interfaces::msgPoliceConfig* stpoliceconfig) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stpoliceconfig_);
  }
  stpoliceconfig_ = stpoliceconfig;
  if (stpoliceconfig) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stPoliceConfig)
}
inline ::interfaces::msgPoliceConfig* msgUpgradeConfigurationRes_Server2Client::release_stpoliceconfig() {
  auto temp = unsafe_arena_release_stpoliceconfig();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgPoliceConfig* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_stpoliceconfig() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stPoliceConfig)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgPoliceConfig* temp = stpoliceconfig_;
  stpoliceconfig_ = nullptr;
  return temp;
}
inline ::interfaces::msgPoliceConfig* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_stpoliceconfig() {
  _has_bits_[0] |= 0x00000004u;
  if (stpoliceconfig_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgPoliceConfig>(GetArena());
    stpoliceconfig_ = p;
  }
  return stpoliceconfig_;
}
inline ::interfaces::msgPoliceConfig* msgUpgradeConfigurationRes_Server2Client::mutable_stpoliceconfig() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stPoliceConfig)
  return _internal_mutable_stpoliceconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_stpoliceconfig(::interfaces::msgPoliceConfig* stpoliceconfig) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stpoliceconfig_;
  }
  if (stpoliceconfig) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stpoliceconfig);
    if (message_arena != submessage_arena) {
      stpoliceconfig = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stpoliceconfig, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stpoliceconfig_ = stpoliceconfig;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stPoliceConfig)
}

// required .interfaces.msgVPKILibConfig stVPKILibConfig = 5;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_stvpkilibconfig() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stvpkilibconfig_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_stvpkilibconfig() const {
  return _internal_has_stvpkilibconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_stvpkilibconfig() {
  if (stvpkilibconfig_ != nullptr) stvpkilibconfig_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgVPKILibConfig& msgUpgradeConfigurationRes_Server2Client::_internal_stvpkilibconfig() const {
  const ::interfaces::msgVPKILibConfig* p = stvpkilibconfig_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgVPKILibConfig*>(
      &::interfaces::_msgVPKILibConfig_default_instance_);
}
inline const ::interfaces::msgVPKILibConfig& msgUpgradeConfigurationRes_Server2Client::stvpkilibconfig() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stVPKILibConfig)
  return _internal_stvpkilibconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_stvpkilibconfig(
    ::interfaces::msgVPKILibConfig* stvpkilibconfig) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stvpkilibconfig_);
  }
  stvpkilibconfig_ = stvpkilibconfig;
  if (stvpkilibconfig) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stVPKILibConfig)
}
inline ::interfaces::msgVPKILibConfig* msgUpgradeConfigurationRes_Server2Client::release_stvpkilibconfig() {
  auto temp = unsafe_arena_release_stvpkilibconfig();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgVPKILibConfig* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_stvpkilibconfig() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stVPKILibConfig)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgVPKILibConfig* temp = stvpkilibconfig_;
  stvpkilibconfig_ = nullptr;
  return temp;
}
inline ::interfaces::msgVPKILibConfig* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_stvpkilibconfig() {
  _has_bits_[0] |= 0x00000008u;
  if (stvpkilibconfig_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgVPKILibConfig>(GetArena());
    stvpkilibconfig_ = p;
  }
  return stvpkilibconfig_;
}
inline ::interfaces::msgVPKILibConfig* msgUpgradeConfigurationRes_Server2Client::mutable_stvpkilibconfig() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stVPKILibConfig)
  return _internal_mutable_stvpkilibconfig();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_stvpkilibconfig(::interfaces::msgVPKILibConfig* stvpkilibconfig) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stvpkilibconfig_;
  }
  if (stvpkilibconfig) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stvpkilibconfig);
    if (message_arena != submessage_arena) {
      stvpkilibconfig = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stvpkilibconfig, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stvpkilibconfig_ = stvpkilibconfig;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stVPKILibConfig)
}

// required int32 iNonce = 6 [default = -1];
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationRes_Server2Client::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgUpgradeConfigurationRes_Server2Client::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.iNonce)
  return _internal_inonce();
}
inline void msgUpgradeConfigurationRes_Server2Client::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  inonce_ = value;
}
inline void msgUpgradeConfigurationRes_Server2Client::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationRes_Server2Client.iNonce)
}

// required int64 tTimeStamp = 7 [default = -1];
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgUpgradeConfigurationRes_Server2Client::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgUpgradeConfigurationRes_Server2Client::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgUpgradeConfigurationRes_Server2Client::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  ttimestamp_ = value;
}
inline void msgUpgradeConfigurationRes_Server2Client::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgUpgradeConfigurationRes_Server2Client.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 8;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::interfaces::msgError& msgUpgradeConfigurationRes_Server2Client::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgUpgradeConfigurationRes_Server2Client::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stErrInfo)
}
inline ::interfaces::msgError* msgUpgradeConfigurationRes_Server2Client::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stErrInfo)
  _has_bits_[0] &= ~0x00000010u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000010u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgUpgradeConfigurationRes_Server2Client::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgUpgradeConfigurationRes_Server2Client::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgUpgradeConfigurationRes_Server2Client::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgUpgradeConfigurationRes_Server2Client::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::interfaces::msgSignature& msgUpgradeConfigurationRes_Server2Client::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgUpgradeConfigurationRes_Server2Client::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgUpgradeConfigurationRes_Server2Client.stSign)
  return _internal_stsign();
}
inline void msgUpgradeConfigurationRes_Server2Client::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stSign)
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationRes_Server2Client::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationRes_Server2Client::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgUpgradeConfigurationRes_Server2Client.stSign)
  _has_bits_[0] &= ~0x00000020u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationRes_Server2Client::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000020u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgUpgradeConfigurationRes_Server2Client::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgUpgradeConfigurationRes_Server2Client.stSign)
  return _internal_mutable_stsign();
}
inline void msgUpgradeConfigurationRes_Server2Client::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgUpgradeConfigurationRes_Server2Client.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionReq_Police2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionReq_Police2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionReq_Police2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_Police2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_Police2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionReq_Police2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_Police2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_Police2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_Police2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_Police2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_Police2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_Police2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_Police2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionReq_Police2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_Police2RA.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_Police2RA::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionReq_Police2RA::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.iNoOfX509CertToBeResolved)
}

// repeated string strX509Cert = 4;
inline int msgReversePsnymResolutionReq_Police2RA::_internal_strx509cert_size() const {
  return strx509cert_.size();
}
inline int msgReversePsnymResolutionReq_Police2RA::strx509cert_size() const {
  return _internal_strx509cert_size();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_strx509cert() {
  strx509cert_.Clear();
}
inline std::string* msgReversePsnymResolutionReq_Police2RA::add_strx509cert() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  return _internal_add_strx509cert();
}
inline const std::string& msgReversePsnymResolutionReq_Police2RA::_internal_strx509cert(int index) const {
  return strx509cert_.Get(index);
}
inline const std::string& msgReversePsnymResolutionReq_Police2RA::strx509cert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  return _internal_strx509cert(index);
}
inline std::string* msgReversePsnymResolutionReq_Police2RA::mutable_strx509cert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  return strx509cert_.Mutable(index);
}
inline void msgReversePsnymResolutionReq_Police2RA::set_strx509cert(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  strx509cert_.Mutable(index)->assign(value);
}
inline void msgReversePsnymResolutionReq_Police2RA::set_strx509cert(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  strx509cert_.Mutable(index)->assign(std::move(value));
}
inline void msgReversePsnymResolutionReq_Police2RA::set_strx509cert(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strx509cert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_Police2RA::set_strx509cert(int index, const char* value, size_t size) {
  strx509cert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline std::string* msgReversePsnymResolutionReq_Police2RA::_internal_add_strx509cert() {
  return strx509cert_.Add();
}
inline void msgReversePsnymResolutionReq_Police2RA::add_strx509cert(const std::string& value) {
  strx509cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_Police2RA::add_strx509cert(std::string&& value) {
  strx509cert_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_Police2RA::add_strx509cert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strx509cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_Police2RA::add_strx509cert(const char* value, size_t size) {
  strx509cert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgReversePsnymResolutionReq_Police2RA::strx509cert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  return strx509cert_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgReversePsnymResolutionReq_Police2RA::mutable_strx509cert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionReq_Police2RA.strX509Cert)
  return &strx509cert_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_Police2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionReq_Police2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionReq_Police2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_Police2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_Police2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionReq_Police2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionReq_Police2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_Police2RA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgReversePsnymResolutionReq_Police2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_Police2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionReq_Police2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_Police2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_Police2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_Police2RA.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionReq_Police2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_Police2RA.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_Police2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_Police2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_Police2RA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_Police2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_Police2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_Police2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionReq_Police2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_Police2RA.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionReq_RA2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_RA2LTCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_RA2LTCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2LTCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2LTCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2LTCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2LTCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iNoOfX509CertToBeResolved)
}

// repeated string strX509Cert = 4;
inline int msgReversePsnymResolutionReq_RA2LTCA::_internal_strx509cert_size() const {
  return strx509cert_.size();
}
inline int msgReversePsnymResolutionReq_RA2LTCA::strx509cert_size() const {
  return _internal_strx509cert_size();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_strx509cert() {
  strx509cert_.Clear();
}
inline std::string* msgReversePsnymResolutionReq_RA2LTCA::add_strx509cert() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  return _internal_add_strx509cert();
}
inline const std::string& msgReversePsnymResolutionReq_RA2LTCA::_internal_strx509cert(int index) const {
  return strx509cert_.Get(index);
}
inline const std::string& msgReversePsnymResolutionReq_RA2LTCA::strx509cert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  return _internal_strx509cert(index);
}
inline std::string* msgReversePsnymResolutionReq_RA2LTCA::mutable_strx509cert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  return strx509cert_.Mutable(index);
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_strx509cert(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  strx509cert_.Mutable(index)->assign(value);
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_strx509cert(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  strx509cert_.Mutable(index)->assign(std::move(value));
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_strx509cert(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strx509cert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_strx509cert(int index, const char* value, size_t size) {
  strx509cert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline std::string* msgReversePsnymResolutionReq_RA2LTCA::_internal_add_strx509cert() {
  return strx509cert_.Add();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::add_strx509cert(const std::string& value) {
  strx509cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_RA2LTCA::add_strx509cert(std::string&& value) {
  strx509cert_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_RA2LTCA::add_strx509cert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strx509cert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline void msgReversePsnymResolutionReq_RA2LTCA::add_strx509cert(const char* value, size_t size) {
  strx509cert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgReversePsnymResolutionReq_RA2LTCA::strx509cert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  return strx509cert_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgReversePsnymResolutionReq_RA2LTCA::mutable_strx509cert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionReq_RA2LTCA.strX509Cert)
  return &strx509cert_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_RA2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_RA2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2LTCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgReversePsnymResolutionReq_RA2LTCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2LTCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_RA2LTCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_RA2LTCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2LTCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2LTCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2LTCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2LTCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionReq_RA2LTCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2LTCA.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_LTCA2RA_msgTicket

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicket::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicket::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicketSerialNo)
}

// required string strTicket = 2 [default = ""];
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicket::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicket::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
  return _internal_strticket();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000002u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicket::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicket::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket.strTicket)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution

// required string strVehX509CertSerialNo = 1 [default = ""];
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_has_strvehx509certserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::has_strvehx509certserialno() const {
  return _internal_has_strvehx509certserialno();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::clear_strvehx509certserialno() {
  strvehx509certserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::strvehx509certserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
  return _internal_strvehx509certserialno();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_strvehx509certserialno(const std::string& value) {
  _internal_set_strvehx509certserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::mutable_strvehx509certserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
  return _internal_mutable_strvehx509certserialno();
}
inline const std::string& msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_strvehx509certserialno() const {
  return strvehx509certserialno_.Get();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_set_strvehx509certserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_strvehx509certserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strvehx509certserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_strvehx509certserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_strvehx509certserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strvehx509certserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_mutable_strvehx509certserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strvehx509certserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
  if (!_internal_has_strvehx509certserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strvehx509certserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_allocated_strvehx509certserialno(std::string* strvehx509certserialno) {
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strvehx509certserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strvehx509certserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::unsafe_arena_release_strvehx509certserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strvehx509certserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::unsafe_arena_set_allocated_strvehx509certserialno(
    std::string* strvehx509certserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strvehx509certserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strvehx509certserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strvehx509certserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.strVehX509CertSerialNo)
}

// required int32 iNoOfResolvedTicket = 2 [default = -1];
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_has_inoofresolvedticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::has_inoofresolvedticket() const {
  return _internal_has_inoofresolvedticket();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::clear_inoofresolvedticket() {
  inoofresolvedticket_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_inoofresolvedticket() const {
  return inoofresolvedticket_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::inoofresolvedticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.iNoOfResolvedTicket)
  return _internal_inoofresolvedticket();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  inoofresolvedticket_ = value;
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofresolvedticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.iNoOfResolvedTicket)
}

// repeated .interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicket pstTicketInfo = 3;
inline int msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_pstticketinfo_size() const {
  return pstticketinfo_.size();
}
inline int msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::pstticketinfo_size() const {
  return _internal_pstticketinfo_size();
}
inline void msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::clear_pstticketinfo() {
  pstticketinfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::mutable_pstticketinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket >*
msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::mutable_pstticketinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.pstTicketInfo)
  return &pstticketinfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket& msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_pstticketinfo(int index) const {
  return pstticketinfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket& msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::pstticketinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.pstTicketInfo)
  return _internal_pstticketinfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::_internal_add_pstticketinfo() {
  return pstticketinfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket* msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::add_pstticketinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.pstTicketInfo)
  return _internal_add_pstticketinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicket >&
msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution::pstticketinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_;
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_LTCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_LTCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_LTCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_LTCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_LTCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_LTCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iNoOfX509CertToBeResolved)
}

// repeated .interfaces.msgReversePsnymResolutionRes_LTCA2RA.msgTicketResolution pstTicketResolutionInfo = 4;
inline int msgReversePsnymResolutionRes_LTCA2RA::_internal_pstticketresolutioninfo_size() const {
  return pstticketresolutioninfo_.size();
}
inline int msgReversePsnymResolutionRes_LTCA2RA::pstticketresolutioninfo_size() const {
  return _internal_pstticketresolutioninfo_size();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_pstticketresolutioninfo() {
  pstticketresolutioninfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* msgReversePsnymResolutionRes_LTCA2RA::mutable_pstticketresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution >*
msgReversePsnymResolutionRes_LTCA2RA::mutable_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_LTCA2RA.pstTicketResolutionInfo)
  return &pstticketresolutioninfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& msgReversePsnymResolutionRes_LTCA2RA::_internal_pstticketresolutioninfo(int index) const {
  return pstticketresolutioninfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution& msgReversePsnymResolutionRes_LTCA2RA::pstticketresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.pstTicketResolutionInfo)
  return _internal_pstticketresolutioninfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* msgReversePsnymResolutionRes_LTCA2RA::_internal_add_pstticketresolutioninfo() {
  return pstticketresolutioninfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution* msgReversePsnymResolutionRes_LTCA2RA::add_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_LTCA2RA.pstTicketResolutionInfo)
  return _internal_add_pstticketresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_LTCA2RA_msgTicketResolution >&
msgReversePsnymResolutionRes_LTCA2RA::pstticketresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_LTCA2RA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_LTCA2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_LTCA2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_LTCA2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_LTCA2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 7;
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_LTCA2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_LTCA2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stErrInfo)
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_LTCA2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_LTCA2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_LTCA2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 8;
inline bool msgReversePsnymResolutionRes_LTCA2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_LTCA2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_LTCA2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_LTCA2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_LTCA2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_LTCA2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_LTCA2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_LTCA2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionRes_LTCA2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_LTCA2RA.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionReq_RA2PCA_msgTicket

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicket::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReversePsnymResolutionReq_RA2PCA_msgTicket::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicketSerialNo)
}

// required string strTicket = 2 [default = ""];
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_has_strticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicket::has_strticket() const {
  return _internal_has_strticket();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::clear_strticket() {
  strticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgReversePsnymResolutionReq_RA2PCA_msgTicket::strticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
  return _internal_strticket();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticket(const std::string& value) {
  _internal_set_strticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::mutable_strticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
  return _internal_mutable_strticket();
}
inline const std::string& msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_strticket() const {
  return strticket_.Get();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_set_strticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_strticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::_internal_mutable_strticket() {
  _has_bits_[0] |= 0x00000002u;
  return strticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::release_strticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
  if (!_internal_has_strticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::set_allocated_strticket(std::string* strticket) {
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}
inline std::string* msgReversePsnymResolutionReq_RA2PCA_msgTicket::unsafe_arena_release_strticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicket::unsafe_arena_set_allocated_strticket(
    std::string* strticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket.strTicket)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution

// required int32 iNoOfResolvedTicket = 1 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_has_inoofresolvedticket() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::has_inoofresolvedticket() const {
  return _internal_has_inoofresolvedticket();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::clear_inoofresolvedticket() {
  inoofresolvedticket_ = -1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_inoofresolvedticket() const {
  return inoofresolvedticket_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::inoofresolvedticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.iNoOfResolvedTicket)
  return _internal_inoofresolvedticket();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  inoofresolvedticket_ = value;
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::set_inoofresolvedticket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofresolvedticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.iNoOfResolvedTicket)
}

// repeated .interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicket pstTicketInfo = 2;
inline int msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_pstticketinfo_size() const {
  return pstticketinfo_.size();
}
inline int msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::pstticketinfo_size() const {
  return _internal_pstticketinfo_size();
}
inline void msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::clear_pstticketinfo() {
  pstticketinfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::mutable_pstticketinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket >*
msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::mutable_pstticketinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.pstTicketInfo)
  return &pstticketinfo_;
}
inline const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket& msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_pstticketinfo(int index) const {
  return pstticketinfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket& msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::pstticketinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.pstTicketInfo)
  return _internal_pstticketinfo(index);
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::_internal_add_pstticketinfo() {
  return pstticketinfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket* msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::add_pstticketinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.pstTicketInfo)
  return _internal_add_pstticketinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicket >&
msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution::pstticketinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_;
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionReq_RA2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionReq_RA2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_RA2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionReq_RA2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionReq_RA2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionReq_RA2PCA::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.iNoOfX509CertToBeResolved)
}

// repeated .interfaces.msgReversePsnymResolutionReq_RA2PCA.msgTicketResolution pstTicketResolutionInfo = 4;
inline int msgReversePsnymResolutionReq_RA2PCA::_internal_pstticketresolutioninfo_size() const {
  return pstticketresolutioninfo_.size();
}
inline int msgReversePsnymResolutionReq_RA2PCA::pstticketresolutioninfo_size() const {
  return _internal_pstticketresolutioninfo_size();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_pstticketresolutioninfo() {
  pstticketresolutioninfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* msgReversePsnymResolutionReq_RA2PCA::mutable_pstticketresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution >*
msgReversePsnymResolutionReq_RA2PCA::mutable_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionReq_RA2PCA.pstTicketResolutionInfo)
  return &pstticketresolutioninfo_;
}
inline const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& msgReversePsnymResolutionReq_RA2PCA::_internal_pstticketresolutioninfo(int index) const {
  return pstticketresolutioninfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution& msgReversePsnymResolutionReq_RA2PCA::pstticketresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.pstTicketResolutionInfo)
  return _internal_pstticketresolutioninfo(index);
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* msgReversePsnymResolutionReq_RA2PCA::_internal_add_pstticketresolutioninfo() {
  return pstticketresolutioninfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution* msgReversePsnymResolutionReq_RA2PCA::add_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionReq_RA2PCA.pstTicketResolutionInfo)
  return _internal_add_pstticketresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionReq_RA2PCA_msgTicketResolution >&
msgReversePsnymResolutionReq_RA2PCA::pstticketresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionReq_RA2PCA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionReq_RA2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionReq_RA2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_RA2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionReq_RA2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionReq_RA2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionReq_RA2PCA.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgReversePsnymResolutionReq_RA2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionReq_RA2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionReq_RA2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_RA2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionReq_RA2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionReq_RA2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSign)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000002u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionReq_RA2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionReq_RA2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionReq_RA2PCA.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_PCA2RA_msgPsnym

// required string strTicketSerialNo = 1 [default = ""];
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnym::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnym::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strTicketSerialNo)
}

// repeated string strPsnym = 2;
inline int msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_strpsnym_size() const {
  return strpsnym_.size();
}
inline int msgReversePsnymResolutionRes_PCA2RA_msgPsnym::strpsnym_size() const {
  return _internal_strpsnym_size();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::clear_strpsnym() {
  strpsnym_.Clear();
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::add_strpsnym() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  return _internal_add_strpsnym();
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_strpsnym(int index) const {
  return strpsnym_.Get(index);
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnym::strpsnym(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  return _internal_strpsnym(index);
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::mutable_strpsnym(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  return strpsnym_.Mutable(index);
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strpsnym(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  strpsnym_.Mutable(index)->assign(value);
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strpsnym(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  strpsnym_.Mutable(index)->assign(std::move(value));
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strpsnym(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnym_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::set_strpsnym(int index, const char* value, size_t size) {
  strpsnym_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnym::_internal_add_strpsnym() {
  return strpsnym_.Add();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::add_strpsnym(const std::string& value) {
  strpsnym_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::add_strpsnym(std::string&& value) {
  strpsnym_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::add_strpsnym(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnym_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnym::add_strpsnym(const char* value, size_t size) {
  strpsnym_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgReversePsnymResolutionRes_PCA2RA_msgPsnym::strpsnym() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  return strpsnym_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgReversePsnymResolutionRes_PCA2RA_msgPsnym::mutable_strpsnym() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym.strPsnym)
  return &strpsnym_;
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution

// required int32 iNoOfResolvedPsnyms = 1 [default = -1];
inline bool msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_has_inoofresolvedpsnyms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::has_inoofresolvedpsnyms() const {
  return _internal_has_inoofresolvedpsnyms();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::clear_inoofresolvedpsnyms() {
  inoofresolvedpsnyms_ = -1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_inoofresolvedpsnyms() const {
  return inoofresolvedpsnyms_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::inoofresolvedpsnyms() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.iNoOfResolvedPsnyms)
  return _internal_inoofresolvedpsnyms();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  inoofresolvedpsnyms_ = value;
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofresolvedpsnyms(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.iNoOfResolvedPsnyms)
}

// repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnym pstTicketInfo = 2;
inline int msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_pstticketinfo_size() const {
  return pstticketinfo_.size();
}
inline int msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::pstticketinfo_size() const {
  return _internal_pstticketinfo_size();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::clear_pstticketinfo() {
  pstticketinfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::mutable_pstticketinfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym >*
msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::mutable_pstticketinfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.pstTicketInfo)
  return &pstticketinfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym& msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_pstticketinfo(int index) const {
  return pstticketinfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym& msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::pstticketinfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.pstTicketInfo)
  return _internal_pstticketinfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::_internal_add_pstticketinfo() {
  return pstticketinfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym* msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::add_pstticketinfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.pstTicketInfo)
  return _internal_add_pstticketinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnym >&
msgReversePsnymResolutionRes_PCA2RA_msgTicketResolution::pstticketinfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgTicketResolution.pstTicketInfo)
  return pstticketinfo_;
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution

// required string strPsnymCertSerialNo = 1 [default = ""];
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strpsnymcertserialno() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strpsnymcertserialno() const {
  return _internal_has_strpsnymcertserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strpsnymcertserialno() {
  strpsnymcertserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::strpsnymcertserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  return _internal_strpsnymcertserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const std::string& value) {
  _internal_set_strpsnymcertserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  return _internal_mutable_strpsnymcertserialno();
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strpsnymcertserialno() const {
  return strpsnymcertserialno_.Get();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strpsnymcertserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strpsnymcertserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpsnymcertserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strpsnymcertserialno() {
  _has_bits_[0] |= 0x00000001u;
  return strpsnymcertserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  if (!_internal_has_strpsnymcertserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strpsnymcertserialno(std::string* strpsnymcertserialno) {
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpsnymcertserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strpsnymcertserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpsnymcertserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strpsnymcertserialno(
    std::string* strpsnymcertserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpsnymcertserialno != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpsnymcertserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpsnymcertserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strPsnymCertSerialNo)
}

// required string strTicketSerialNo = 2 [default = ""];
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strticketserialno() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strticketserialno() const {
  return _internal_has_strticketserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strticketserialno() {
  strticketserialno_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::strticketserialno() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_strticketserialno();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const std::string& value) {
  _internal_set_strticketserialno(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strticketserialno() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  return _internal_mutable_strticketserialno();
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strticketserialno() const {
  return strticketserialno_.Get();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strticketserialno(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketserialno(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strticketserialno_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strticketserialno() {
  _has_bits_[0] |= 0x00000002u;
  return strticketserialno_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strticketserialno() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  if (!_internal_has_strticketserialno()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strticketserialno_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strticketserialno(std::string* strticketserialno) {
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketserialno_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketserialno,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strticketserialno() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strticketserialno_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketserialno(
    std::string* strticketserialno) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketserialno != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strticketserialno_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketserialno, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketSerialNo)
}

// required string strTicketIdentifiableKey = 3 [default = ""];
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_has_strticketidentifiablekey() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::has_strticketidentifiablekey() const {
  return _internal_has_strticketidentifiablekey();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::clear_strticketidentifiablekey() {
  strticketidentifiablekey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::strticketidentifiablekey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_strticketidentifiablekey();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const std::string& value) {
  _internal_set_strticketidentifiablekey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::mutable_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  return _internal_mutable_strticketidentifiablekey();
}
inline const std::string& msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_strticketidentifiablekey() const {
  return strticketidentifiablekey_.Get();
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_set_strticketidentifiablekey(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_strticketidentifiablekey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  strticketidentifiablekey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::_internal_mutable_strticketidentifiablekey() {
  _has_bits_[0] |= 0x00000004u;
  return strticketidentifiablekey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  if (!_internal_has_strticketidentifiablekey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::set_allocated_strticketidentifiablekey(std::string* strticketidentifiablekey) {
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strticketidentifiablekey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}
inline std::string* msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_release_strticketidentifiablekey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return strticketidentifiablekey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution::unsafe_arena_set_allocated_strticketidentifiablekey(
    std::string* strticketidentifiablekey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strticketidentifiablekey != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  strticketidentifiablekey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strticketidentifiablekey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution.strTicketIdentifiableKey)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_PCA2RA

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionRes_PCA2RA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_PCA2RA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_PCA2RA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_PCA2RA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_PCA2RA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_PCA2RA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_PCA2RA::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.iNoOfX509CertToBeResolved)
}

// repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution pstTicketResolutionInfo = 4;
inline int msgReversePsnymResolutionRes_PCA2RA::_internal_pstticketresolutioninfo_size() const {
  return pstticketresolutioninfo_.size();
}
inline int msgReversePsnymResolutionRes_PCA2RA::pstticketresolutioninfo_size() const {
  return _internal_pstticketresolutioninfo_size();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_pstticketresolutioninfo() {
  pstticketresolutioninfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::mutable_pstticketresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >*
msgReversePsnymResolutionRes_PCA2RA::mutable_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstTicketResolutionInfo)
  return &pstticketresolutioninfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& msgReversePsnymResolutionRes_PCA2RA::_internal_pstticketresolutioninfo(int index) const {
  return pstticketresolutioninfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& msgReversePsnymResolutionRes_PCA2RA::pstticketresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstTicketResolutionInfo)
  return _internal_pstticketresolutioninfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::_internal_add_pstticketresolutioninfo() {
  return pstticketresolutioninfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::add_pstticketresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstTicketResolutionInfo)
  return _internal_add_pstticketresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >&
msgReversePsnymResolutionRes_PCA2RA::pstticketresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstTicketResolutionInfo)
  return pstticketresolutioninfo_;
}

// repeated .interfaces.msgReversePsnymResolutionRes_PCA2RA.msgPsnymResolution pstPsnymResolutionInfo = 5;
inline int msgReversePsnymResolutionRes_PCA2RA::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgReversePsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >*
msgReversePsnymResolutionRes_PCA2RA::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& msgReversePsnymResolutionRes_PCA2RA::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution& msgReversePsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution* msgReversePsnymResolutionRes_PCA2RA::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_PCA2RA_msgPsnymResolution >&
msgReversePsnymResolutionRes_PCA2RA::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_PCA2RA.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iNonce = 6 [default = -1];
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_PCA2RA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionRes_PCA2RA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.iNonce)
}

// required int64 tTimeStamp = 7 [default = -1];
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_PCA2RA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_PCA2RA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionRes_PCA2RA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_PCA2RA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 8;
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_PCA2RA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_PCA2RA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stErrInfo)
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_PCA2RA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_PCA2RA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_PCA2RA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 9;
inline bool msgReversePsnymResolutionRes_PCA2RA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_PCA2RA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionRes_PCA2RA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_PCA2RA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_PCA2RA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_PCA2RA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_PCA2RA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_PCA2RA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_PCA2RA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionRes_PCA2RA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_PCA2RA.stSign)
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution

// required int32 iNoOfResolvedPsnyms = 1 [default = -1];
inline bool msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_has_inoofresolvedpsnyms() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::has_inoofresolvedpsnyms() const {
  return _internal_has_inoofresolvedpsnyms();
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::clear_inoofresolvedpsnyms() {
  inoofresolvedpsnyms_ = -1;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_inoofresolvedpsnyms() const {
  return inoofresolvedpsnyms_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::inoofresolvedpsnyms() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.iNoOfResolvedPsnyms)
  return _internal_inoofresolvedpsnyms();
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  inoofresolvedpsnyms_ = value;
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::set_inoofresolvedpsnyms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofresolvedpsnyms(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.iNoOfResolvedPsnyms)
}

// repeated string strPsnymCert = 2;
inline int msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_strpsnymcert_size() const {
  return strpsnymcert_.size();
}
inline int msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::strpsnymcert_size() const {
  return _internal_strpsnymcert_size();
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::clear_strpsnymcert() {
  strpsnymcert_.Clear();
}
inline std::string* msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::add_strpsnymcert() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  return _internal_add_strpsnymcert();
}
inline const std::string& msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_strpsnymcert(int index) const {
  return strpsnymcert_.Get(index);
}
inline const std::string& msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::strpsnymcert(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  return _internal_strpsnymcert(index);
}
inline std::string* msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::mutable_strpsnymcert(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  return strpsnymcert_.Mutable(index);
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymcert(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  strpsnymcert_.Mutable(index)->assign(value);
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymcert(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  strpsnymcert_.Mutable(index)->assign(std::move(value));
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymcert(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymcert_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::set_strpsnymcert(int index, const char* value, size_t size) {
  strpsnymcert_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline std::string* msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::_internal_add_strpsnymcert() {
  return strpsnymcert_.Add();
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::add_strpsnymcert(const std::string& value) {
  strpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::add_strpsnymcert(std::string&& value) {
  strpsnymcert_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::add_strpsnymcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strpsnymcert_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline void msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::add_strpsnymcert(const char* value, size_t size) {
  strpsnymcert_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::strpsnymcert() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  return strpsnymcert_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution::mutable_strpsnymcert() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution.strPsnymCert)
  return &strpsnymcert_;
}

// -------------------------------------------------------------------

// msgReversePsnymResolutionRes_RA2Police

// required int32 iReqType = 1 [default = -1];
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.iReqType)
  return _internal_ireqtype();
}
inline void msgReversePsnymResolutionRes_RA2Police::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgReversePsnymResolutionRes_RA2Police::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_RA2Police::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgReversePsnymResolutionRes_RA2Police::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.stSigner)
  return _internal_stsigner();
}
inline void msgReversePsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stSigner)
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_RA2Police::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_RA2Police::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_RA2Police.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_RA2Police::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgReversePsnymResolutionRes_RA2Police::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgReversePsnymResolutionRes_RA2Police::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stSigner)
}

// required int32 iNoOfX509CertToBeResolved = 3 [default = -1];
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_inoofx509certtoberesolved() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_inoofx509certtoberesolved() const {
  return _internal_has_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_inoofx509certtoberesolved() {
  inoofx509certtoberesolved_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::_internal_inoofx509certtoberesolved() const {
  return inoofx509certtoberesolved_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::inoofx509certtoberesolved() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.iNoOfX509CertToBeResolved)
  return _internal_inoofx509certtoberesolved();
}
inline void msgReversePsnymResolutionRes_RA2Police::_internal_set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inoofx509certtoberesolved_ = value;
}
inline void msgReversePsnymResolutionRes_RA2Police::set_inoofx509certtoberesolved(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inoofx509certtoberesolved(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.iNoOfX509CertToBeResolved)
}

// repeated .interfaces.msgReversePsnymResolutionRes_RA2Police.msgPsnymResolution pstPsnymResolutionInfo = 4;
inline int msgReversePsnymResolutionRes_RA2Police::_internal_pstpsnymresolutioninfo_size() const {
  return pstpsnymresolutioninfo_.size();
}
inline int msgReversePsnymResolutionRes_RA2Police::pstpsnymresolutioninfo_size() const {
  return _internal_pstpsnymresolutioninfo_size();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_pstpsnymresolutioninfo() {
  pstpsnymresolutioninfo_.Clear();
}
inline ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* msgReversePsnymResolutionRes_RA2Police::mutable_pstpsnymresolutioninfo(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution >*
msgReversePsnymResolutionRes_RA2Police::mutable_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.msgReversePsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return &pstpsnymresolutioninfo_;
}
inline const ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& msgReversePsnymResolutionRes_RA2Police::_internal_pstpsnymresolutioninfo(int index) const {
  return pstpsnymresolutioninfo_.Get(index);
}
inline const ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution& msgReversePsnymResolutionRes_RA2Police::pstpsnymresolutioninfo(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return _internal_pstpsnymresolutioninfo(index);
}
inline ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* msgReversePsnymResolutionRes_RA2Police::_internal_add_pstpsnymresolutioninfo() {
  return pstpsnymresolutioninfo_.Add();
}
inline ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution* msgReversePsnymResolutionRes_RA2Police::add_pstpsnymresolutioninfo() {
  // @@protoc_insertion_point(field_add:interfaces.msgReversePsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return _internal_add_pstpsnymresolutioninfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::interfaces::msgReversePsnymResolutionRes_RA2Police_msgPsnymResolution >&
msgReversePsnymResolutionRes_RA2Police::pstpsnymresolutioninfo() const {
  // @@protoc_insertion_point(field_list:interfaces.msgReversePsnymResolutionRes_RA2Police.pstPsnymResolutionInfo)
  return pstpsnymresolutioninfo_;
}

// required int32 iNonce = 5 [default = -1];
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgReversePsnymResolutionRes_RA2Police::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.iNonce)
  return _internal_inonce();
}
inline void msgReversePsnymResolutionRes_RA2Police::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  inonce_ = value;
}
inline void msgReversePsnymResolutionRes_RA2Police::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_RA2Police::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgReversePsnymResolutionRes_RA2Police::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgReversePsnymResolutionRes_RA2Police::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgReversePsnymResolutionRes_RA2Police::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgReversePsnymResolutionRes_RA2Police.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 7;
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_RA2Police::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgReversePsnymResolutionRes_RA2Police::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgReversePsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stErrInfo)
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_RA2Police::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_RA2Police::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_RA2Police.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_RA2Police::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgReversePsnymResolutionRes_RA2Police::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgReversePsnymResolutionRes_RA2Police::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 8;
inline bool msgReversePsnymResolutionRes_RA2Police::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgReversePsnymResolutionRes_RA2Police::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgReversePsnymResolutionRes_RA2Police::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_RA2Police::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgReversePsnymResolutionRes_RA2Police::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgReversePsnymResolutionRes_RA2Police.stSign)
  return _internal_stsign();
}
inline void msgReversePsnymResolutionRes_RA2Police::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stSign)
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_RA2Police::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_RA2Police::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgReversePsnymResolutionRes_RA2Police.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_RA2Police::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgReversePsnymResolutionRes_RA2Police::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgReversePsnymResolutionRes_RA2Police.stSign)
  return _internal_mutable_stsign();
}
inline void msgReversePsnymResolutionRes_RA2Police::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgReversePsnymResolutionRes_RA2Police.stSign)
}

// -------------------------------------------------------------------

// msgTicketProvisionValidationReq_LTCA2TVR

// required int32 iReqType = 1 [default = -1];
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationReq_LTCA2TVR::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationReq_LTCA2TVR::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.iReqType)
  return _internal_ireqtype();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignerInfo& msgTicketProvisionValidationReq_LTCA2TVR::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgTicketProvisionValidationReq_LTCA2TVR::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSigner)
  return _internal_stsigner();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSigner)
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationReq_LTCA2TVR::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSigner)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationReq_LTCA2TVR::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000004u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationReq_LTCA2TVR::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSigner)
}

// required string strLTCAECPubKey = 3 [default = ""];
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_strltcaecpubkey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_strltcaecpubkey() const {
  return _internal_has_strltcaecpubkey();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_strltcaecpubkey() {
  strltcaecpubkey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgTicketProvisionValidationReq_LTCA2TVR::strltcaecpubkey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
  return _internal_strltcaecpubkey();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strltcaecpubkey(const std::string& value) {
  _internal_set_strltcaecpubkey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::mutable_strltcaecpubkey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
  return _internal_mutable_strltcaecpubkey();
}
inline const std::string& msgTicketProvisionValidationReq_LTCA2TVR::_internal_strltcaecpubkey() const {
  return strltcaecpubkey_.Get();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::_internal_set_strltcaecpubkey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strltcaecpubkey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strltcaecpubkey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strltcaecpubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strltcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strltcaecpubkey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strltcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::_internal_mutable_strltcaecpubkey() {
  _has_bits_[0] |= 0x00000001u;
  return strltcaecpubkey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::release_strltcaecpubkey() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
  if (!_internal_has_strltcaecpubkey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strltcaecpubkey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_allocated_strltcaecpubkey(std::string* strltcaecpubkey) {
  if (strltcaecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaecpubkey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strltcaecpubkey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_release_strltcaecpubkey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strltcaecpubkey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_set_allocated_strltcaecpubkey(
    std::string* strltcaecpubkey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strltcaecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strltcaecpubkey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strltcaecpubkey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strLTCAECPubKey)
}

// required string strHashedVehiLTCert = 4 [default = ""];
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_strhashedvehiltcert() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_strhashedvehiltcert() const {
  return _internal_has_strhashedvehiltcert();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_strhashedvehiltcert() {
  strhashedvehiltcert_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgTicketProvisionValidationReq_LTCA2TVR::strhashedvehiltcert() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
  return _internal_strhashedvehiltcert();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strhashedvehiltcert(const std::string& value) {
  _internal_set_strhashedvehiltcert(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::mutable_strhashedvehiltcert() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
  return _internal_mutable_strhashedvehiltcert();
}
inline const std::string& msgTicketProvisionValidationReq_LTCA2TVR::_internal_strhashedvehiltcert() const {
  return strhashedvehiltcert_.Get();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::_internal_set_strhashedvehiltcert(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strhashedvehiltcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strhashedvehiltcert(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strhashedvehiltcert_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strhashedvehiltcert(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strhashedvehiltcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_strhashedvehiltcert(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strhashedvehiltcert_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::_internal_mutable_strhashedvehiltcert() {
  _has_bits_[0] |= 0x00000002u;
  return strhashedvehiltcert_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::release_strhashedvehiltcert() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
  if (!_internal_has_strhashedvehiltcert()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strhashedvehiltcert_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_allocated_strhashedvehiltcert(std::string* strhashedvehiltcert) {
  if (strhashedvehiltcert != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strhashedvehiltcert_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strhashedvehiltcert,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}
inline std::string* msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_release_strhashedvehiltcert() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strhashedvehiltcert_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_set_allocated_strhashedvehiltcert(
    std::string* strhashedvehiltcert) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strhashedvehiltcert != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strhashedvehiltcert_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strhashedvehiltcert, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.strHashedVehiLTCert)
}

// required int32 iNonce = 5 [default = -1];
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationReq_LTCA2TVR::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationReq_LTCA2TVR::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.iNonce)
  return _internal_inonce();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketProvisionValidationReq_LTCA2TVR::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketProvisionValidationReq_LTCA2TVR::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgTicketProvisionValidationReq_LTCA2TVR::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgTicketProvisionValidationReq_LTCA2TVR::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgTicketProvisionValidationReq_LTCA2TVR::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgTicketProvisionValidationReq_LTCA2TVR::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSign)
  return _internal_stsign();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSign)
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationReq_LTCA2TVR::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationReq_LTCA2TVR::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationReq_LTCA2TVR::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationReq_LTCA2TVR::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSign)
  return _internal_mutable_stsign();
}
inline void msgTicketProvisionValidationReq_LTCA2TVR::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationReq_LTCA2TVR.stSign)
}

// -------------------------------------------------------------------

// msgTicketProvisionValidationRes_TVR2LTCA

// required int32 iReqType = 1 [default = -1];
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationRes_TVR2LTCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationRes_TVR2LTCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.iReqType)
  return _internal_ireqtype();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgTicketProvisionValidationRes_TVR2LTCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgTicketProvisionValidationRes_TVR2LTCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSigner)
  return _internal_stsigner();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationRes_TVR2LTCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationRes_TVR2LTCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgTicketProvisionValidationRes_TVR2LTCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSigner)
}

// required uint32 chStatus = 3 [default = 0];
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_chstatus() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_chstatus() const {
  return _internal_has_chstatus();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_chstatus() {
  chstatus_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketProvisionValidationRes_TVR2LTCA::_internal_chstatus() const {
  return chstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgTicketProvisionValidationRes_TVR2LTCA::chstatus() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.chStatus)
  return _internal_chstatus();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::_internal_set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  chstatus_ = value;
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chstatus(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.chStatus)
}

// required int32 iNonce = 4 [default = -1];
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationRes_TVR2LTCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgTicketProvisionValidationRes_TVR2LTCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.iNonce)
  return _internal_inonce();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.iNonce)
}

// required int64 tTimeStamp = 5 [default = -1];
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketProvisionValidationRes_TVR2LTCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgTicketProvisionValidationRes_TVR2LTCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 6;
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgTicketProvisionValidationRes_TVR2LTCA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgTicketProvisionValidationRes_TVR2LTCA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stErrInfo)
}
inline ::interfaces::msgError* msgTicketProvisionValidationRes_TVR2LTCA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgTicketProvisionValidationRes_TVR2LTCA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgTicketProvisionValidationRes_TVR2LTCA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgTicketProvisionValidationRes_TVR2LTCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgTicketProvisionValidationRes_TVR2LTCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgTicketProvisionValidationRes_TVR2LTCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgTicketProvisionValidationRes_TVR2LTCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSign)
  return _internal_stsign();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSign)
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationRes_TVR2LTCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationRes_TVR2LTCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationRes_TVR2LTCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgTicketProvisionValidationRes_TVR2LTCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgTicketProvisionValidationRes_TVR2LTCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgTicketProvisionValidationRes_TVR2LTCA.stSign)
}

// -------------------------------------------------------------------

// msgPsnymProvisionValidationReq_PCA2PVR

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationReq_PCA2PVR::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationReq_PCA2PVR::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymProvisionValidationReq_PCA2PVR::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymProvisionValidationReq_PCA2PVR::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationReq_PCA2PVR::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSigner)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationReq_PCA2PVR::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000004u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationReq_PCA2PVR::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSigner)
}

// required string strPCAECPubKey = 3 [default = ""];
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_strpcaecpubkey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_strpcaecpubkey() const {
  return _internal_has_strpcaecpubkey();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_strpcaecpubkey() {
  strpcaecpubkey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& msgPsnymProvisionValidationReq_PCA2PVR::strpcaecpubkey() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
  return _internal_strpcaecpubkey();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strpcaecpubkey(const std::string& value) {
  _internal_set_strpcaecpubkey(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::mutable_strpcaecpubkey() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
  return _internal_mutable_strpcaecpubkey();
}
inline const std::string& msgPsnymProvisionValidationReq_PCA2PVR::_internal_strpcaecpubkey() const {
  return strpcaecpubkey_.Get();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::_internal_set_strpcaecpubkey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strpcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strpcaecpubkey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strpcaecpubkey_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strpcaecpubkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strpcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strpcaecpubkey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strpcaecpubkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::_internal_mutable_strpcaecpubkey() {
  _has_bits_[0] |= 0x00000001u;
  return strpcaecpubkey_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::release_strpcaecpubkey() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
  if (!_internal_has_strpcaecpubkey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strpcaecpubkey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_allocated_strpcaecpubkey(std::string* strpcaecpubkey) {
  if (strpcaecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpcaecpubkey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strpcaecpubkey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_release_strpcaecpubkey() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return strpcaecpubkey_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_set_allocated_strpcaecpubkey(
    std::string* strpcaecpubkey) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strpcaecpubkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strpcaecpubkey_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strpcaecpubkey, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strPCAECPubKey)
}

// required string strHashedTicket = 4 [default = ""];
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_strhashedticket() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_strhashedticket() const {
  return _internal_has_strhashedticket();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_strhashedticket() {
  strhashedticket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& msgPsnymProvisionValidationReq_PCA2PVR::strhashedticket() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
  return _internal_strhashedticket();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strhashedticket(const std::string& value) {
  _internal_set_strhashedticket(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::mutable_strhashedticket() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
  return _internal_mutable_strhashedticket();
}
inline const std::string& msgPsnymProvisionValidationReq_PCA2PVR::_internal_strhashedticket() const {
  return strhashedticket_.Get();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::_internal_set_strhashedticket(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  strhashedticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strhashedticket(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  strhashedticket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strhashedticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  strhashedticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_strhashedticket(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  strhashedticket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::_internal_mutable_strhashedticket() {
  _has_bits_[0] |= 0x00000002u;
  return strhashedticket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::release_strhashedticket() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
  if (!_internal_has_strhashedticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return strhashedticket_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_allocated_strhashedticket(std::string* strhashedticket) {
  if (strhashedticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strhashedticket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strhashedticket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}
inline std::string* msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_release_strhashedticket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return strhashedticket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_set_allocated_strhashedticket(
    std::string* strhashedticket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (strhashedticket != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  strhashedticket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      strhashedticket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.strHashedTicket)
}

// required int32 iNonce = 5 [default = -1];
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationReq_PCA2PVR::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationReq_PCA2PVR::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.iNonce)
  return _internal_inonce();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.iNonce)
}

// required int64 tTimeStamp = 6 [default = -1];
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymProvisionValidationReq_PCA2PVR::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymProvisionValidationReq_PCA2PVR::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.tTimeStamp)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgPsnymProvisionValidationReq_PCA2PVR::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymProvisionValidationReq_PCA2PVR::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::interfaces::msgSignature& msgPsnymProvisionValidationReq_PCA2PVR::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymProvisionValidationReq_PCA2PVR::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSign)
  return _internal_stsign();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSign)
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationReq_PCA2PVR::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationReq_PCA2PVR::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSign)
  _has_bits_[0] &= ~0x00000008u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationReq_PCA2PVR::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000008u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationReq_PCA2PVR::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymProvisionValidationReq_PCA2PVR::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationReq_PCA2PVR.stSign)
}

// -------------------------------------------------------------------

// msgPsnymProvisionValidationRes_PVR2PCA

// required int32 iReqType = 1 [default = -1];
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_ireqtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_ireqtype() const {
  return _internal_has_ireqtype();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_ireqtype() {
  ireqtype_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationRes_PVR2PCA::_internal_ireqtype() const {
  return ireqtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationRes_PVR2PCA::ireqtype() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.iReqType)
  return _internal_ireqtype();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::_internal_set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ireqtype_ = value;
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_ireqtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ireqtype(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.iReqType)
}

// optional .interfaces.msgSignerInfo stSigner = 2;
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_stsigner() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || stsigner_ != nullptr);
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_stsigner() const {
  return _internal_has_stsigner();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_stsigner() {
  if (stsigner_ != nullptr) stsigner_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::interfaces::msgSignerInfo& msgPsnymProvisionValidationRes_PVR2PCA::_internal_stsigner() const {
  const ::interfaces::msgSignerInfo* p = stsigner_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignerInfo*>(
      &::interfaces::_msgSignerInfo_default_instance_);
}
inline const ::interfaces::msgSignerInfo& msgPsnymProvisionValidationRes_PVR2PCA::stsigner() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSigner)
  return _internal_stsigner();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_set_allocated_stsigner(
    ::interfaces::msgSignerInfo* stsigner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsigner_);
  }
  stsigner_ = stsigner;
  if (stsigner) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSigner)
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationRes_PVR2PCA::release_stsigner() {
  auto temp = unsafe_arena_release_stsigner();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_release_stsigner() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSigner)
  _has_bits_[0] &= ~0x00000001u;
  ::interfaces::msgSignerInfo* temp = stsigner_;
  stsigner_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationRes_PVR2PCA::_internal_mutable_stsigner() {
  _has_bits_[0] |= 0x00000001u;
  if (stsigner_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignerInfo>(GetArena());
    stsigner_ = p;
  }
  return stsigner_;
}
inline ::interfaces::msgSignerInfo* msgPsnymProvisionValidationRes_PVR2PCA::mutable_stsigner() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSigner)
  return _internal_mutable_stsigner();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_allocated_stsigner(::interfaces::msgSignerInfo* stsigner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsigner_;
  }
  if (stsigner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsigner);
    if (message_arena != submessage_arena) {
      stsigner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsigner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stsigner_ = stsigner;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSigner)
}

// required uint32 chStatus = 3 [default = 0];
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_chstatus() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_chstatus() const {
  return _internal_has_chstatus();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_chstatus() {
  chstatus_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymProvisionValidationRes_PVR2PCA::_internal_chstatus() const {
  return chstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msgPsnymProvisionValidationRes_PVR2PCA::chstatus() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.chStatus)
  return _internal_chstatus();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::_internal_set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  chstatus_ = value;
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_chstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chstatus(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.chStatus)
}

// required int32 iNonce = 4 [default = -1];
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_inonce() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_inonce() const {
  return _internal_has_inonce();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_inonce() {
  inonce_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationRes_PVR2PCA::_internal_inonce() const {
  return inonce_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msgPsnymProvisionValidationRes_PVR2PCA::inonce() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.iNonce)
  return _internal_inonce();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::_internal_set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  inonce_ = value;
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_inonce(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inonce(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.iNonce)
}

// required int64 tTimeStamp = 5 [default = -1];
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_ttimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_ttimestamp() const {
  return _internal_has_ttimestamp();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_ttimestamp() {
  ttimestamp_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymProvisionValidationRes_PVR2PCA::_internal_ttimestamp() const {
  return ttimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msgPsnymProvisionValidationRes_PVR2PCA::ttimestamp() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.tTimeStamp)
  return _internal_ttimestamp();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::_internal_set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  ttimestamp_ = value;
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_ttimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ttimestamp(value);
  // @@protoc_insertion_point(field_set:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.tTimeStamp)
}

// required .interfaces.msgError stErrInfo = 6;
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_sterrinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sterrinfo_ != nullptr);
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_sterrinfo() const {
  return _internal_has_sterrinfo();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_sterrinfo() {
  if (sterrinfo_ != nullptr) sterrinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::interfaces::msgError& msgPsnymProvisionValidationRes_PVR2PCA::_internal_sterrinfo() const {
  const ::interfaces::msgError* p = sterrinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgError*>(
      &::interfaces::_msgError_default_instance_);
}
inline const ::interfaces::msgError& msgPsnymProvisionValidationRes_PVR2PCA::sterrinfo() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stErrInfo)
  return _internal_sterrinfo();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_set_allocated_sterrinfo(
    ::interfaces::msgError* sterrinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sterrinfo_);
  }
  sterrinfo_ = sterrinfo;
  if (sterrinfo) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stErrInfo)
}
inline ::interfaces::msgError* msgPsnymProvisionValidationRes_PVR2PCA::release_sterrinfo() {
  auto temp = unsafe_arena_release_sterrinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgError* msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_release_sterrinfo() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stErrInfo)
  _has_bits_[0] &= ~0x00000002u;
  ::interfaces::msgError* temp = sterrinfo_;
  sterrinfo_ = nullptr;
  return temp;
}
inline ::interfaces::msgError* msgPsnymProvisionValidationRes_PVR2PCA::_internal_mutable_sterrinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (sterrinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgError>(GetArena());
    sterrinfo_ = p;
  }
  return sterrinfo_;
}
inline ::interfaces::msgError* msgPsnymProvisionValidationRes_PVR2PCA::mutable_sterrinfo() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stErrInfo)
  return _internal_mutable_sterrinfo();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_allocated_sterrinfo(::interfaces::msgError* sterrinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sterrinfo_;
  }
  if (sterrinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sterrinfo);
    if (message_arena != submessage_arena) {
      sterrinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sterrinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sterrinfo_ = sterrinfo;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stErrInfo)
}

// optional .interfaces.msgSignature stSign = 7;
inline bool msgPsnymProvisionValidationRes_PVR2PCA::_internal_has_stsign() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || stsign_ != nullptr);
  return value;
}
inline bool msgPsnymProvisionValidationRes_PVR2PCA::has_stsign() const {
  return _internal_has_stsign();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::clear_stsign() {
  if (stsign_ != nullptr) stsign_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::interfaces::msgSignature& msgPsnymProvisionValidationRes_PVR2PCA::_internal_stsign() const {
  const ::interfaces::msgSignature* p = stsign_;
  return p != nullptr ? *p : *reinterpret_cast<const ::interfaces::msgSignature*>(
      &::interfaces::_msgSignature_default_instance_);
}
inline const ::interfaces::msgSignature& msgPsnymProvisionValidationRes_PVR2PCA::stsign() const {
  // @@protoc_insertion_point(field_get:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSign)
  return _internal_stsign();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_set_allocated_stsign(
    ::interfaces::msgSignature* stsign) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stsign_);
  }
  stsign_ = stsign;
  if (stsign) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSign)
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationRes_PVR2PCA::release_stsign() {
  auto temp = unsafe_arena_release_stsign();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationRes_PVR2PCA::unsafe_arena_release_stsign() {
  // @@protoc_insertion_point(field_release:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSign)
  _has_bits_[0] &= ~0x00000004u;
  ::interfaces::msgSignature* temp = stsign_;
  stsign_ = nullptr;
  return temp;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationRes_PVR2PCA::_internal_mutable_stsign() {
  _has_bits_[0] |= 0x00000004u;
  if (stsign_ == nullptr) {
    auto* p = CreateMaybeMessage<::interfaces::msgSignature>(GetArena());
    stsign_ = p;
  }
  return stsign_;
}
inline ::interfaces::msgSignature* msgPsnymProvisionValidationRes_PVR2PCA::mutable_stsign() {
  // @@protoc_insertion_point(field_mutable:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSign)
  return _internal_mutable_stsign();
}
inline void msgPsnymProvisionValidationRes_PVR2PCA::set_allocated_stsign(::interfaces::msgSignature* stsign) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete stsign_;
  }
  if (stsign) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(stsign);
    if (message_arena != submessage_arena) {
      stsign = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stsign, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  stsign_ = stsign;
  // @@protoc_insertion_point(field_set_allocated:interfaces.msgPsnymProvisionValidationRes_PVR2PCA.stSign)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interfaces

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::interfaces::msgSignerIdentifierType_SignerIdentifierType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgSignerIdentifierType_SignerIdentifierType>() {
  return ::interfaces::msgSignerIdentifierType_SignerIdentifierType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgSubType_SubjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgSubType_SubjectType>() {
  return ::interfaces::msgSubType_SubjectType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgSubTypeFlags_SubjectTypeFlags> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgSubTypeFlags_SubjectTypeFlags>() {
  return ::interfaces::msgSubTypeFlags_SubjectTypeFlags_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgAIDType_AIDType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgAIDType_AIDType>() {
  return ::interfaces::msgAIDType_AIDType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgRegionType_RegionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgRegionType_RegionType>() {
  return ::interfaces::msgRegionType_RegionType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgWSASignerScope_WSASignerScope> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgWSASignerScope_WSASignerScope>() {
  return ::interfaces::msgWSASignerScope_WSASignerScope_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgRequestScopeType_RequestScopeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgRequestScopeType_RequestScopeType>() {
  return ::interfaces::msgRequestScopeType_RequestScopeType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::msgCRLType_CRLType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::msgCRLType_CRLType>() {
  return ::interfaces::msgCRLType_CRLType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Interfaces_2eproto
